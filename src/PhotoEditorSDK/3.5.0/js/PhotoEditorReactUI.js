(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("./PhotoEditorSDK"));
	else if(typeof define === 'function' && define.amd)
		define([["./PhotoEditorSDK"]], factory);
	else if(typeof exports === 'object')
		exports["PhotoEditorReactUI"] = factory(require("./PhotoEditorSDK"));
	else
		root["PhotoEditorReactUI"] = factory(root["PhotoEditorSDK"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_66__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 410);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

"use strict";
"use strict";

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageFormat = exports.ColorMatrix = exports.now = exports.Log = exports.cancelAnimationFrame = exports.requestAnimationFrame = exports.SDK = exports.EXIF = exports.ReactDOM = exports.UniformType = exports.OptionType = exports.RenderType = exports.Base64 = exports.Color = exports.SharedState = exports.Constants = exports.EventEmitter = exports.SDKUtils = exports.Vector2 = exports.ReactBEM = exports.BaseComponent = exports.Classnames = exports.BEM = exports.React = exports.Utils = exports.Promise = undefined;

var _photoeditorsdk = __webpack_require__(66);

var _photoeditorsdk2 = _interopRequireDefault(_photoeditorsdk);

var _react = __webpack_require__(113);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(342);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = __webpack_require__(127);

var _classnames2 = _interopRequireDefault(_classnames);

var _bem = __webpack_require__(120);

var _bem2 = _interopRequireDefault(_bem);

var _reactBem = __webpack_require__(123);

var _reactBem2 = _interopRequireDefault(_reactBem);

var _baseComponent = __webpack_require__(175);

var _baseComponent2 = _interopRequireDefault(_baseComponent);

var _utils = __webpack_require__(269);

var _utils2 = _interopRequireDefault(_utils);

var _constants = __webpack_require__(250);

var _constants2 = _interopRequireDefault(_constants);

var _sharedState = __webpack_require__(268);

var _sharedState2 = _interopRequireDefault(_sharedState);

var _animationFrame = __webpack_require__(271);

var _log = __webpack_require__(124);

var _log2 = _interopRequireDefault(_log);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Base64 = _photoeditorsdk2.default.Base64;
var Color = _photoeditorsdk2.default.Color;
var ColorMatrix = _photoeditorsdk2.default.Math.ColorMatrix;
var EventEmitter = _photoeditorsdk2.default.EventEmitter;
var EXIF = _photoeditorsdk2.default.EXIF;
var OptionType = _photoeditorsdk2.default.OptionType;
var Promise = _photoeditorsdk2.default.Promise;
var SDKUtils = _photoeditorsdk2.default.Utils;
var RenderType = _photoeditorsdk2.default.RenderType;
var ImageFormat = _photoeditorsdk2.default.ImageFormat;
var SDK = _photoeditorsdk2.default;
var UniformType = _photoeditorsdk2.default.UniformType;
var Vector2 = _photoeditorsdk2.default.Math.Vector2;

var now = typeof window !== 'undefined' && window.performance && window.performance.now ? window.performance.now.bind(window.performance) : __webpack_require__(337);

exports.Promise = Promise;
exports.Utils = _utils2.default;
exports.React = _react2.default;
exports.BEM = _bem2.default;
exports.Classnames = _classnames2.default;
exports.BaseComponent = _baseComponent2.default;
exports.ReactBEM = _reactBem2.default;
exports.Vector2 = Vector2;
exports.SDKUtils = SDKUtils;
exports.EventEmitter = EventEmitter;
exports.Constants = _constants2.default;
exports.SharedState = _sharedState2.default;
exports.Color = Color;
exports.Base64 = Base64;
exports.RenderType = RenderType;
exports.OptionType = OptionType;
exports.UniformType = UniformType;
exports.ReactDOM = _reactDom2.default;
exports.EXIF = EXIF;
exports.SDK = SDK;
exports.requestAnimationFrame = _animationFrame.requestAnimationFrame;
exports.cancelAnimationFrame = _animationFrame.cancelAnimationFrame;
exports.Log = _log2.default;
exports.now = now;
exports.ColorMatrix = ColorMatrix;
exports.ImageFormat = ImageFormat;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(277);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(276);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(56);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _typeof2 = __webpack_require__(56);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

function invariant(condition, format, a, b, c, d, e, f) {
  if (false) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;

/***/ },
/* 5 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule reactProdInvariant
 * 
 */
'use strict';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyFunction = __webpack_require__(16);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (false) {
  warning = function warning(condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    }
  };
}

module.exports = warning;

/***/ },
/* 7 */
/***/ function(module, exports) {

"use strict";
'use strict';
/* eslint-disable no-unused-vars */
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (e) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (Object.getOwnPropertySymbols) {
			symbols = Object.getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentTree
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var DOMProperty = __webpack_require__(37);
var ReactDOMComponentFlags = __webpack_require__(148);

var invariant = __webpack_require__(4);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID == null) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
     true ?  false ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ?  false ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;

/***/ },
/* 9 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstrumentation
 */

'use strict';

var debugTool = null;

if (false) {
  var ReactDebugTool = require('./ReactDebugTool');
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _backButtonComponent = __webpack_require__(174);

var _backButtonComponent2 = _interopRequireDefault(_backButtonComponent);

var _doneButtonComponent = __webpack_require__(225);

var _doneButtonComponent2 = _interopRequireDefault(_doneButtonComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ControlsComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ControlsComponent, _BaseComponent);

  function ControlsComponent() {
    (0, _classCallCheck3.default)(this, ControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._hasBackButton = true;
    _this._hasDoneButton = false;
    _this._backButtonClicked = false;

    _this._bindAll('_onBackClick', '_onDoneClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  ControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    this._backButtonClicked = true;
    this.props.onSwitchControls('back');
  };

  /**
   * Gets called when the user clicks the done button
   * @param {Event} e
   * @private
   */


  ControlsComponent.prototype._onDoneClick = function _onDoneClick(e) {
    this.props.onSwitchControls('home');
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  ControlsComponent.prototype.renderControls = function renderControls() {
    return null;
  };

  /**
   * Renders the overlay controls of this component
   * @return {ReactBEM.Element}
   */


  ControlsComponent.prototype.renderOverlayControls = function renderOverlayControls() {
    return null;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    var forcedControl = this.props.options && this.props.options.forcedControl;
    var backButton = this._hasBackButton && !forcedControl ? _globals.ReactBEM.createElement(_backButtonComponent2.default, { onClick: this._onBackClick }) : null;

    var doneButton = this._hasDoneButton || forcedControl ? _globals.ReactBEM.createElement(_doneButtonComponent2.default, { onClick: this._onDoneClick }) : null;

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:controls' },
      this.renderOverlayControls(),
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:table' },
        backButton,
        this.renderControls(),
        doneButton
      )
    );
  };

  return ControlsComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ControlsComponent;


ControlsComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

/**
 * The base class for all controls
 * @class
 * @memberof PhotoEditorSDK.UI.ReactUI
 */
var Control = function () {
  function Control() {
    (0, _classCallCheck3.default)(this, Control);
  }

  /**
   * Returns the initial shared state for this control
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @param  {Object} additionalState = {}
   * @return {Object}
   * @override
   */
  Control.prototype.getInitialSharedState = function getInitialSharedState() {
    return {};
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @override
   */


  Control.prototype.isAvailable = function isAvailable(editor) {
    return false;
  };

  return Control;
}();

/**
 * This control's top bar component. Used for the upper part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.TopBarControlsComponent}
 */


Control.topBarControlsComponent = null;

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 */
Control.controlsComponent = null;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 */
Control.canvasControlsComponent = null;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
Control.identifier = null;

/**
 * This control's icon path
 * @type {String}
 */
Control.iconPath = null;

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 */
Control.languageKey = null;

/**
 * The default options for this control
 * @type {Object}
 */
Control.defaultOptions = {};

exports.default = Control;

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _defineProperty = __webpack_require__(125);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

/***/ },
/* 14 */
/***/ function(module, exports) {

var core = module.exports = {version: '2.4.0'};
if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

var store      = __webpack_require__(82)('wks')
  , uid        = __webpack_require__(58)
  , Symbol     = __webpack_require__(24).Symbol
  , USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function(name){
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;

/***/ },
/* 16 */
/***/ function(module, exports) {

"use strict";
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var NATIVE_SCROLLBAR_WIDTH = 25;
var SCROLLBAR_WIDTH = 12;

var ScrollbarComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ScrollbarComponent, _BaseComponent);

  function ScrollbarComponent() {
    (0, _classCallCheck3.default)(this, ScrollbarComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call(this));

    _this._needsStyleFixes = true;
    _this._isDragging = false;
    _this._bindAll('_onButtonDragStart', '_onButtonDrag', '_onButtonDragStop', '_onBarDragStart', '_onBarDrag', '_onBarDragStop', '_onListScroll');
    _this.state = {
      buttonSize: 0,
      buttonPosition: 0,
      buttonVisible: false
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after the component has been mounted
   */


  ScrollbarComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this.update();
  };

  ScrollbarComponent.prototype.fixStyles = function fixStyles() {
    if (!_globals.Utils.isMobile()) {
      this._updateListSize();
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user scrolls the list
   * @private
   */


  ScrollbarComponent.prototype._onListScroll = function _onListScroll() {
    if (this._isDragging) return;

    var direction = this._getDirection();

    var listScrollSize = void 0,
        listScrollPosition = void 0,
        backgroundScrollSize = void 0;
    if (direction === ScrollbarComponent.HORIZONTAL) {
      listScrollSize = this._list.scrollWidth - this._list.offsetWidth;
      listScrollPosition = this._list.scrollLeft;
      backgroundScrollSize = this._node.offsetWidth - this.state.buttonSize;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      listScrollSize = this._list.scrollHeight - this._list.offsetHeight;
      listScrollPosition = this._list.scrollTop;
      backgroundScrollSize = this._node.offsetHeight - this.state.buttonSize;
    }

    var progress = listScrollPosition / listScrollSize;
    this.setState({
      buttonPosition: backgroundScrollSize * progress
    });
  };

  /**
   * Gets called when the user presses a mouse button on the bar
   * @private
   */


  ScrollbarComponent.prototype._onButtonDragStart = function _onButtonDragStart(e) {
    this._isDragging = true;
    this._initialButtonPosition = this.state.buttonPosition || 0;
  };

  /**
   * Gets called while the user drags the button
   * @param {Vector2} diff
   * @private
   */


  ScrollbarComponent.prototype._onButtonDrag = function _onButtonDrag(diff) {
    var direction = this._getDirection();

    var buttonPosition = void 0;
    if (direction === ScrollbarComponent.HORIZONTAL) {
      buttonPosition = this._initialButtonPosition + diff.x;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      buttonPosition = this._initialButtonPosition + diff.y;
    }
    this._setButtonPosition(buttonPosition);
  };

  /**
   * Gets called when the user releases the button
   * @private
   */


  ScrollbarComponent.prototype._onButtonDragStop = function _onButtonDragStop() {
    this._isDragging = false;
  };

  /**
   * Gets called when the user starts dragging the bar
   * @param  {Event} e
   * @private
   */


  ScrollbarComponent.prototype._onBarDragStart = function _onBarDragStart(e) {
    var mousePosition = _globals.Utils.getEventPosition(e);
    this._initialPosition = mousePosition.clone();
    var boundingRect = this._node.getBoundingClientRect();
    var elementOffset = new _globals.Vector2(boundingRect.left, boundingRect.top);

    var relativePosition = mousePosition.clone().subtract(elementOffset);

    var direction = this._getDirection();
    if (direction === ScrollbarComponent.HORIZONTAL) {
      this._setButtonPosition(relativePosition.x - this.state.buttonSize / 2);
    } else if (direction === ScrollbarComponent.VERTICAL) {
      this._setButtonPosition(relativePosition.y - this.state.buttonSize / 2);
    }

    document.addEventListener('mousemove', this._onBarDrag);
    document.addEventListener('touchmove', this._onBarDrag);
    document.addEventListener('mouseup', this._onBarDragStop);
    document.addEventListener('touchend', this._onBarDragStop);
  };

  /**
   * Gets called while the user drags the bar
   * @param  {Event} e
   * @private
   */


  ScrollbarComponent.prototype._onBarDrag = function _onBarDrag(e) {
    var mousePosition = _globals.Utils.getEventPosition(e);

    var boundingRect = this._node.getBoundingClientRect();
    var elementOffset = new _globals.Vector2(boundingRect.left, boundingRect.top);

    var relativePosition = mousePosition.clone().subtract(elementOffset);
    var direction = this._getDirection();
    if (direction === ScrollbarComponent.HORIZONTAL) {
      this._setButtonPosition(relativePosition.x - this.state.buttonSize / 2);
    } else if (direction === ScrollbarComponent.VERTICAL) {
      this._setButtonPosition(relativePosition.y - this.state.buttonSize / 2);
    }
  };

  /**
   * Gets called when the user releases the bar
   * @private
   */


  ScrollbarComponent.prototype._onBarDragStop = function _onBarDragStop() {
    document.removeEventListener('mousemove', this._onBarDrag);
    document.removeEventListener('touchmove', this._onBarDrag);
    document.removeEventListener('mouseup', this._onBarDragStop);
    document.removeEventListener('touchend', this._onBarDragStop);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Sets the button position to the given value
   * @param {Number} buttonPosition
   * @private
   */


  ScrollbarComponent.prototype._setButtonPosition = function _setButtonPosition(buttonPosition) {
    var direction = this._getDirection();

    var scrollableButtonSize = void 0,
        scrollableListSize = void 0;
    if (direction === ScrollbarComponent.HORIZONTAL) {
      scrollableButtonSize = this._node.offsetWidth - this.state.buttonSize;
      scrollableListSize = this._list.scrollWidth - this._list.offsetWidth;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      scrollableButtonSize = this._node.offsetHeight - this.state.buttonSize;
      scrollableListSize = this._list.scrollHeight - this._list.offsetHeight;
    }

    // Clamp button position
    buttonPosition = Math.max(0, buttonPosition);
    buttonPosition = Math.min(buttonPosition, scrollableButtonSize);

    // Set button position
    this.setState({ buttonPosition: buttonPosition });

    // Update list scroll position
    var progress = buttonPosition / scrollableButtonSize;
    var scrollPosition = scrollableListSize * progress;

    if (direction === ScrollbarComponent.HORIZONTAL) {
      this._list.scrollLeft = scrollPosition;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      this._list.scrollTop = scrollPosition;
    }
  };

  /**
   * Updates the button position and size
   * @param {Function} cb
   * @private
   */


  ScrollbarComponent.prototype._updateButtonSize = function _updateButtonSize(cb) {
    var buttonSize = 0;
    var buttonVisible = false;
    var parentSize = void 0,
        parentScrollSize = void 0;

    var direction = this._getDirection();
    if (direction === ScrollbarComponent.HORIZONTAL) {
      parentSize = this._list.clientWidth;
      parentScrollSize = this._list.scrollWidth;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      parentSize = this._list.offsetHeight;
      parentScrollSize = this._list.scrollHeight;
    }

    buttonSize = parentSize / parentScrollSize * parentSize;
    buttonVisible = parentScrollSize > parentSize;

    this.setState({ buttonSize: buttonSize, buttonVisible: buttonVisible }, cb);
  };

  /**
   * Updates the list size
   * @private
   */


  ScrollbarComponent.prototype._updateListSize = function _updateListSize() {
    if (!this._list) return;

    var direction = this._getDirection();
    if (direction === ScrollbarComponent.HORIZONTAL) {
      this._list.style.height = '';
      var fullDimensions = this._getFullListDimensions();
      this._listSize = fullDimensions.y;
    } else if (direction === ScrollbarComponent.VERTICAL) {
      this._list.style.width = '';
      var _fullDimensions = this._getFullListDimensions();
      this._listSize = _fullDimensions.x;
    }
  };

  /**
   * In order to get the absolute width and height of the list, including the scrollbar,
   * we need to make use of `getBoundingClientRect`
   * @return {PhotoEditorSDK.Math.Vector2}
   * @private
   */


  ScrollbarComponent.prototype._getFullListDimensions = function _getFullListDimensions() {
    var rect = this._list.getBoundingClientRect();
    return new _globals.Vector2(rect.width, rect.height);
  };

  // -------------------------------------------------------------------------- PUBLIC API

  /**
   * Updates the dimensions and stuff
   */


  ScrollbarComponent.prototype.update = function update() {
    var _this2 = this;

    if (_globals.Utils.isMobile()) {
      return;
    }

    var _refs = this.refs;
    var root = _refs.root;
    var list = _refs.list;

    this._node = root;
    this._list = list;

    var direction = this._getDirection();
    this._updateButtonSize(function () {
      if (!_this2._listSize) {
        _this2._updateListSize();
      }

      var newListSize = _this2._listSize;
      if (_this2.state.buttonVisible) {
        newListSize += NATIVE_SCROLLBAR_WIDTH * 2;
      }

      if (direction === ScrollbarComponent.HORIZONTAL) {
        _this2._list.style.height = newListSize + 'px';
        _this2._node.style.top = _this2._listSize - SCROLLBAR_WIDTH + 'px';
        _this2._node.style.width = _this2._list.offsetWidth + 'px';
      } else if (direction === ScrollbarComponent.VERTICAL) {
        _this2._list.style.width = newListSize + 'px';
        _this2._node.style.left = _this2._listSize - SCROLLBAR_WIDTH + 'px';
        _this2._node.style.height = _this2._list.offsetHeight + 'px';
      }
    });

    this._list.addEventListener('scroll', this._onListScroll);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns this scrollbar's direction
   * @return {String}
   * @private
   */


  ScrollbarComponent.prototype._getDirection = function _getDirection() {
    return this.props.direction || 'horizontal';
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the button's style object
   * @return {Object}
   * @private
   */


  ScrollbarComponent.prototype._getButtonStyle = function _getButtonStyle() {
    var direction = this._getDirection();
    if (direction === 'horizontal') {
      return {
        left: this.state.buttonPosition,
        width: this.state.buttonSize
      };
    } else {
      return {
        top: this.state.buttonPosition,
        height: this.state.buttonSize
      };
    }
  };

  // -------------------------------------------------------------------------- GETTERS

  ScrollbarComponent.prototype.getList = function getList() {
    return this.refs.list;
  };

  ScrollbarComponent.prototype.getRoot = function getRoot() {
    return this.refs.root;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ScrollbarComponent.prototype.renderWithBEM = function renderWithBEM() {
    if (_globals.Utils.isMobile()) {
      return this.props.children;
    }

    var buttonStyle = this._getButtonStyle();
    var scrollbarStyle = {
      display: this.state.buttonVisible ? 'block' : 'none'
    };

    var child = _globals.React.cloneElement(this.props.children, {
      ref: 'list'
    });

    return _globals.ReactBEM.createElement(
      'div',
      null,
      child,
      _globals.ReactBEM.createElement(
        'div',
        {
          bem: '$b:scrollbar m:' + (this.props.direction || 'horizontal') + ' m:' + (this.state.buttonVisible ? 'visible' : 'invisible'),
          ref: 'root',
          style: scrollbarStyle,
          onMouseDown: this._onBarDragStart,
          onTouchStart: this._onBarDragStart },
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onButtonDragStart,
            onDrag: this._onButtonDrag,
            onStop: this._onButtonDragStop },
          _globals.ReactBEM.createElement('div', {
            bem: 'e:bar',
            style: buttonStyle,
            onMouseDown: this._onButtonDown })
        )
      )
    );
  };

  return ScrollbarComponent;
}(_globals.BaseComponent);

exports.default = ScrollbarComponent;


ScrollbarComponent.HORIZONTAL = 'horizontal';
ScrollbarComponent.VERTICAL = 'vertical';

ScrollbarComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass2 = __webpack_require__(126);

var _createClass3 = _interopRequireDefault(_createClass2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Modal = function (_EventEmitter) {
  (0, _inherits3.default)(Modal, _EventEmitter);

  function Modal(type, title, text) {
    var overlay = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];
    (0, _classCallCheck3.default)(this, Modal);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this.type = type;
    _this.title = title;
    _this.text = text;
    _this.overlay = overlay;
    _this.data = null;
    return _this;
  }

  /**
   * Sets the data to the given one
   * @param {Object} data
   */


  Modal.prototype.setData = function setData(data) {
    this.data = data;
    this.emit('update');
  };

  /**
   * Closes this modal
   */


  Modal.prototype.close = function close() {
    this.emit('close');
  };

  return Modal;
}(_globals.EventEmitter); /*
                           * This file is part of PhotoEditorSDK.
                           *
                           * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                           * All rights reserved.
                           *
                           * Redistribution and use in source and binary forms, without
                           * modification, are permitted provided that the following license agreement
                           * is approved and a legal/financial contract was signed by the user.
                           * The license agreement can be found under following link:
                           *
                           * https://www.photoeditorsdk.com/LICENSE.txt
                           */

var ModalManager = function (_EventEmitter2) {
  (0, _inherits3.default)(ModalManager, _EventEmitter2);

  function ModalManager() {
    (0, _classCallCheck3.default)(this, ModalManager);

    var _this2 = (0, _possibleConstructorReturn3.default)(this, _EventEmitter2.call(this));

    _this2._modals = [];
    return _this2;
  }

  /**
   * Creates a loading modal
   * @param  {String} text
   * @return {Modal}
   */


  ModalManager.prototype.displayLoading = function displayLoading(text) {
    var modal = new Modal('loading', null, text);
    this.addModal(modal);
    return modal;
  };

  /**
   * Creates a progress modal
   * @param  {String} text
   * @return {Modal}
   */


  ModalManager.prototype.displayProgress = function displayProgress(text) {
    var progress = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];

    var modal = new Modal('progress', null, text);
    modal.setData({ progress: progress });
    this.addModal(modal);
    return modal;
  };

  /**
   * Creats a warning modal
   * @param  {String} title
   * @param  {String} text
   * @return {Modal}
   */


  ModalManager.prototype.displayWarning = function displayWarning(title, text) {
    var modal = new Modal('warning', title, text);
    this.addModal(modal);
    return modal;
  };

  /**
   * Creates an error modal
   * @param  {String} title
   * @param  {String} text
   * @param  {Boolean} overlay = true
   * @return {Modal}
   */


  ModalManager.prototype.displayError = function displayError(title, text) {
    var overlay = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

    var modal = new Modal('error', title, text, overlay);
    this.addModal(modal);
    return modal;
  };

  /**
   * Adds the given modal to the list of modals
   * @param {Modal} modal
   */


  ModalManager.prototype.addModal = function addModal(modal) {
    var _this3 = this;

    this._modals.push(modal);
    modal.on('close', function () {
      _this3.removeModal(modal);
    });
    modal.on('update', function () {
      _this3.emit('update');
    });
    this.emit('update');
  };

  /**
   * Removes the given modal from the list of modals
   * @param  {Modal} modal
   */


  ModalManager.prototype.removeModal = function removeModal(modal) {
    var index = this._modals.indexOf(modal);
    this._modals.splice(index, 1);
    this.emit('update');
  };

  /**
   * Returns the modals
   * @return {Array.<Modal>}
   */


  ModalManager.prototype.getModals = function getModals() {
    return this._modals;
  };

  /**
   * Returns the one and only instance of this class
   * @return {ModalManager}
   */


  (0, _createClass3.default)(ModalManager, null, [{
    key: 'instance',
    get: function get() {
      if (!this._instance) {
        this._instance = new ModalManager();
      }
      return this._instance;
    }
  }]);
  return ModalManager;
}(_globals.EventEmitter);

exports.default = ModalManager;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DraggableComponent = function (_BaseComponent) {
  (0, _inherits3.default)(DraggableComponent, _BaseComponent);

  function DraggableComponent() {
    (0, _classCallCheck3.default)(this, DraggableComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onDragStart', '_onDragMove', '_onDragEnd');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user stars dragging the child
   * @param {Event} e
   * @private
   */


  DraggableComponent.prototype._onDragStart = function _onDragStart(e) {
    if (this.props.disabled) return;

    e.preventDefault();
    e.stopPropagation();

    this._initialMousePosition = _globals.Utils.getEventPosition(e);

    document.addEventListener('mousemove', this._onDragMove);
    document.addEventListener('touchmove', this._onDragMove);
    document.addEventListener('mouseup', this._onDragEnd);
    document.addEventListener('touchend', this._onDragEnd);

    var element = this.refs.element;

    var boundingRect = element.getBoundingClientRect();
    var elementOffset = new _globals.Vector2(boundingRect.left, boundingRect.top);

    var relativePosition = this._initialMousePosition.clone().subtract(elementOffset);
    this.props.onStart && this.props.onStart(relativePosition, e);
  };

  /**
   * Gets called while the user drags the child
   * @param {Event} e
   * @private
   */


  DraggableComponent.prototype._onDragMove = function _onDragMove(e) {
    e.preventDefault();
    e.stopPropagation();

    var mousePosition = _globals.Utils.getEventPosition(e);
    if (!mousePosition) return;
    var mouseDiff = mousePosition.clone().subtract(this._initialMousePosition);

    this.props.onDrag && this.props.onDrag(mouseDiff, e);
  };

  /**
   * Gets called when the user stops dragging the child
   * @param {Event} e
   * @private
   */


  DraggableComponent.prototype._onDragEnd = function _onDragEnd(e) {
    e.preventDefault();
    e.stopPropagation();
    e.stopImmediatePropagation();

    this._onDragMove(e);

    document.removeEventListener('mousemove', this._onDragMove);
    document.removeEventListener('touchmove', this._onDragMove);
    document.removeEventListener('mouseup', this._onDragEnd);
    document.removeEventListener('touchend', this._onDragEnd);

    this.props.onStop && this.props.onStop(e);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {React.Element}
   */


  DraggableComponent.prototype.render = function render() {
    if (!this.props.children || this.props.children instanceof Array) {
      throw new Error('DraggableComponent expects exactly one child.');
    }

    return _globals.React.cloneElement(this.props.children, {
      onMouseDown: this._onDragStart,
      onTouchStart: this._onDragStart,
      ref: 'element'
    });
  };

  return DraggableComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = DraggableComponent;


DraggableComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var _assign = __webpack_require__(7);

var ReactCurrentOwner = __webpack_require__(28);

var warning = __webpack_require__(6);
var canDefineProperty = __webpack_require__(161);
var hasOwnProperty = Object.prototype.hasOwnProperty;

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (false) {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (false) {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (false) {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};
    var shadowChildren = Array.isArray(props.children) ? props.children.slice(0) : props.children;

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      Object.defineProperty(element, '_shadowChildren', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: shadowChildren
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._shadowChildren = shadowChildren;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(
      /* eslint-disable no-proto */
      config.__proto__ == null || config.__proto__ === Object.prototype,
      /* eslint-enable no-proto */
      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
    }

    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (false) {
    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

    // Create dummy `key` and `ref` property to `props` to warn users against its use
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;
        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
      return undefined;
    };
    warnAboutAccessingKey.isReactWarning = true;

    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;
        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
      return undefined;
    };
    warnAboutAccessingRef.isReactWarning = true;

    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
      if (!props.hasOwnProperty('key')) {
        Object.defineProperty(props, 'key', {
          get: warnAboutAccessingKey,
          configurable: true
        });
      }
      if (!props.hasOwnProperty('ref')) {
        Object.defineProperty(props, 'ref', {
          get: warnAboutAccessingRef,
          configurable: true
        });
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(
      /* eslint-disable no-proto */
      config.__proto__ == null || config.__proto__ === Object.prototype,
      /* eslint-enable no-proto */
      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
    }

    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

module.exports = ReactElement;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var CallbackQueue = __webpack_require__(143);
var PooledClass = __webpack_require__(27);
var ReactFeatureFlags = __webpack_require__(151);
var ReactReconciler = __webpack_require__(38);
var Transaction = __webpack_require__(53);

var invariant = __webpack_require__(4);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.props === component._renderedComponent._currentElement) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = __webpack_require__(60);

var PropagationPhases = keyMirror({ bubbled: null, captured: null });

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topAbort: null,
  topAnimationEnd: null,
  topAnimationIteration: null,
  topAnimationStart: null,
  topBlur: null,
  topCanPlay: null,
  topCanPlayThrough: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topDurationChange: null,
  topEmptied: null,
  topEncrypted: null,
  topEnded: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topInvalid: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topLoadedData: null,
  topLoadedMetadata: null,
  topLoadStart: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topPause: null,
  topPlay: null,
  topPlaying: null,
  topProgress: null,
  topRateChange: null,
  topReset: null,
  topScroll: null,
  topSeeked: null,
  topSeeking: null,
  topSelectionChange: null,
  topStalled: null,
  topSubmit: null,
  topSuspend: null,
  topTextInput: null,
  topTimeUpdate: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topTransitionEnd: null,
  topVolumeChange: null,
  topWaiting: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 */

'use strict';

var _assign = __webpack_require__(7);

var PooledClass = __webpack_require__(27);

var emptyFunction = __webpack_require__(16);
var warning = __webpack_require__(6);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (false) {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (false) {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (false) {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (false) {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (false) {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
     false ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

/***/ },
/* 24 */
/***/ function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

var anObject       = __webpack_require__(29)
  , IE8_DOM_DEFINE = __webpack_require__(130)
  , toPrimitive    = __webpack_require__(85)
  , dP             = Object.defineProperty;

exports.f = __webpack_require__(30) ? Object.defineProperty : function defineProperty(O, P, Attributes){
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if(IE8_DOM_DEFINE)try {
    return dP(O, P, Attributes);
  } catch(e){ /* empty */ }
  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
  if('value' in Attributes)O[P] = Attributes.value;
  return O;
};

/***/ },
/* 26 */
/***/ function(module, exports) {

"use strict";
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without losing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function keyOf(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};

module.exports = keyOf;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

/***/ },
/* 28 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */

var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(44);
module.exports = function(it){
  if(!isObject(it))throw TypeError(it + ' is not an object!');
  return it;
};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(43)(function(){
  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

var global    = __webpack_require__(24)
  , core      = __webpack_require__(14)
  , ctx       = __webpack_require__(74)
  , hide      = __webpack_require__(34)
  , PROTOTYPE = 'prototype';

var $export = function(type, name, source){
  var IS_FORCED = type & $export.F
    , IS_GLOBAL = type & $export.G
    , IS_STATIC = type & $export.S
    , IS_PROTO  = type & $export.P
    , IS_BIND   = type & $export.B
    , IS_WRAP   = type & $export.W
    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
    , expProto  = exports[PROTOTYPE]
    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
    , key, own, out;
  if(IS_GLOBAL)source = name;
  for(key in source){
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if(own && key in exports)continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function(C){
      var F = function(a, b, c){
        if(this instanceof C){
          switch(arguments.length){
            case 0: return new C;
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if(IS_PROTO){
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library` 
module.exports = $export;

/***/ },
/* 32 */
/***/ function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function(it, key){
  return hasOwnProperty.call(it, key);
};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(131)
  , defined = __webpack_require__(75);
module.exports = function(it){
  return IObject(defined(it));
};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

var dP         = __webpack_require__(25)
  , createDesc = __webpack_require__(46);
module.exports = __webpack_require__(30) ? function(object, key, value){
  return dP.f(object, key, createDesc(1, value));
} : function(object, key, value){
  object[key] = value;
  return object;
};

/***/ },
/* 35 */
/***/ function(module, exports) {

module.exports = {};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMLazyTree
 */

'use strict';

var DOMNamespaces = __webpack_require__(91);
var setInnerHTML = __webpack_require__(65);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(105);
var setTextContent = __webpack_require__(168);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (false) {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (false) {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   * @type {Object}
   */
  getPossibleStandardName:  false ? {} : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var ReactRef = __webpack_require__(380);
var ReactInstrumentation = __webpack_require__(10);

var warning = __webpack_require__(6);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
       false ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (false) {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CanvasControlsComponent = function (_BaseComponent) {
  (0, _inherits3.default)(CanvasControlsComponent, _BaseComponent);

  function CanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, CanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onCanvasZoomDone');
    return _this;
  }

  // -------------------------------------------------------------------------- HIT TEST

  /**
   * Checks if any other control reacts to a click at the given position
   * @param  {Vector2} clickPosition
   * @private
   */


  CanvasControlsComponent.prototype._performHitTest = function _performHitTest(clickPosition) {
    var container = this.refs.container;

    var containerRect = container.getBoundingClientRect();
    var containerPosition = new _globals.Vector2(containerRect.left, containerRect.top);

    var position = clickPosition.subtract(containerPosition);

    var editor = this.context.editor;

    var controls = editor.controls.getAvailable();

    // Check if any of the controls responds to a click
    // at the given position
    for (var identifier in controls) {
      var control = controls[identifier];
      var clickResponse = control.clickAtPosition && control.clickAtPosition(position, editor);

      if (clickResponse) {
        // Don't re-select an already selected item
        if (clickResponse.selectedSprite === this.getSharedState('selectedSprite')) {
          return true;
        }

        // Responds to click, switch to the controls
        this.props.onSwitchControls(control, clickResponse);
        return true;
      }
    }

    return false;
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called after the canvas has been zoomed in or out
   * @private
   */


  CanvasControlsComponent.prototype._onCanvasZoomDone = function _onCanvasZoomDone() {
    this.forceUpdate();
  };

  /**
   * Binds the events in _events
   * @protected
   */


  CanvasControlsComponent.prototype._bindEvents = function _bindEvents() {
    _BaseComponent.prototype._bindEvents.call(this);
    this.context.mediator.on(_globals.Constants.EVENTS.ZOOM_DONE, this._onCanvasZoomDone);
  };

  /**
   * Unbinds the events in _events
   * @protected
   */


  CanvasControlsComponent.prototype._unbindEvents = function _unbindEvents() {
    _BaseComponent.prototype._unbindEvents.call(this);
    this.context.mediator.off(_globals.Constants.EVENTS.ZOOM_DONE, this._onCanvasZoomDone);
  };

  return CanvasControlsComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = CanvasControlsComponent;


CanvasControlsComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _headerComponent = __webpack_require__(226);

var _headerComponent2 = _interopRequireDefault(_headerComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var ScreenComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ScreenComponent, _BaseComponent);

  function ScreenComponent() {
    (0, _classCallCheck3.default)(this, ScreenComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders the header (if enabled)
   * @return {ReactBEM.Element}
   * @private
   */
  ScreenComponent.prototype._renderHeader = function _renderHeader() {
    if (!this.context.options.showHeader) {
      return null;
    }
    return _globals.ReactBEM.createElement(_headerComponent2.default, null);
  };

  /**
   * Renders this screen
   * @return {ReactBEM.Element}
   * @private
   */


  ScreenComponent.prototype._renderScreen = function _renderScreen() {
    return _globals.ReactBEM.createElement('div', null);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ScreenComponent.prototype.renderWithBEM = function renderWithBEM() {
    var screenBEMSpecifier = 'b:screen';
    if (!this.context.options.showHeader) {
      screenBEMSpecifier += ' m:noHeader';
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: screenBEMSpecifier, className: !this.props.visible ? 'is-hidden' : null },
      this._renderHeader(),
      this._renderScreen()
    );
  };

  return ScreenComponent;
}(_globals.BaseComponent);

exports.default = ScreenComponent;


ScreenComponent.propTypes = {
  editor: _globals.React.PropTypes.any
};

ScreenComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(42);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */
var SliderComponent = function (_BaseComponent) {
  (0, _inherits3.default)(SliderComponent, _BaseComponent);

  function SliderComponent() {
    (0, _classCallCheck3.default)(this, SliderComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onKnobDragStart', '_onKnobDrag', '_onBarDragStart', '_onBarDrag', '_onMiddleDotDragStart');

    _this.state = {
      value: _this.props.value || 0,
      sliderPosition: 0,
      foregroundLeft: 0,
      foregroundWidth: 0
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after the component has been mounted
   */


  SliderComponent.prototype.componentDidMount = function componentDidMount() {
    // Trigger a re-render to position the knob
    this._setValue(this.state.value, false);
  };

  /**
   * Gets called when this component receives new props
   * @param  {Object} props
   */


  SliderComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (props.value !== this.state.value) {
      this._setValue(props.value, false);
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user presses a mouse button on the middle dot
   * @private
   */


  SliderComponent.prototype._onMiddleDotDragStart = function _onMiddleDotDragStart() {
    var newValue = this.props.minValue + (this.props.maxValue - this.props.minValue) / 2;
    this._setValue(newValue);
  };

  /**
   * Gets called when the user starts dragging the knob
   * @param  {Vector2} position
   * @private
   */


  SliderComponent.prototype._onKnobDragStart = function _onKnobDragStart(position) {
    this._initialSliderPosition = this.state.sliderPosition;
    this._initialPosition = position;
  };

  /**
   * Gets called while the user drags the knob
   * @param  {Vector2} diff
   * @private
   */


  SliderComponent.prototype._onKnobDrag = function _onKnobDrag(diff) {
    var bar = this.refs.bar;

    var barWidth = bar.offsetWidth;

    var newSliderPosition = this._initialSliderPosition + diff.x;
    newSliderPosition = Math.max(0, Math.min(newSliderPosition, barWidth));
    var progress = newSliderPosition / barWidth;
    var newValue = this.props.minValue + (this.props.maxValue - this.props.minValue) * progress;

    this._setValue(newValue);
  };

  /**
   * Gets called when the user starts dragging the bar
   * @param  {Vector2} position
   * @private
   */


  SliderComponent.prototype._onBarDragStart = function _onBarDragStart(position) {
    this._initialPosition = position.clone();

    var bar = this.refs.bar;

    var barWidth = bar.offsetWidth;
    var progress = position.x / barWidth;
    var newValue = this.props.minValue + (this.props.maxValue - this.props.minValue) * progress;
    this._setValue(newValue);
  };

  /**
   * Gets called while the user drags the bar
   * @param  {Vector2} diff
   * @private
   */


  SliderComponent.prototype._onBarDrag = function _onBarDrag(diff) {
    var position = this._initialPosition.clone().add(diff);

    var bar = this.refs.bar;

    var barWidth = bar.offsetWidth;
    var progress = position.x / barWidth;
    var newValue = this.props.minValue + (this.props.maxValue - this.props.minValue) * progress;
    newValue = Math.max(this.props.minValue, Math.min(this.props.maxValue, newValue));
    this._setValue(newValue);
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style for the knob (position)
   * @return {Object}
   * @private
   */


  SliderComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return { left: this.state.sliderPosition };
  };

  /**
   * Returns the style for the foreground bar
   * @return {Object}
   * @private
   */


  SliderComponent.prototype._getForegroundStyle = function _getForegroundStyle() {
    return {
      left: this.state.foregroundLeft,
      width: this.state.foregroundWidth
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Decides whether or not this slider should have a middle dot on the bar
   * @private
   */


  SliderComponent.prototype._displayMiddleDot = function _displayMiddleDot() {
    return this.props.middleDot !== false;
  };

  /**
   * Sets the value to the given value, updates the slider position
   * @param {Number} value
   * @param {Boolean} emitChange = true
   * @private
   */


  SliderComponent.prototype._setValue = function _setValue(value) {
    var emitChange = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    value = Math.round(value);
    var _props = this.props;
    var minValue = _props.minValue;
    var maxValue = _props.maxValue;

    var progress = (value - minValue) / (maxValue - minValue);

    // Calculate slider position
    var bar = this.refs.bar;

    var barWidth = bar.offsetWidth;
    var sliderPosition = barWidth * progress;

    // Calculate foreground position and width
    var foregroundWidth = progress * barWidth;
    var foregroundLeft = 0;
    if (this._displayMiddleDot()) {
      foregroundWidth = Math.abs(progress - 0.5) * barWidth;
      foregroundLeft = progress < 0.5 ? barWidth * 0.5 - foregroundWidth : '50%';
    }

    this.setState({ value: value, sliderPosition: sliderPosition, foregroundWidth: foregroundWidth, foregroundLeft: foregroundLeft });

    if (emitChange) {
      this.props.onChange && this.props.onChange(value);
    }
  };

  /**
   * Builds a display value from the given props
   * @param {Number} value
   * @return {String}
   * @private
   */


  SliderComponent.prototype._buildValue = function _buildValue(value) {
    // Limit decimals to two digits, if present
    if (value % 1 !== 0) {
      value = value.toFixed(2);
    }

    // Add positive value prefix (+) if value is > 0
    if (this.props.positiveValuePrefix && value >= 0) {
      value = '' + this.props.positiveValuePrefix + value;
    }

    // Add unit if present
    if (this.props.valueUnit) {
      value += this.props.valueUnit;
    }

    return value;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SliderComponent.prototype.renderWithBEM = function renderWithBEM() {
    var middleDot = null;
    if (this._displayMiddleDot()) {
      middleDot = _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onMiddleDotDragStart },
        _globals.ReactBEM.createElement('div', { bem: 'e:middleDot' })
      );
    }

    var foregroundProps = {
      style: this._getForegroundStyle()
    };

    var componentBem = '$b:slider' + (this.props.style ? ' m:' + this.props.style : '');
    return _globals.ReactBEM.createElement(
      'div',
      { bem: componentBem },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:bar', ref: 'bar' },
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onBarDragStart,
            onDrag: this._onBarDrag },
          _globals.ReactBEM.createElement(
            'div',
            null,
            _globals.ReactBEM.createElement('div', { bem: '$e:background' }),
            _globals.ReactBEM.createElement('div', (0, _extends3.default)({ bem: '$e:foreground' }, foregroundProps)),
            _globals.ReactBEM.createElement(
              _draggableComponent2.default,
              {
                onStart: this._onKnobDragStart,
                onDrag: this._onKnobDrag },
              _globals.ReactBEM.createElement('div', { bem: 'e:knob b:knob m:slider', style: this._getKnobStyle() })
            )
          )
        ),
        middleDot
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:labels' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label m:lowerBoundary' },
          this._buildValue(this.props.minValue)
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label m:value' },
          this.props.label,
          ' ',
          this._buildValue(this.state.value)
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label m:upperBoundary' },
          this._buildValue(this.props.maxValue)
        )
      )
    );
  };

  return SliderComponent;
}(_globals.BaseComponent);

exports.default = SliderComponent;


SliderComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _assign = __webpack_require__(275);

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/***/ },
/* 43 */
/***/ function(module, exports) {

module.exports = function(exec){
  try {
    return !!exec();
  } catch(e){
    return true;
  }
};

/***/ },
/* 44 */
/***/ function(module, exports) {

module.exports = function(it){
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys       = __webpack_require__(135)
  , enumBugKeys = __webpack_require__(76);

module.exports = Object.keys || function keys(O){
  return $keys(O, enumBugKeys);
};

/***/ },
/* 46 */
/***/ function(module, exports) {

module.exports = function(bitmap, value){
  return {
    enumerable  : !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable    : !(bitmap & 4),
    value       : value
  };
};

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var emptyObject = {};

if (false) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

/***/ },
/* 48 */
/***/ function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

(function () {
    try {
        cachedSetTimeout = setTimeout;
    } catch (e) {
        cachedSetTimeout = function () {
            throw new Error('setTimeout is not defined');
        }
    }
    try {
        cachedClearTimeout = clearTimeout;
    } catch (e) {
        cachedClearTimeout = function () {
            throw new Error('clearTimeout is not defined');
        }
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        return setTimeout(fun, 0);
    } else {
        return cachedSetTimeout.call(null, fun, 0);
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        clearTimeout(marker);
    } else {
        cachedClearTimeout.call(null, marker);
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var EventPluginRegistry = __webpack_require__(92);
var EventPluginUtils = __webpack_require__(93);
var ReactErrorUtils = __webpack_require__(99);

var accumulateInto = __webpack_require__(160);
var forEachAccumulated = __webpack_require__(162);
var invariant = __webpack_require__(4);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  return '.' + inst._rootNodeID;
};

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = __webpack_require__(22);
var EventPluginHub = __webpack_require__(49);
var EventPluginUtils = __webpack_require__(93);

var accumulateInto = __webpack_require__(160);
var forEachAccumulated = __webpack_require__(162);
var warning = __webpack_require__(6);

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, upwards, event) {
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

/***/ },
/* 51 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

var getEventTarget = __webpack_require__(108);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occurred.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _sliderComponent = __webpack_require__(41);

var _sliderComponent2 = _interopRequireDefault(_sliderComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var SliderOverlayComponent = function (_BaseComponent) {
  (0, _inherits3.default)(SliderOverlayComponent, _BaseComponent);

  function SliderOverlayComponent() {
    (0, _classCallCheck3.default)(this, SliderOverlayComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onSliderValueChange');

    _this.state = { value: _this.props.value };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component receives new props
   * @param  {Object} props
   */


  SliderOverlayComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (props.value !== this.state.value) {
      this.state.value = props.value;
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the slider value has changed
   * @param  {Number} value
   * @private
   */


  SliderOverlayComponent.prototype._onSliderValueChange = function _onSliderValueChange(value) {
    this.props.onChange && this.props.onChange(value);
    this.setState({ value: value });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the SliderComponent
   * @return {SliderComponent}
   * @private
   */


  SliderOverlayComponent.prototype._renderSlider = function _renderSlider() {
    var props = _globals.SDKUtils.defaults(this.props, {
      style: '',
      middleDot: false,
      minValue: 1,
      maxValue: 100,
      label: 'Label',
      onChange: this._onSliderValueChange,
      value: this.state.value
    });
    return _globals.ReactBEM.createElement(_sliderComponent2.default, props);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SliderOverlayComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:controls e:overlay m:large m:dark' },
      this._renderSlider()
    );
  };

  return SliderOverlayComponent;
}(_globals.BaseComponent);

exports.default = SliderOverlayComponent;


SliderOverlayComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopBarComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TopBarComponent, _BaseComponent);

  function TopBarComponent() {
    (0, _classCallCheck3.default)(this, TopBarComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders the content of this TopBarComponent
   * @return {ReactBEM.Element}
   */
  TopBarComponent.prototype.renderContent = function renderContent() {
    return this.props.children;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  TopBarComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:topBar e:row' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell' },
        this.renderContent()
      )
    );
  };

  return TopBarComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TopBarComponent;


TopBarComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _iterator = __webpack_require__(279);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(278);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ },
/* 57 */
/***/ function(module, exports) {

exports.f = {}.propertyIsEnumerable;

/***/ },
/* 58 */
/***/ function(module, exports) {

var id = 0
  , px = Math.random();
module.exports = function(key){
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var $at  = __webpack_require__(310)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(132)(String, 'String', function(iterated){
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , index = this._i
    , point;
  if(index >= O.length)return {value: undefined, done: true};
  point = $at(O, index);
  this._i += point.length;
  return {value: point, done: false};
});

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 */

'use strict';

var invariant = __webpack_require__(4);

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function keyMirror(obj) {
  var ret = {};
  var key;
  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

/***/ },
/* 61 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DisabledInputUtils
 */

'use strict';

var disableableMouseListenerNames = {
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,

  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
};

/**
 * Implements a host component that does not receive mouse events
 * when `disabled` is set.
 */
var DisabledInputUtils = {
  getHostProps: function (inst, props) {
    if (!props.disabled) {
      return props;
    }

    // Copy the props, except the mouse listeners
    var hostProps = {};
    for (var key in props) {
      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
        hostProps[key] = props[key];
      }
    }

    return hostProps;
  }
};

module.exports = DisabledInputUtils;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 */

'use strict';

var _assign = __webpack_require__(7);

var EventConstants = __webpack_require__(22);
var EventPluginRegistry = __webpack_require__(92);
var ReactEventEmitterMixin = __webpack_require__(372);
var ViewportMetrics = __webpack_require__(159);

var getVendorPrefixedEventName = __webpack_require__(403);
var isEventSupported = __webpack_require__(109);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 */

'use strict';

var SyntheticUIEvent = __webpack_require__(52);
var ViewportMetrics = __webpack_require__(159);

var getEventModifierState = __webpack_require__(107);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

/***/ },
/* 64 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);
var DOMNamespaces = __webpack_require__(91);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = __webpack_require__(105);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var newNodes = reusableSVGContainer.firstChild.childNodes;
    for (var i = 0; i < newNodes.length; i++) {
      node.appendChild(newNodes[i]);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

/***/ },
/* 66 */
/***/ function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_66__;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _overlayComponent = __webpack_require__(180);

var _overlayComponent2 = _interopRequireDefault(_overlayComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var ColorPickerComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ColorPickerComponent, _BaseComponent);

  function ColorPickerComponent() {
    (0, _classCallCheck3.default)(this, ColorPickerComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._value = _this.props.initialValue.clone();
    _this._bindAll('_onButtonClick', '_onValueChange', '_onColorPickerOpen', '_onColorPickerClose');

    _this._events = (0, _defineProperty3.default)({}, _globals.Constants.EVENTS.COLORPICKER_OPEN, _this._onColorPickerOpen);

    _this.state = {
      overlayVisible: false
    };

    _this._transparentPatternCanvas = _globals.Utils.createTransparentPatternCanvas();
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  ColorPickerComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderColor();
  };

  /**
   * Gets called after this component has been updated
   */


  ColorPickerComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    this._renderColor();
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when a colorpicker has been opened. If it is not the same
   * color picker as this, this one gets closed. This makes sure that there
   * is only one color picker open at a time
   * @param  {ColorPickerComponent} colorPicker
   * @private
   */


  ColorPickerComponent.prototype._onColorPickerOpen = function _onColorPickerOpen(colorPicker) {
    if (colorPicker === this) return;
    this.setState({ overlayVisible: false });
  };

  /**
   * Gets called when the color picker overlay tries to close itself
   * @private
   */


  ColorPickerComponent.prototype._onColorPickerClose = function _onColorPickerClose() {
    this.setState({ overlayVisible: false });
  };

  /**
   * Gets called when the color picker button has been clicked
   * @param  {Event} e
   * @private
   */


  ColorPickerComponent.prototype._onButtonClick = function _onButtonClick(e) {
    e.preventDefault();
    e.stopPropagation();

    if (!this.state.overlayVisible) {
      this._emitEvent(_globals.Constants.EVENTS.COLORPICKER_OPEN, this);
    }

    this.setState({ overlayVisible: !this.state.overlayVisible });
  };

  /**
   * Gets called when the value changes
   * @param  {Color} value
   * @private
   */


  ColorPickerComponent.prototype._onValueChange = function _onValueChange(value) {
    this._value = value;
    this._renderColor();
    this.forceUpdate();

    this.props.onChange && this.props.onChange(value);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the current color on the preview canvas
   * @private
   */


  ColorPickerComponent.prototype._renderColor = function _renderColor() {
    var canvas = this.refs.canvas;
    var context = canvas.getContext('2d');

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    var pattern = context.createPattern(this._transparentPatternCanvas, 'repeat');
    context.fillStyle = pattern;
    context.fillRect(0, 0, canvas.width, canvas.height);

    context.fillStyle = this._value.toRGBA();
    context.fillRect(0, 0, canvas.width, canvas.height);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ColorPickerComponent.prototype.renderWithBEM = function renderWithBEM() {
    var Overlay = null;
    if (this.state.overlayVisible) {
      Overlay = _globals.ReactBEM.createElement(_overlayComponent2.default, {
        initialValue: this._value,
        onChange: this._onValueChange,
        onClose: this._onColorPickerClose,
        alpha: this.props.alpha });
    }

    var className = this.state.overlayVisible ? 'is-active' : null;

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:controls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:colorPicker', className: className, onClick: this._onButtonClick },
        _globals.ReactBEM.createElement('canvas', { bem: 'e:preview', ref: 'canvas' }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          this.props.label || this._t('generic.color')
        ),
        Overlay
      )
    );
  };

  return ColorPickerComponent;
}(_globals.BaseComponent);

exports.default = ColorPickerComponent;


ColorPickerComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ItemComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ItemComponent, _BaseComponent);

  function ItemComponent() {
    (0, _classCallCheck3.default)(this, ItemComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onRemoveClick', '_onItemDragStart', '_onItemDragStop', '_onItemDrag', '_onSpriteUpdate');
    return _this;
  }

  // -------------------------------------------------------------------------- CALCULATIONS

  /**
   * Returns the absolute position of the sprite
   * @return {Vector2}
   * @private
   */


  ItemComponent.prototype._getAbsoluteSpritePosition = function _getAbsoluteSpritePosition() {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    return this.props.sprite.getPosition().clone().multiply(outputDimensions);
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  ItemComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this.props.sprite.on('update', this._onSpriteUpdate);
  };

  /**
   * Gets called when this component is about to be unmounted
   */


  ItemComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _BaseComponent.prototype.componentWillUnmount.call(this);
    this.props.sprite.off('update', this._onSpriteUpdate);
  };

  /**
   * Gets called when this component will receive new props
   * @param  {Object} nextProps
   */


  ItemComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    this.props.sprite.off('update', this._onSpriteUpdate);
    nextProps.sprite.on('update', this._onSpriteUpdate);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when this component's sprite has been updated
   * @private
   */


  ItemComponent.prototype._onSpriteUpdate = function _onSpriteUpdate() {
    this.forceUpdate();
  };

  /**
   * Gets called when the user starts dragging this item
   * @private
   */


  ItemComponent.prototype._onItemDragStart = function _onItemDragStart() {
    var sprite = this.props.sprite;

    this._initialPosition = sprite.getPosition();

    this.props.onDragStart && this.props.onDragStart();
  };

  /**
   * Gets called while the user drags this item
   * @param  {Vector2} offset
   * @private
   */


  ItemComponent.prototype._onItemDrag = function _onItemDrag(offset) {
    var sprite = this.props.sprite;
    var editor = this.context.editor;


    var outputDimensions = editor.getOutputDimensions();
    var newPosition = this._initialPosition.clone().add(offset.divide(outputDimensions));

    sprite.setPosition(newPosition);
  };

  /**
   * Gets called when the user stops dragging this item
   * @private
   */


  ItemComponent.prototype._onItemDragStop = function _onItemDragStop() {
    this.props.onDragStop && this.props.onDragStop();
  };

  /**
   * Gets called when the user clicks the remove button
   * @private
   */


  ItemComponent.prototype._onRemoveClick = function _onRemoveClick(e) {
    e.stopPropagation();

    var _props = this.props;
    var operation = _props.operation;
    var sprite = _props.sprite;
    var onRemove = _props.onRemove;

    operation.removeSprite(sprite);

    onRemove && onRemove();
  };

  return ItemComponent;
}(_globals.BaseComponent); /*
                            * This file is part of PhotoEditorSDK.
                            *
                            * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                            * All rights reserved.
                            *
                            * Redistribution and use in source and binary forms, without
                            * modification, are permitted provided that the following license agreement
                            * is approved and a legal/financial contract was signed by the user.
                            * The license agreement can be found under following link:
                            *
                            * https://www.photoeditorsdk.com/LICENSE.txt
                            */

exports.default = ItemComponent;


ItemComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(42);

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _textItemComponent = __webpack_require__(215);

var _textItemComponent2 = _interopRequireDefault(_textItemComponent);

var _stickerItemComponent = __webpack_require__(214);

var _stickerItemComponent2 = _interopRequireDefault(_stickerItemComponent);

var _brushItemComponent = __webpack_require__(213);

var _brushItemComponent2 = _interopRequireDefault(_brushItemComponent);

var _canvasControlsComponent = __webpack_require__(39);

var _canvasControlsComponent2 = _interopRequireDefault(_canvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _SDK$Operations$Sprit = _globals.SDK.Operations.SpriteOperation; /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Sticker = _SDK$Operations$Sprit.Sticker;
var Text = _SDK$Operations$Sprit.Text;
var Brush = _SDK$Operations$Sprit.Brush;

var SpritesCanvasControlsComponent = function (_CanvasControlsCompon) {
  (0, _inherits3.default)(SpritesCanvasControlsComponent, _CanvasControlsCompon);

  function SpritesCanvasControlsComponent() {
    var _this$_events;

    (0, _classCallCheck3.default)(this, SpritesCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _CanvasControlsCompon.call.apply(_CanvasControlsCompon, [this].concat(args)));

    _this._bindAll('_onCanvasClick', '_onSpriteDragStart', '_onSpriteDragStop', '_onOperationUpdated', '_onOperationRemoved', '_onSpriteFlip', '_onSpriteTakeToFront', '_onSpriteRemove');

    _this._canvasClickDisabled = false;

    _this._events = (_this$_events = {}, (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.OPERATION_UPDATED, _this._onOperationUpdated), (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.OPERATION_REMOVED, _this._onOperationRemoved), _this$_events);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when an operation has been removed
   * @param  {Operation} operation
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onOperationRemoved = function _onOperationRemoved(operation) {
    var selectedSprite = this.getSharedState('selectedSprite');
    if (operation !== this.getSharedState('operation') || !selectedSprite) return;

    // Operation can be removed by the undo button. We need
    // to make sure we re-create the operation for the lifetime
    // of this control
    var editor = this.context.editor;

    var newOperation = editor.operations.getOrCreate('sprite', {
      sprites: [selectedSprite],
      enabled: false
    });
    this.setSharedState({
      operation: newOperation,
      operationExistedBefore: false,
      initialOptions: {}
    });
  };

  /**
   * Gets called when an operation has been updated
   * @param  {Operation} operation
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onOperationUpdated = function _onOperationUpdated(operation) {
    var selectedSprite = this.getSharedState('selectedSprite');
    if (operation !== this.getSharedState('operation') || !selectedSprite) return;

    // If the currently selected sprite is no longer existent,
    // re-add it
    var sprites = operation.getSprites();
    if (sprites.indexOf(selectedSprite) === -1) {
      sprites.push(selectedSprite);
    }

    this.forceUpdate();
  };

  /**
   * Gets called when the selected item is deselected
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onItemBlur = function _onItemBlur() {};

  /**
   * Gets called when the user clicks somewhere on the canvas
   * @param  {Event} e
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onCanvasClick = function _onCanvasClick(e) {
    if (this._canvasClickDisabled) return;

    var hitTest = this._performHitTest(_globals.Utils.getEventPosition(e));
    if (!hitTest) {
      if (this.getSharedState('selectedSprite')) {
        this._onItemBlur();
      }
      this.props.onSwitchControls('home');
    }
  };

  /**
   * Gets called when the user flips the selected sprite
   * @param  {String} direction
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onSpriteFlip = function _onSpriteFlip(direction) {
    var selectedSprite = this.getSharedState('selectedSprite');
    switch (direction) {
      case 'h':
        selectedSprite.setFlipHorizontally(!selectedSprite.getFlipHorizontally());
        break;
      case 'v':
        selectedSprite.setFlipVertically(!selectedSprite.getFlipVertically());
        break;
    }
  };

  /**
   * Gets called when the user takes the selected sprite to front
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onSpriteTakeToFront = function _onSpriteTakeToFront(direction) {
    var operation = this.getSharedState('operation');
    operation.takeSpriteToFront(this.getSharedState('selectedSprite'));
    this.forceSharedUpdate();
  };

  /**
   * Gets called when the user removes the selected sprite
   * @param  {String} direction
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onSpriteRemove = function _onSpriteRemove() {
    var operation = this.getSharedState('operation');
    var selectedSprite = this.getSharedState('selectedSprite');
    operation.removeSprite(selectedSprite);

    this.setSharedState({
      selectedSprite: null
    });
  };

  // -------------------------------------------------------------------------- DRAGGING

  /**
   * Gets called when a sprite has received a dragging event. Blocks the `_onCanvasClick`
   * handler until `_onSpriteDragStop`
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onSpriteDragStart = function _onSpriteDragStart() {
    this._canvasClickDisabled = true;
  };

  /**
   * Since `_onCanvasClick` is triggered right after the drag end event for knobs is triggered,
   * we need to wait a short amount of time until we re-enabale the canvas click
   * @private
   */


  SpritesCanvasControlsComponent.prototype._onSpriteDragStop = function _onSpriteDragStop() {
    var _this2 = this;

    setTimeout(function () {
      _this2._canvasClickDisabled = false;
    }, 100);
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the container style
   * @return {Object}
   * @private
   */


  SpritesCanvasControlsComponent.prototype._getContainerStyle = function _getContainerStyle() {
    var editor = this.context.editor;

    var canvasDimensions = editor.getCanvasDimensions();
    var outputDimensions = editor.getOutputDimensions();

    var _canvasDimensions$clo = canvasDimensions.clone().divide(2).subtract(outputDimensions.clone().divide(2));

    var x = _canvasDimensions$clo.x;
    var y = _canvasDimensions$clo.y;


    return {
      left: x,
      top: y,
      width: outputDimensions.x,
      height: outputDimensions.y
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns the properties for the outer container
   * @return {Object}
   * @private
   */


  SpritesCanvasControlsComponent.prototype._getContainerProps = function _getContainerProps() {
    return {};
  };

  /**
   * Returns the properties for the canvas container
   * @return {Object}
   * @private
   */


  SpritesCanvasControlsComponent.prototype._getInnerContainerProps = function _getInnerContainerProps() {
    return {
      style: this._getContainerStyle(),
      onClick: this._onCanvasClick
    };
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the sprite items
   * @return {Array.<SpriteItemComponent>}
   * @private
   */


  SpritesCanvasControlsComponent.prototype._renderSpriteItems = function _renderSpriteItems() {
    var _this3 = this;

    var operation = this.getSharedState('operation');
    var sprites = operation.getSprites();
    var selectedSprite = this.getSharedState('selectedSprite');

    return sprites.map(function (s) {
      var isSelected = s === selectedSprite;
      var ComponentClass = null;
      if (s instanceof Text) {
        ComponentClass = _textItemComponent2.default;
      } else if (s instanceof Sticker) {
        ComponentClass = _stickerItemComponent2.default;
      } else if (s instanceof Brush) {
        ComponentClass = _brushItemComponent2.default;
      }

      return _globals.ReactBEM.createElement(ComponentClass, {
        operation: operation,
        sharedState: _this3.props.sharedState,
        sprite: s,
        selected: isSelected,
        onDragStart: _this3._onSpriteDragStart,
        onDragStop: _this3._onSpriteDragStop,
        onRemove: _this3._onSpriteRemove.bind(_this3, s),
        options: _this3.props.options,
        ref: 'sprite-' + s.getId() });
    });
  };

  /**
   * This renders controls on top of the sprites
   * @return {ReactBEM.Element}
   * @private
   */


  SpritesCanvasControlsComponent.prototype._renderOverlayControls = function _renderOverlayControls() {
    return null;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SpritesCanvasControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      (0, _extends3.default)({
        bem: '$b:canvasControls e:container m:full',
        ref: 'container'
      }, this._getContainerProps()),
      _globals.ReactBEM.createElement(
        'div',
        (0, _extends3.default)({
          bem: 'b:canvasControls e:innerContainer',
          ref: 'innerContainer'
        }, this._getInnerContainerProps()),
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: '$b:spritesCanvasControls',
            ref: 'container' },
          this._renderSpriteItems(),
          this._renderOverlayControls()
        )
      )
    );
  };

  return SpritesCanvasControlsComponent;
}(_canvasControlsComponent2.default);

exports.default = SpritesCanvasControlsComponent;


SpritesCanvasControlsComponent.contextTypes = _canvasControlsComponent2.default.contextTypes;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RowComponent = function (_BaseComponent) {
  (0, _inherits3.default)(RowComponent, _BaseComponent);

  function RowComponent() {
    (0, _classCallCheck3.default)(this, RowComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onClick');
    return _this;
  }
  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the button
   * @param  {Event} e
   * @private
   */


  RowComponent.prototype._onClick = function _onClick(e) {
    this.props.onClick && this.props.onClick();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this row's content
   * @return {ReactBEM.Element}
   * @private
   */


  RowComponent.prototype._renderContent = function _renderContent() {
    return null;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  RowComponent.prototype.renderWithBEM = function renderWithBEM() {
    var rowBEM = '$e:row m:' + this._modifier;
    if (this.props.totalRows) {
      rowBEM += ' m:row-' + this.props.totalRows;
    }

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:splashScreen' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: rowBEM },
        this._renderContent()
      )
    );
  };

  return RowComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = RowComponent;


RowComponent.propTypes = {
  onClick: _globals.React.PropTypes.func
};

RowComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _fileLoader = __webpack_require__(259);

var _fileLoader2 = _interopRequireDefault(_fileLoader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var InvisibleUploadComponent = function (_BaseComponent) {
  (0, _inherits3.default)(InvisibleUploadComponent, _BaseComponent);

  function InvisibleUploadComponent() {
    (0, _classCallCheck3.default)(this, InvisibleUploadComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onNewFile');
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  InvisibleUploadComponent.prototype.componentDidMount = function componentDidMount() {
    this._fileLoader = new _fileLoader2.default(this.refs.fileInput);
    this._fileLoader.on('file', this._onNewFile);
  };

  /**
   * Gets called when this component is about to be unmounted
   */


  InvisibleUploadComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    this._fileLoader.off('file', this._onNewFile);
    this._fileLoader.dispose();
    this._fileLoader = null;
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the FileLoader emits a new file
   * @param  {File} file
   * @private
   */


  InvisibleUploadComponent.prototype._onNewFile = function _onNewFile(file) {
    this.props.onNewFile && this.props.onNewFile(file);
  };

  // -------------------------------------------------------------------------- PUBLIC API

  /**
   * Public method for opening the file loader
   */


  InvisibleUploadComponent.prototype.open = function open() {
    this._fileLoader.open();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  InvisibleUploadComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement('input', { type: 'file', bem: 'b:hiddenFileInput', ref: 'fileInput' });
  };

  return InvisibleUploadComponent;
}(_globals.BaseComponent);

exports.default = InvisibleUploadComponent;


InvisibleUploadComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopBarButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TopBarButtonComponent, _BaseComponent);

  function TopBarButtonComponent() {
    (0, _classCallCheck3.default)(this, TopBarButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  TopBarButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    // Build BEM specifier
    var bem = '$e:button';
    if (this.props.style) {
      bem += ' m:' + this.props.style;
    }
    if (this.props.icon) {
      bem += ' m:withIcon';
    }

    // Build icon
    var icon = null;
    if (this.props.icon) {
      icon = _globals.ReactBEM.createElement('img', {
        bem: 'e:icon',
        src: this._getAssetPath(this.props.icon, true) });
    }

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:topBar' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: bem, onClick: this.props.onClick },
        icon,
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          this.props.label || 'Button'
        )
      )
    );
  };

  return TopBarButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TopBarButtonComponent;


TopBarButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 73 */
/***/ function(module, exports) {

var toString = {}.toString;

module.exports = function(it){
  return toString.call(it).slice(8, -1);
};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(291);
module.exports = function(fn, that, length){
  aFunction(fn);
  if(that === undefined)return fn;
  switch(length){
    case 1: return function(a){
      return fn.call(that, a);
    };
    case 2: return function(a, b){
      return fn.call(that, a, b);
    };
    case 3: return function(a, b, c){
      return fn.call(that, a, b, c);
    };
  }
  return function(/* ...args */){
    return fn.apply(that, arguments);
  };
};

/***/ },
/* 75 */
/***/ function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function(it){
  if(it == undefined)throw TypeError("Can't call method on  " + it);
  return it;
};

/***/ },
/* 76 */
/***/ function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

/***/ },
/* 77 */
/***/ function(module, exports) {

module.exports = true;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject    = __webpack_require__(29)
  , dPs         = __webpack_require__(306)
  , enumBugKeys = __webpack_require__(76)
  , IE_PROTO    = __webpack_require__(81)('IE_PROTO')
  , Empty       = function(){ /* empty */ }
  , PROTOTYPE   = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function(){
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(129)('iframe')
    , i      = enumBugKeys.length
    , lt     = '<'
    , gt     = '>'
    , iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(296).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties){
  var result;
  if(O !== null){
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty;
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ },
/* 79 */
/***/ function(module, exports) {

exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

var def = __webpack_require__(25).f
  , has = __webpack_require__(32)
  , TAG = __webpack_require__(15)('toStringTag');

module.exports = function(it, tag, stat){
  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

var shared = __webpack_require__(82)('keys')
  , uid    = __webpack_require__(58);
module.exports = function(key){
  return shared[key] || (shared[key] = uid(key));
};

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

var global = __webpack_require__(24)
  , SHARED = '__core-js_shared__'
  , store  = global[SHARED] || (global[SHARED] = {});
module.exports = function(key){
  return store[key] || (store[key] = {});
};

/***/ },
/* 83 */
/***/ function(module, exports) {

// 7.1.4 ToInteger
var ceil  = Math.ceil
  , floor = Math.floor;
module.exports = function(it){
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(75);
module.exports = function(it){
  return Object(defined(it));
};

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(44);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function(it, S){
  if(!isObject(it))return it;
  var fn, val;
  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

var global         = __webpack_require__(24)
  , core           = __webpack_require__(14)
  , LIBRARY        = __webpack_require__(77)
  , wksExt         = __webpack_require__(87)
  , defineProperty = __webpack_require__(25).f;
module.exports = function(name){
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
};

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(15);

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(315);
var global        = __webpack_require__(24)
  , hide          = __webpack_require__(34)
  , Iterators     = __webpack_require__(35)
  , TO_STRING_TAG = __webpack_require__(15)('toStringTag');

for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
  var NAME       = collections[i]
    , Collection = global[NAME]
    , proto      = Collection && Collection.prototype;
  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}

/***/ },
/* 89 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 */

'use strict';

var DOMLazyTree = __webpack_require__(36);
var Danger = __webpack_require__(347);
var ReactMultiChildUpdateTypes = __webpack_require__(155);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactInstrumentation = __webpack_require__(10);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(105);
var setInnerHTML = __webpack_require__(65);
var setTextContent = __webpack_require__(168);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (false) {
    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (false) {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (false) {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
          }
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
          }
          break;
        case ReactMultiChildUpdateTypes.SET_MARKUP:
          setInnerHTML(parentNode, update.content);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
          }
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(parentNode, update.content);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
          }
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          removeChild(parentNode, update.fromNode);
          if (false) {
            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

/***/ },
/* 91 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMNamespaces
 */

'use strict';

var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

  if (false) {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames:  false ? {} : null,

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (InjectedEventPluginOrder) {
    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (false) {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var EventConstants = __webpack_require__(22);
var ReactErrorUtils = __webpack_require__(99);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
}

var validateEventDispatches;
if (false) {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (false) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (false) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (false) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;

/***/ },
/* 94 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule KeyEscapeUtils
 * 
 */

'use strict';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactPropTypes = __webpack_require__(157);
var ReactPropTypeLocations = __webpack_require__(102);
var ReactPropTypesSecret = __webpack_require__(103);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: ReactPropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactNoopUpdateQueue = __webpack_require__(100);

var canDefineProperty = __webpack_require__(161);
var emptyObject = __webpack_require__(47);
var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (false) {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentTreeDevtool
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(28);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

var tree = {};
var unmountedIDs = {};
var rootIDs = {};

function updateTree(id, update) {
  if (!tree[id]) {
    tree[id] = {
      element: null,
      parentID: null,
      ownerID: null,
      text: null,
      childIDs: [],
      displayName: 'Unknown',
      isMounted: false,
      updateCount: 0
    };
  }
  update(tree[id]);
}

function purgeDeep(id) {
  var item = tree[id];
  if (item) {
    var childIDs = item.childIDs;

    delete tree[id];
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function describeID(id) {
  var name = ReactComponentTreeDevtool.getDisplayName(id);
  var element = ReactComponentTreeDevtool.getElement(id);
  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
  }
   false ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeDevtool = {
  onSetDisplayName: function (id, displayName) {
    updateTree(id, function (item) {
      return item.displayName = displayName;
    });
  },
  onSetChildren: function (id, nextChildIDs) {
    updateTree(id, function (item) {
      item.childIDs = nextChildIDs;

      nextChildIDs.forEach(function (nextChildID) {
        var nextChild = tree[nextChildID];
        !nextChild ?  false ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
        !(nextChild.displayName != null) ?  false ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
        !(nextChild.childIDs != null || nextChild.text != null) ?  false ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
        !nextChild.isMounted ?  false ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
        if (nextChild.parentID == null) {
          nextChild.parentID = id;
          // TODO: This shouldn't be necessary but mounting a new root during in
          // componentWillMount currently causes not-yet-mounted components to
          // be purged from our tree data so their parent ID is missing.
        }
        !(nextChild.parentID === id) ?  false ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
      });
    });
  },
  onSetOwner: function (id, ownerID) {
    updateTree(id, function (item) {
      return item.ownerID = ownerID;
    });
  },
  onSetParent: function (id, parentID) {
    updateTree(id, function (item) {
      return item.parentID = parentID;
    });
  },
  onSetText: function (id, text) {
    updateTree(id, function (item) {
      return item.text = text;
    });
  },
  onBeforeMountComponent: function (id, element) {
    updateTree(id, function (item) {
      return item.element = element;
    });
  },
  onBeforeUpdateComponent: function (id, element) {
    updateTree(id, function (item) {
      return item.element = element;
    });
  },
  onMountComponent: function (id) {
    updateTree(id, function (item) {
      return item.isMounted = true;
    });
  },
  onMountRootComponent: function (id) {
    rootIDs[id] = true;
  },
  onUpdateComponent: function (id) {
    updateTree(id, function (item) {
      return item.updateCount++;
    });
  },
  onUnmountComponent: function (id) {
    updateTree(id, function (item) {
      return item.isMounted = false;
    });
    unmountedIDs[id] = true;
    delete rootIDs[id];
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeDevtool._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var id in unmountedIDs) {
      purgeDeep(id);
    }
    unmountedIDs = {};
  },
  isMounted: function (id) {
    var item = tree[id];
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var type = topElement.type;
      var name = typeof type === 'function' ? type.displayName || type.name : type;
      var owner = topElement._owner;
      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeDevtool.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = tree[id];
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var item = tree[id];
    return item ? item.displayName : 'Unknown';
  },
  getElement: function (id) {
    var item = tree[id];
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var item = tree[id];
    return item ? item.ownerID : null;
  },
  getParentID: function (id) {
    var item = tree[id];
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = tree[id];
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var item = tree[id];
    return item ? item.text : null;
  },
  getUpdateCount: function (id) {
    var item = tree[id];
    return item ? item.updateCount : 0;
  },
  getRootIDs: function () {
    return Object.keys(rootIDs);
  },
  getRegisteredIDs: function () {
    return Object.keys(tree);
  }
};

module.exports = ReactComponentTreeDevtool;

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 */

'use strict';

var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {?String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a, b) {
  try {
    return func(a, b);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
    return undefined;
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (false) {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
      var boundFunc = func.bind(null, a, b);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNoopUpdateQueue
 */

'use strict';

var warning = __webpack_require__(6);

function warnNoop(publicInstance, callerName) {
  if (false) {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if (false) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = __webpack_require__(60);

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

/***/ },
/* 103 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypesSecret
 */

'use strict';

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(28);
var ReactInstanceMap = __webpack_require__(51);
var ReactInstrumentation = __webpack_require__(10);
var ReactUpdates = __webpack_require__(21);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (false) {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (false) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (false) {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ?  false ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;

/***/ },
/* 105 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createMicrosoftUnsafeLocalFunction
 */

/* globals MSApp */

'use strict';

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 106 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

/***/ },
/* 107 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

/***/ },
/* 108 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

/***/ },
/* 110 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 */

'use strict';

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(28);
var ReactElement = __webpack_require__(20);

var getIteratorFn = __webpack_require__(164);
var invariant = __webpack_require__(4);
var KeyEscapeUtils = __webpack_require__(94);
var warning = __webpack_require__(6);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (false) {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (false) {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule validateDOMNesting
 */

'use strict';

var _assign = __webpack_require__(7);

var emptyFunction = __webpack_require__(16);
var warning = __webpack_require__(6);

var validateDOMNesting = emptyFunction;

if (false) {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      if (childTag !== '#text') {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

module.exports = __webpack_require__(352);


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _photoeditorsdk = __webpack_require__(66);

var _photoeditorsdk2 = _interopRequireDefault(_photoeditorsdk);

var _url = __webpack_require__(407);

var _url2 = _interopRequireDefault(_url);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* global XMLHttpRequest */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var TIMEOUT = 5000;
var Promise = _photoeditorsdk2.default.Promise;

var JSONLoader = function () {
  function JSONLoader(url) {
    (0, _classCallCheck3.default)(this, JSONLoader);

    this._url = url;
    this._parsedUrl = _url2.default.parse(this._url, true);
  }

  /**
   * Checks if this request is a JSONP request
   * @return {Boolean}
   */


  JSONLoader.prototype._isJSONPRequest = function _isJSONPRequest() {
    var query = this._parsedUrl.query;

    for (var key in query) {
      var value = query[key];
      if (value === '?') {
        return true;
      }
    }
    return false;
  };

  /**
   * Loads the JSON(P) from the given URL
   * @return {Promise}
   */


  JSONLoader.prototype.load = function load() {
    if (this._isJSONPRequest()) {
      return this._loadJSONP();
    } else {
      return this._loadJSON();
    }
  };

  /**
   * Loads the URL as JSON
   * @return {Promise}
   */


  JSONLoader.prototype._loadJSON = function _loadJSON() {
    var _this = this;

    return new Promise(function (resolve, reject) {
      var xhr = void 0;
      if (window.XDomainRequest) {
        xhr = new window.XDomainRequest();

        xhr.onload = function () {
          var json = JSON.parse(xhr.responseText);
          resolve(json);
        };
        xhr.onerror = function (e) {
          reject(e);
        };
      } else if (window.XMLHttpRequest) {
        xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function (oEvent) {
          if (xhr.readyState === 4) {
            if (xhr.status === 200) {
              var json = JSON.parse(xhr.responseText);
              resolve(json);
            } else {
              reject(new Error(xhr.statusText));
            }
          }
        };
      }

      xhr.open('GET', _this._url, true);
      xhr.send();
    });
  };

  /**
   * Loads the URL as JSONP
   * @return {Promise}
   */


  JSONLoader.prototype._loadJSONP = function _loadJSONP() {
    var _this2 = this;

    var failed = false;
    var succeeded = false;

    var fnName = 'pesdk' + Math.round(Math.random() * 99999999999999);
    return new Promise(function (resolve, reject) {
      var node = _this2._createJSONPNode(fnName);
      window[fnName] = function (result) {
        _this2._removeJSONPNode(node);
        if (!failed) {
          succeeded = true;
          resolve(result);
        }
      };

      window.setTimeout(function () {
        if (!succeeded) {
          _this2._removeJSONPNode(node);
          failed = true;
          reject(new Error('Timeout of 5 seconds exceeded.'));
        }
      }, TIMEOUT);
    });
  };

  /**
   * Creates a JSONP <script> node inside the <head> element
   * @param  {String} fnName
   * @return {DOMElement}
   * @private
   */


  JSONLoader.prototype._createJSONPNode = function _createJSONPNode(fnName) {
    var JSONPUrl = this._buildJSONPUrl(fnName);
    var headNode = document.querySelector('head');
    var scriptNode = document.createElement('script');
    scriptNode.src = JSONPUrl;
    headNode.appendChild(scriptNode);
    return scriptNode;
  };

  /**
   * Removes the JSONP <script> node from the <head> element
   * @param  {DOMElement} node
   * @private
   */


  JSONLoader.prototype._removeJSONPNode = function _removeJSONPNode(node) {
    node.parentNode.removeChild(node);
  };

  /**
   * Builds a JSONP url for the given function name
   * @param  {String} fnName
   * @return {String}
   */


  JSONLoader.prototype._buildJSONPUrl = function _buildJSONPUrl(fnName) {
    // Find JSONP parameter
    var query = this._parsedUrl.query;

    var parameter = null;
    for (var param in query) {
      if (query[param] === '?') {
        parameter = param;
        break;
      }
    }

    delete this._parsedUrl.search;
    query[parameter] = fnName;

    return _url2.default.format(this._parsedUrl);
  };

  return JSONLoader;
}();

exports.default = JSONLoader;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _overlayComponent = __webpack_require__(177);

var _overlayComponent2 = _interopRequireDefault(_overlayComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var CategoryDropdownComponent = function (_BaseComponent) {
  (0, _inherits3.default)(CategoryDropdownComponent, _BaseComponent);

  function CategoryDropdownComponent() {
    (0, _classCallCheck3.default)(this, CategoryDropdownComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call(this));

    _this._bindAll('_onButtonClick');

    _this.state = {
      overlayVisible: false
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the color picker button has been clicked
   * @param  {Event} e
   * @private
   */


  CategoryDropdownComponent.prototype._onButtonClick = function _onButtonClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.setState({ overlayVisible: !this.state.overlayVisible });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  CategoryDropdownComponent.prototype.renderWithBEM = function renderWithBEM() {
    var Overlay = null;

    if (this.state.overlayVisible) {
      Overlay = _globals.ReactBEM.createElement(_overlayComponent2.default, {
        items: this.props.items,
        selectedItem: this.props.selectedItem,
        onChange: this.props.onChange });
    }

    var className = this.state.overlayVisible ? 'is-active' : null;

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:controls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:categoryDropdown', className: className, onClick: this._onButtonClick },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this.props.selectedItem.icon }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          this.props.selectedItem.label
        ),
        Overlay
      )
    );
  };

  return CategoryDropdownComponent;
}(_globals.BaseComponent);

exports.default = CategoryDropdownComponent;


CategoryDropdownComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var OverviewControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(OverviewControlsComponent, _ControlsComponent);

  function OverviewControlsComponent() {
    (0, _classCallCheck3.default)(this, OverviewControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasBackButton = false;
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when an item has been clicked
   * @param  {Event} e
   * @private
   */


  OverviewControlsComponent.prototype._onItemClick = function _onItemClick(controls) {
    this.props.onSwitchControls(controls);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the list items for this control
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  OverviewControlsComponent.prototype._renderListItems = function _renderListItems() {
    var _this2 = this;

    var editor = this.context.editor;


    var items = [];
    var makeItem = function makeItem(identifier) {
      var control = editor.controls.get(identifier);
      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: control.identifier,
          'data-identifier': control.identifier,
          onClick: _this2._onItemClick.bind(_this2, control) },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:button m:withLabel' },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: _this2._getAssetPath(control.iconPath, true) }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:label' },
              _this2._t(control.languageKey)
            )
          )
        )
      );
    };

    var controlsOrder = this.context.options.editor.controlsOrder;

    controlsOrder.forEach(function (groupOrIdentifier) {
      if (Array.isArray(groupOrIdentifier)) {
        (function () {
          var group = groupOrIdentifier;

          var groupItems = [];
          group.forEach(function (identifier) {
            if (!editor.controls.isEnabled(identifier)) return;
            groupItems.push(makeItem(identifier));
          });

          if (groupItems.length) {
            items.push(groupItems);
          }
        })();
      } else {
        var identifier = groupOrIdentifier;
        if (!editor.controls.isEnabled(identifier)) return;
        items.push(makeItem(identifier));
      }
    });

    var finalItems = [];
    items.forEach(function (itemOrGroup) {
      finalItems = finalItems.concat(itemOrGroup);
      if (itemOrGroup !== items[items.length - 1]) {
        finalItems.push(_globals.ReactBEM.createElement('li', { bem: 'e:separator' }));
      }
    });

    return finalItems;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  OverviewControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = this._renderListItems();

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        null,
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    );
  };

  return OverviewControlsComponent;
}(_controlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = OverviewControlsComponent;


OverviewControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FontPreviewComponent = function (_BaseComponent) {
  (0, _inherits3.default)(FontPreviewComponent, _BaseComponent);

  function FontPreviewComponent() {
    (0, _classCallCheck3.default)(this, FontPreviewComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after the component has been mounted
   */
  FontPreviewComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderCanvas();
  };

  /**
   * Gets called after this component has been updated
   */


  FontPreviewComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    this._renderCanvas();
  };

  // -------------------------------------------------------------------------- CANVAS RENDERING

  /**
   * Renders the current font family onto the canvas
   * @private
   */


  FontPreviewComponent.prototype._renderCanvas = function _renderCanvas() {
    var canvas = this.refs.canvas;
    var editor = this.context.editor;

    var sdk = editor.getSDK();

    var pixelRatio = sdk.getPixelRatio();
    canvas.width = canvas.offsetWidth * pixelRatio;
    canvas.height = canvas.offsetHeight * pixelRatio;

    canvas.style.width = canvas.offsetWidth + 'px';
    canvas.style.height = canvas.offsetHeight + 'px';

    var context = canvas.getContext('2d');

    context.fillStyle = 'red';
    context.clearRect(0, 0, canvas.width, canvas.height);

    context.font = this.props.fontWeight + ' ' + 24 * pixelRatio + 'px ' + this.props.fontFamily;
    context.textBaseline = 'middle';
    context.textAlign = 'center';
    context.fillStyle = 'white';

    context.fillText('Abc', canvas.width / 2, canvas.height / 2);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  FontPreviewComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement('canvas', { bem: 'b:fontFamily e:canvas', ref: 'canvas' });
  };

  return FontPreviewComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = FontPreviewComponent;


FontPreviewComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SearchSuggestionComponent = function (_BaseComponent) {
  (0, _inherits3.default)(SearchSuggestionComponent, _BaseComponent);

  function SearchSuggestionComponent() {
    (0, _classCallCheck3.default)(this, SearchSuggestionComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the search suggestion
   * @private
   */


  SearchSuggestionComponent.prototype._onClick = function _onClick() {
    this.props.onClick && this.props.onClick(this.props.searchSuggestion);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SearchSuggestionComponent.prototype.renderWithBEM = function renderWithBEM() {
    var searchSuggestion = this.props.searchSuggestion;

    var style = {
      backgroundImage: 'url(' + searchSuggestion.coverImage + ')'
    };

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:photoRoll e:libraryList' },
      _globals.ReactBEM.createElement(
        'li',
        { bem: 'e:item', style: style, onClick: this._onClick },
        _globals.ReactBEM.createElement('div', { bem: 'e:overlay' }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:name' },
          searchSuggestion.query
        )
      )
    );
  };

  return SearchSuggestionComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = SearchSuggestionComponent;


SearchSuggestionComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _photoComponent = __webpack_require__(235);

var _photoComponent2 = _interopRequireDefault(_photoComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */
var COLUMN_WIDTH = 240;

var PhotoListComponent = function (_BaseComponent) {
  (0, _inherits3.default)(PhotoListComponent, _BaseComponent);

  function PhotoListComponent() {
    (0, _classCallCheck3.default)(this, PhotoListComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._needsStyleFixes = true;
    _this._totalPhotosHeight = 0;
    _this.state = {
      loading: false,
      photos: []
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  PhotoListComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);

    this._loadPhotos();
  };

  /**
   * Gets called when this component has been updated
   */


  PhotoListComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    if (this.refs.scrollbar) {
      this.refs.scrollbar.update();
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks on a photo
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Photo} photo
   * @private
   */


  PhotoListComponent.prototype._onPhotoClicked = function _onPhotoClicked(photo) {
    this.props.onPhotoClicked && this.props.onPhotoClicked(photo);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns the headline for this view
   * @return {String}
   * @private
   */


  PhotoListComponent.prototype._getHeadline = function _getHeadline() {
    return this.props.library.name;
  };

  /**
   * A method that is called whenever styles need to be fixed by the JavaScript.
   * This needs to be done thanks to older Internet Explorer browsers which have
   * a bunch of CSS bugs.
   */


  PhotoListComponent.prototype.fixStyles = function fixStyles() {
    if (_globals.Utils.Browser.isIElte(11)) {
      var cell = this.refs.cell;

      var list = this.refs.scrollbar.getList();
      if (!(cell && list)) {
        return;
      }
      var cellHeight = cell.offsetHeight;
      list.style.height = cellHeight + 'px';
    }

    if (this.refs.scrollbar) {
      this.refs.scrollbar.update();
    }
  };

  // -------------------------------------------------------------------------- LOADING

  PhotoListComponent.prototype._renderColumns = function _renderColumns() {
    var _this2 = this;

    var photos = this.state.photos;

    var columnCount = 3;
    var columnHeights = [];

    var columns = [];
    for (var i = 0; i < columnCount; i++) {
      columns.push([]);
      columnHeights.push(0);
    }

    photos.forEach(function (photo) {
      var dimensions = photo.dimensions;

      // Find shortest column

      var shortestColumnIndex = null;
      var shortestColumnHeight = Infinity;
      for (var _i = 0; _i < columnCount; _i++) {
        if (columnHeights[_i] < shortestColumnHeight) {
          shortestColumnIndex = _i;
          shortestColumnHeight = columnHeights[_i];
        }
      }

      columns[shortestColumnIndex].push(_globals.ReactBEM.createElement(_photoComponent2.default, {
        photo: photo.obj,
        onClick: _this2._onPhotoClicked.bind(_this2, photo.obj) }));
      columnHeights[shortestColumnIndex] += dimensions.y;
    });

    return columns;
  };

  /**
   * Renders the content for this component
   * @return {ReactBEM.Element}
   * @private
   */


  PhotoListComponent.prototype._renderPhotos = function _renderPhotos() {
    var columns = this._renderColumns();
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:photoRoll e:row m:fullHeight' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell', ref: 'cell' },
        _globals.ReactBEM.createElement(
          _scrollbarComponent2.default,
          { direction: 'vertical', ref: 'scrollbar' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:container', ref: 'container' },
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:innerContainer' },
              _globals.ReactBEM.createElement(
                'div',
                { bem: 'e:headline' },
                this._getHeadline()
              ),
              _globals.ReactBEM.createElement(
                'bem',
                { specifier: 'e:photoList' },
                columns.map(function (column) {
                  return _globals.ReactBEM.createElement(
                    'ul',
                    { bem: '$e:list' },
                    column
                  );
                })
              )
            )
          )
        )
      )
    );
  };

  /**
   * Loads the photos
   * @private
   */


  PhotoListComponent.prototype._loadPhotos = function _loadPhotos() {
    var _this3 = this;

    this._totalPhotosHeight = 0;

    var modal = _modalManager2.default.instance.displayProgress(this._t('loading.loading'));
    var PhotoRollProvider = this.context.options.photoRoll.provider;
    var provider = new PhotoRollProvider();

    provider.getPhotosForLibrary(this.props.library).then(function (photos) {
      return _this3._preloadPhotos(photos, modal);
    }).then(function (photos) {
      _this3.setState({ photos: photos, loading: false });
      modal.close();
    });
  };

  /**
   * Preloads the photos
   * @param {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Photo[]} photos
   * @param {Modal} modal
   * @return {Promise}
   * @private
   */


  PhotoListComponent.prototype._preloadPhotos = function _preloadPhotos(photos, modal) {
    var _this4 = this;

    var totalPhotos = photos.length;
    var loadedPhotos = 0;
    return Promise.all(photos.map(function (photo) {
      return _this4._preloadPhoto(photo).then(function (image) {
        var photoDimensions = new _globals.Vector2(image.width, image.height);
        photoDimensions.multiply(COLUMN_WIDTH / image.width);
        _this4._totalPhotosHeight += photoDimensions.y;

        loadedPhotos++;
        modal.setData({ progress: loadedPhotos / totalPhotos });

        return {
          obj: photo,
          dimensions: photoDimensions
        };
      });
    }));
  };

  /**
   * Preloads the given photo
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Photo} photo
   * @return {Promise}
   * @private
   */


  PhotoListComponent.prototype._preloadPhoto = function _preloadPhoto(photo) {
    return new Promise(function (resolve, reject) {
      var image = new window.Image();
      image.addEventListener('load', function () {
        resolve(image);
      });
      image.addEventListener('error', function () {
        resolve(image);
      });
      image.src = photo.urls.thumb;
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  PhotoListComponent.prototype.renderWithBEM = function renderWithBEM() {
    if (!this.state.loading) {
      return this._renderPhotos();
    } else {
      return _globals.ReactBEM.createElement('div', null);
    }
  };

  return PhotoListComponent;
}(_globals.BaseComponent);

exports.default = PhotoListComponent;


PhotoListComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = __webpack_require__(126);

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var elementSeparator = '__';
var modifierSeparator = '--';
var blockPrefix = 'pesdk-react-';

var BEMObject = function () {
  function BEMObject(parent, type, name) {
    (0, _classCallCheck3.default)(this, BEMObject);

    this._parent = parent;
    this._type = type;
    this._name = name;
  }

  /**
   * Creates a BEMObject of type "element" that has this element as parent
   * @param  {String} name
   * @return {BEMObject}
   */


  BEMObject.prototype.element = function element(name) {
    return new BEMObject(this, 'element', name);
  };

  /**
   * Creates a BEMObject of type "modifier" that has this element as parent
   * @param  {String} name
   * @return {BEMObject}
   */


  BEMObject.prototype.modifier = function modifier(name) {
    return new BEMObject(this, 'modifier', name);
  };

  /**
   * Builds the class name for this BEMObject
   * @return {String}
   */


  (0, _createClass3.default)(BEMObject, [{
    key: 'str',
    get: function get() {
      var response = this._parent ? this._parent.str : '';
      switch (this._type) {
        case 'block':
          response += '' + blockPrefix + this._name;
          break;
        case 'element':
          response += '' + elementSeparator + this._name;
          break;
        case 'modifier':
          response += '' + modifierSeparator + this._name;
          break;
      }
      return response;
    }
  }]);
  return BEMObject;
}();

exports.default = {
  /**
   * Creates a BEMObject of type "block" that has this element as parent
   * @param  {String} name
   * @return {BEMObject}
   */
  block: function block(name) {
    return new BEMObject(null, 'block', name);
  }
};

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FilterManager = function () {
  function FilterManager(options) {
    (0, _classCallCheck3.default)(this, FilterManager);

    this._options = options;
    this._categoriesById = {};
    this._categories = [{
      name: 'retro',
      filters: [_globals.SDK.Filters.CelsiusFilter, _globals.SDK.Filters.ChestFilter, _globals.SDK.Filters.FixieFilter, _globals.SDK.Filters.LeninFilter, _globals.SDK.Filters.PolaFilter, _globals.SDK.Filters.Pola669Filter, _globals.SDK.Filters.K1Filter, _globals.SDK.Filters.K2Filter, _globals.SDK.Filters.K6Filter, _globals.SDK.Filters.KDynamicFilter]
    }, {
      name: 'bw',
      filters: [_globals.SDK.Filters.BWFilter, _globals.SDK.Filters.BWHardFilter, _globals.SDK.Filters.X400Filter]
    }, {
      name: 'summer',
      filters: [_globals.SDK.Filters.FrontFilter, _globals.SDK.Filters.MellowFilter, _globals.SDK.Filters.SemiredFilter, _globals.SDK.Filters.SunnyFilter, _globals.SDK.Filters.TexasFilter]
    }, {
      name: 'winter',
      filters: [_globals.SDK.Filters.MetalFilter, _globals.SDK.Filters.A15Filter, _globals.SDK.Filters.BreezeFilter, _globals.SDK.Filters.FridgeFilter, _globals.SDK.Filters.OrchidFilter, _globals.SDK.Filters.QuoziFilter]
    }, {
      name: 'special',
      filters: [_globals.SDK.Filters.FoodFilter, _globals.SDK.Filters.GlamFilter, _globals.SDK.Filters.LomoFilter, _globals.SDK.Filters.GobblinFilter]
    }];

    this._initCategories();
  }

  /**
   * Initializes the categories
   * @private
   */


  FilterManager.prototype._initCategories = function _initCategories() {
    var _this = this;

    // Should the categories passed in by the user replace the existing ones?
    if (this._options.categories) {
      if (this._options.replaceCategories) {
        this._categories = this._options.categories;
      } else {
        this._categories = _globals.Utils.mergeCategories(this._categories, this._options.categories, 'filters');
      }
    }

    // Remove filters that should not be selectable
    if (this._options.selectableFilters) {
      (function () {
        var newCategories = [];
        _this._categories.forEach(function (category) {
          var filters = category.filters.filter(function (f) {
            return _this._options.selectableFilters.indexOf(f.identifier) !== -1;
          });
          if (filters.length > 0) {
            newCategories.push({
              name: category.name,
              filters: filters
            });
          }
        });
        _this._categories = newCategories;
      })();
    }

    var allCategory = {
      name: 'all',
      filters: this._categories.map(function (c) {
        return c.filters;
      }).reduce(function (a, b) {
        return a.concat(b);
      })
    };
    this._categories.unshift(allCategory);
    this._categories.forEach(function (c) {
      _this._categoriesById[c.name] = c;
    });
  };

  /**
   * Returns the filters for the category with the given name
   * @param  {String} categoryName
   * @return {Object[]}
   */


  FilterManager.prototype.getFiltersForCategory = function getFiltersForCategory(categoryName) {
    if (!this._categoriesById[categoryName]) {
      throw new Error('Unknown filter category \'' + categoryName + '\'');
    }
    return this._categoriesById[categoryName].filters;
  };

  /**
   * Returns the categories
   * @return {Object[]}
   */


  FilterManager.prototype.getCategories = function getCategories() {
    return this._categories;
  };

  return FilterManager;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = FilterManager;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StickerManager = function () {
  function StickerManager(options) {
    (0, _classCallCheck3.default)(this, StickerManager);

    this._options = options;
    this._categoriesById = {};
    this._categories = [];

    this._initCategories();
  }

  /**
   * Initializes the categories
   * @private
   */


  StickerManager.prototype._initCategories = function _initCategories() {
    var _this = this;

    var _options = this._options;
    var replaceCategories = _options.replaceCategories;
    var categories = _options.categories;

    var defaultCategories = _globals.Constants.DEFAULTS.STICKER_CATEGORIES;

    if (!categories) {
      this._categories = defaultCategories.slice(0);
    } else {
      if (replaceCategories) {
        this._categories = categories.slice(0);
      } else {
        this._categories = _globals.Utils.mergeCategories(defaultCategories, categories, 'stickers');
      }
    }

    var allCategory = {
      name: 'all',
      stickers: this._categories.map(function (c) {
        return c.stickers;
      }).reduce(function (a, b) {
        return a.concat(b);
      })
    };
    this._categories.unshift(allCategory);

    // Build cat id => category hash
    this._categoriesById = {};
    this._categories.forEach(function (c) {
      _this._categoriesById[c.name] = c;
    });
  };

  /**
   * Returns the stickers for the category with the given name
   * @param  {String} categoryName
   * @return {Object[]}
   */


  StickerManager.prototype.getStickersForCategory = function getStickersForCategory(categoryName) {
    if (!this._categoriesById[categoryName]) {
      throw new Error('Unknown sticker category \'' + categoryName + '\'');
    }
    return this._categoriesById[categoryName].stickers;
  };

  /**
   * Returns the categories
   * @return {Object[]}
   */


  StickerManager.prototype.getCategories = function getCategories() {
    return this._categories;
  };

  return StickerManager;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = StickerManager;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = __webpack_require__(281);

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _typeof2 = __webpack_require__(56);

var _typeof3 = _interopRequireDefault(_typeof2);

var _react = __webpack_require__(113);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(127);

var _classnames2 = _interopRequireDefault(_classnames);

var _bem = __webpack_require__(120);

var _bem2 = _interopRequireDefault(_bem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function flatten(arr) {
  var result = [];
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] instanceof Array) {
      result = result.concat(flatten(arr[i]));
    } else {
      result.push(arr[i]);
    }
  }
  return result;
} /*
   * This file is part of PhotoEditorSDK.
   *
   * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
   * All rights reserved.
   *
   * Redistribution and use in source and binary forms, without
   * modification, are permitted provided that the following license agreement
   * is approved and a legal/financial contract was signed by the user.
   * The license agreement can be found under following link:
   *
   * https://www.photoeditorsdk.com/LICENSE.txt
   */

var BEM_TYPES = {
  b: 'block',
  e: 'element',
  m: 'modifier'
};
var ReactBEM = {
  /**
   * Parses the given ReactBEM specifier and returns an array of
   * BEM information (type, name, pass)
   * @param  {string} specifier
   * @return {Array.<Object>}
   * @private
   */
  _parseBemSpecifier: function _parseBemSpecifier(specifier) {
    if (!specifier) return [];

    var parts = specifier.split(' ');
    var data = parts.map(function (part) {
      var match = part.match(/^(\$)?([bem])\:(.*)$/i);
      if (!match) {
        throw new Error('Invalid BEM specifier: ' + part);
      }

      var pass = typeof match[1] !== 'undefined';
      var type = BEM_TYPES[match[2]];
      var name = match[3];
      return { type: type, name: name, pass: pass };
    });
    return data;
  },


  /**
   * Returns the BEM info for the given node
   * @param  {Object} node
   * @return {Object}
   * @private
   */
  _getBemInfoForNode: function _getBemInfoForNode(node) {
    var isBemNode = node.type === 'bem';
    var specifier = isBemNode ? node.props.specifier : node.props.bem;

    if (isBemNode && !specifier) {
      throw new Error('<bem> elements should always have a `specifier` property');
    }

    var data = this._parseBemSpecifier(specifier);

    // <bem> nodes pass all bem information to the children
    if (isBemNode) {
      data.forEach(function (obj) {
        obj.pass = true;
      });
    }

    return { data: data, isBemNode: isBemNode };
  },


  /**
   * Used in React.Component's `render` method
   *
   * @param  {String} type
   * @param  {Object} props
   * @param  {Array.<Object>} [...children]
   * @return {Object}
   */
  createElement: function createElement(type, props) {
    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      children[_key - 2] = arguments[_key];
    }

    props = props || {};
    children = children.filter(function (child) {
      return child !== null && typeof child !== 'undefined';
    });
    return { type: type, props: props, children: children };
  },


  /**
   * Checks whether we can apply a bem class to the given node
   * @param  {?}  node
   * @return {Boolean}
   * @private
   */
  _isNodeBEMable: function _isNodeBEMable(node) {
    return node !== null && (typeof node === 'undefined' ? 'undefined' : (0, _typeof3.default)(node)) === 'object' && !_react2.default.isValidElement(node);
  },


  /**
   * Sets the BEM class for the given node. Iterates through its
   * children and sets their BEM class as well
   * @param  {Object} node
   * @return {Object}
   * @private
   */
  _applyBEMClasses: function _applyBEMClasses(node) {
    var _this = this;

    if (!this._isNodeBEMable(node)) return node;

    var classNames = node.props.className ? [node.props.className] : [];

    // Prepare BEM objects
    var bemInfo = this._getBemInfoForNode(node);
    var ownBemObject = node.props.__bemObject;
    var childrenBemObject = node.props.__bemObject;
    bemInfo.data.forEach(function (obj) {
      if (obj.type === 'block') {
        ownBemObject = _bem2.default.block(obj.name);
        if (obj.pass) {
          childrenBemObject = _bem2.default.block(obj.name);
        }
        classNames.push(ownBemObject.str);
      } else if (obj.type === 'element') {
        if (!ownBemObject) {
          throw new Error('Tried to create an element, but no parent block has been found.');
        }

        ownBemObject = ownBemObject.element(obj.name);
        if (obj.pass) {
          childrenBemObject = childrenBemObject.element(obj.name);
        }
        classNames.push(ownBemObject.str);
      } else if (obj.type === 'modifier') {
        if (!ownBemObject) {
          throw new Error('Tried to create a modifier, but no parent block has been found.');
        }

        if (obj.pass) {
          childrenBemObject = childrenBemObject.modifier(obj.name);
        }
        classNames.push(ownBemObject.modifier(obj.name).str);
      }
    });

    // Apply classname (if necessary)
    var className = (0, _classnames2.default)(classNames);
    if (className) {
      node.props.className = className;
    }

    node.children = flatten(node.children);

    // Pass `childrenBemObject` to child nodes
    node.children.forEach(function (child) {
      if (!_this._isNodeBEMable(child)) return;
      child.props.__bemObject = childrenBemObject;
    });

    // Apply BEM objects to children
    node.children = node.children.map(function (child) {
      return _this._applyBEMClasses(child);
    });

    node.children = flatten(node.children);

    // Remove unnecessary props
    delete node.props.__bemObject;
    delete node.props.bem;

    if (bemInfo.isBemNode) {
      if (node.children instanceof Array && node.children.length === 1) {
        node = node.children[0];
      } else {
        node = node.children;
      }
    }

    return node;
  },


  /**
   * Transforms the given ReactBEM element and its children into
   * actual ReactJS elements
   * @param  {Object} node
   * @return {React.Element}
   */
  _transformToReact: function _transformToReact(node) {
    var _this2 = this;

    if (!this._isNodeBEMable(node)) return node;

    node.children = node.children.map(function (child) {
      return _this2._transformToReact(child);
    });

    return _react2.default.createElement.apply(_react2.default, [node.type, node.props].concat((0, _toConsumableArray3.default)(node.children)));
  },


  /**
   * Transforms the given ReactBEM object and its children
   * @param  {Object} root
   * @return {React.Element}
   */
  transform: function transform(root) {
    root = this._applyBEMClasses(root);

    // Root node should be a single node, not an array. Returning the array
    // here will cause React to throw an error saying that this is a no-go
    /* istanbul ignore next */
    if (root instanceof Array) {
      return root;
    }

    root = this._transformToReact(root);
    return root;
  }
};

exports.default = ReactBEM;

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var maxLogLevel = 'warn';

var LEVELS = [{ type: 'trace', background: '#EEEEEE', color: '#AAAAAA' }, { type: 'info', background: '#BDE5F8', color: '#00529B' }, { type: 'warn', background: '#FEEFB3', color: '#9F6000' }, { type: 'error', background: '#FFBABA', color: '#D8000C' }, { type: 'log', background: '#EEEEEE', color: '#1f4f6b' }];
var LEVEL_TYPES = LEVELS.map(function (l) {
  return l.type;
});

var Log = {};

Log.setLevel = function (_level) {
  maxLogLevel = _level;
};
Log.canLog = function (type) {
  if (maxLogLevel === null) return false;
  var currentLevelIndex = LEVEL_TYPES.indexOf(type);
  var maxLevelIndex = LEVEL_TYPES.indexOf(maxLogLevel);
  if (currentLevelIndex < maxLevelIndex) return false;
  return true;
};
Log.hasColorfulOutput = function () {
  return (!process || process && process.browser) && typeof navigator !== 'undefined' && navigator.userAgent.match(/Gecko|WebKit/i) && !navigator.userAgent.match(/Trident/);
};

Log.printError = function (e) {
  var lines = e.stack.split('\n');
  lines.forEach(function (line) {
    Log.error('Error', line);
  });
};

LEVELS.forEach(function (level) {
  var type = level.type;
  var background = level.background;
  var color = level.color;

  Log[type] = function (tag) {
    if (!Log.canLog(type)) return;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var output = args.map(function (a) {
      return typeof a === 'string' ? a : a.toString();
    }).join(' ');
    if (!Log.hasColorfulOutput()) {
      return console.log('PhotoEditorSDK | ' + tag + ' | ' + output);
    }
    console.log('%c  %c PhotoEditorSDK %c  %c ' + tag + ' %c  ' + output + '  %c  ', 'background: #43ADEB; padding: 5px 0', 'background: #2B2B2B; color: white; padding: 5px 0', 'background: #43ADEB; padding: 5px 0', 'background: ' + background + '; color: ' + color + '; padding: 5px 0; font-weight: bold', 'background: #2B2B2B; color: white; padding: 5px 0', 'background: #43ADEB; padding: 5px 0');
  };
});

exports.default = Log;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(287), __esModule: true };

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _defineProperty = __webpack_require__(125);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(73)
  , TAG = __webpack_require__(15)('toStringTag')
  // ES3 wrong here
  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function(it, key){
  try {
    return it[key];
  } catch(e){ /* empty */ }
};

module.exports = function(it){
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(44)
  , document = __webpack_require__(24).document
  // in old IE typeof document.createElement is 'object'
  , is = isObject(document) && isObject(document.createElement);
module.exports = function(it){
  return is ? document.createElement(it) : {};
};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(30) && !__webpack_require__(43)(function(){
  return Object.defineProperty(__webpack_require__(129)('div'), 'a', {get: function(){ return 7; }}).a != 7;
});

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(73);
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
  return cof(it) == 'String' ? it.split('') : Object(it);
};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var LIBRARY        = __webpack_require__(77)
  , $export        = __webpack_require__(31)
  , redefine       = __webpack_require__(136)
  , hide           = __webpack_require__(34)
  , has            = __webpack_require__(32)
  , Iterators      = __webpack_require__(35)
  , $iterCreate    = __webpack_require__(300)
  , setToStringTag = __webpack_require__(80)
  , getPrototypeOf = __webpack_require__(308)
  , ITERATOR       = __webpack_require__(15)('iterator')
  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
  , FF_ITERATOR    = '@@iterator'
  , KEYS           = 'keys'
  , VALUES         = 'values';

var returnThis = function(){ return this; };

module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
  $iterCreate(Constructor, NAME, next);
  var getMethod = function(kind){
    if(!BUGGY && kind in proto)return proto[kind];
    switch(kind){
      case KEYS: return function keys(){ return new Constructor(this, kind); };
      case VALUES: return function values(){ return new Constructor(this, kind); };
    } return function entries(){ return new Constructor(this, kind); };
  };
  var TAG        = NAME + ' Iterator'
    , DEF_VALUES = DEFAULT == VALUES
    , VALUES_BUG = false
    , proto      = Base.prototype
    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
    , $default   = $native || getMethod(DEFAULT)
    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
    , methods, key, IteratorPrototype;
  // Fix native
  if($anyNative){
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
    if(IteratorPrototype !== Object.prototype){
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if(DEF_VALUES && $native && $native.name !== VALUES){
    VALUES_BUG = true;
    $default = function values(){ return $native.call(this); };
  }
  // Define iterator
  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG]  = returnThis;
  if(DEFAULT){
    methods = {
      values:  DEF_VALUES ? $default : getMethod(VALUES),
      keys:    IS_SET     ? $default : getMethod(KEYS),
      entries: $entries
    };
    if(FORCED)for(key in methods){
      if(!(key in proto))redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

var pIE            = __webpack_require__(57)
  , createDesc     = __webpack_require__(46)
  , toIObject      = __webpack_require__(33)
  , toPrimitive    = __webpack_require__(85)
  , has            = __webpack_require__(32)
  , IE8_DOM_DEFINE = __webpack_require__(130)
  , gOPD           = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(30) ? gOPD : function getOwnPropertyDescriptor(O, P){
  O = toIObject(O);
  P = toPrimitive(P, true);
  if(IE8_DOM_DEFINE)try {
    return gOPD(O, P);
  } catch(e){ /* empty */ }
  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys      = __webpack_require__(135)
  , hiddenKeys = __webpack_require__(76).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
  return $keys(O, hiddenKeys);
};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

var has          = __webpack_require__(32)
  , toIObject    = __webpack_require__(33)
  , arrayIndexOf = __webpack_require__(293)(false)
  , IE_PROTO     = __webpack_require__(81)('IE_PROTO');

module.exports = function(object, names){
  var O      = toIObject(object)
    , i      = 0
    , result = []
    , key;
  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while(names.length > i)if(has(O, key = names[i++])){
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(34);

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(83)
  , min       = Math.min;
module.exports = function(it){
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(128)
  , ITERATOR  = __webpack_require__(15)('iterator')
  , Iterators = __webpack_require__(35);
module.exports = __webpack_require__(14).getIteratorMethod = function(it){
  if(it != undefined)return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(16);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (false) {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;

/***/ },
/* 140 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ },
/* 141 */
/***/ function(module, exports) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

/***/ },
/* 142 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var PooledClass = __webpack_require__(27);

var invariant = __webpack_require__(4);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

_assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function (callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function () {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  checkpoint: function () {
    return this._callbacks ? this._callbacks.length : 0;
  },

  rollback: function (len) {
    if (this._callbacks) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function () {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function () {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 */

'use strict';

var DOMProperty = __webpack_require__(37);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactDOMInstrumentation = __webpack_require__(364);
var ReactInstrumentation = __webpack_require__(10);

var quoteAttributeValueForBrowser = __webpack_require__(405);
var warning = __webpack_require__(6);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    if (false) {
      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
    }
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (false) {
      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (false) {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (false) {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (false) {
      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
    }
  }

};

module.exports = DOMPropertyOperations;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = __webpack_require__(27);
var ReactElement = __webpack_require__(20);

var emptyFunction = __webpack_require__(16);
var traverseAllChildren = __webpack_require__(111);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func;
  var context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result;
  var keyPrefix = bookKeeping.keyPrefix;
  var func = bookKeeping.func;
  var context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var ReactComponent = __webpack_require__(96);
var ReactElement = __webpack_require__(20);
var ReactPropTypeLocations = __webpack_require__(102);
var ReactPropTypeLocationNames = __webpack_require__(101);
var ReactNoopUpdateQueue = __webpack_require__(100);

var emptyObject = __webpack_require__(47);
var invariant = __webpack_require__(4);
var keyMirror = __webpack_require__(60);
var keyOf = __webpack_require__(26);
var warning = __webpack_require__(6);

var MIXINS_KEY = keyOf({ mixins: null });

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});

var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (false) {
      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (false) {
      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (false) {
      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

// noop
function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (false) {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (false) {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (false) {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    var Constructor = function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (false) {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (false) {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (false) {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

'use strict';

var DOMChildrenOperations = __webpack_require__(90);
var ReactDOMIDOperations = __webpack_require__(362);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function (rootNodeID) {}

};

module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 148 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponentFlags
 */

'use strict';

var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var _assign = __webpack_require__(7);

var DisabledInputUtils = __webpack_require__(61);
var LinkedValueUtils = __webpack_require__(95);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactUpdates = __webpack_require__(21);

var warning = __webpack_require__(6);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
     false ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    if (props.multiple) {
       false ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else {
       false ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (false) {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
       false ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;

/***/ },
/* 150 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

/***/ },
/* 151 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactFeatureFlags
 * 
 */

'use strict';

var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactHostComponent
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var invariant = __webpack_require__(4);

var genericComponentClass = null;
// This registry keeps track of wrapper classes around host tags.
var tagToComponentClass = {};
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function (componentClasses) {
    _assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = __webpack_require__(366);

var containsNode = __webpack_require__(326);
var focusNode = __webpack_require__(140);
var getActiveElement = __webpack_require__(141);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var DOMLazyTree = __webpack_require__(36);
var DOMProperty = __webpack_require__(37);
var ReactBrowserEventEmitter = __webpack_require__(62);
var ReactCurrentOwner = __webpack_require__(28);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactDOMContainerInfo = __webpack_require__(358);
var ReactDOMFeatureFlags = __webpack_require__(361);
var ReactElement = __webpack_require__(20);
var ReactFeatureFlags = __webpack_require__(151);
var ReactInstanceMap = __webpack_require__(51);
var ReactInstrumentation = __webpack_require__(10);
var ReactMarkupChecksum = __webpack_require__(375);
var ReactReconciler = __webpack_require__(38);
var ReactUpdateQueue = __webpack_require__(104);
var ReactUpdates = __webpack_require__(21);

var emptyObject = __webpack_require__(47);
var instantiateReactComponent = __webpack_require__(166);
var invariant = __webpack_require__(4);
var setInnerHTML = __webpack_require__(65);
var shouldUpdateReactComponent = __webpack_require__(110);
var warning = __webpack_require__(6);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (false) {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (false) {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (false) {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  // this.props is actually a ReactElement
  return this.props;
};

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by devtools!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    if (false) {
      // The instance here is TopLevelWrapper so we report mount for its child.
      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (false) {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (false) {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (false) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (false) {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
      }
    }
  }
};

module.exports = ReactMount;

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = __webpack_require__(60);

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  SET_MARKUP: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNodeTypes
 * 
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactElement = __webpack_require__(20);

var invariant = __webpack_require__(4);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (ReactElement.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
     true ?  false ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = __webpack_require__(20);
var ReactPropTypeLocationNames = __webpack_require__(101);
var ReactPropTypesSecret = __webpack_require__(103);

var emptyFunction = __webpack_require__(16);
var getIteratorFn = __webpack_require__(164);
var warning = __webpack_require__(6);

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

function createChainableTypeChecker(validate) {
  if (false) {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (false) {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in the next major version. You may be ' + 'seeing this warning due to a third-party PropTypes library. ' + 'See https://fb.me/react-warning-dont-call-proptypes for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
     false ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
     false ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === 'symbol') {
    return true;
  }

  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  // Fallback for non-spec compliant Symbols which are polyfilled.
  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;

/***/ },
/* 158 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactVersion
 */

'use strict';

module.exports = '15.3.0';

/***/ },
/* 159 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 * 
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule canDefineProperty
 */

'use strict';

var canDefineProperty = false;
if (false) {
  try {
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;

/***/ },
/* 162 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 * 
 */

'use strict';

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getHostComponentFromComposite
 */

'use strict';

var ReactNodeTypes = __webpack_require__(156);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

/***/ },
/* 164 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 * 
 */

'use strict';

/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var ReactCompositeComponent = __webpack_require__(354);
var ReactEmptyComponent = __webpack_require__(150);
var ReactHostComponent = __webpack_require__(152);
var ReactInstrumentation = __webpack_require__(10);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getDisplayName(instance) {
  var element = instance._currentElement;
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else if (instance.getName) {
    return instance.getName() || 'Unknown';
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

var nextDebugID = 1;

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (false) {
    if (shouldHaveDebugID) {
      var debugID = nextDebugID++;
      instance._debugID = debugID;
      var displayName = getDisplayName(instance);
      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
      var owner = node && node._owner;
      if (owner) {
        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
      }
    } else {
      instance._debugID = 0;
    }
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (false) {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;

/***/ },
/* 167 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 * 
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);
var escapeTextContentForBrowser = __webpack_require__(64);
var setInnerHTML = __webpack_require__(65);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

/***/ },
/* 169 */
/***/ function(module, exports) {

var g;

// This works in non-strict mode
g = (function() { return this; })();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _splashScreenComponent = __webpack_require__(244);

var _splashScreenComponent2 = _interopRequireDefault(_splashScreenComponent);

var _photoRollScreenComponent = __webpack_require__(238);

var _photoRollScreenComponent2 = _interopRequireDefault(_photoRollScreenComponent);

var _webcamScreenComponent = __webpack_require__(248);

var _webcamScreenComponent2 = _interopRequireDefault(_webcamScreenComponent);

var _editorScreenComponent = __webpack_require__(233);

var _editorScreenComponent2 = _interopRequireDefault(_editorScreenComponent);

var _screenComponent = __webpack_require__(40);

var _screenComponent2 = _interopRequireDefault(_screenComponent);

var _modalContainerComponent = __webpack_require__(227);

var _modalContainerComponent2 = _interopRequireDefault(_modalContainerComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var AppComponent = function (_React$Component) {
  (0, _inherits3.default)(AppComponent, _React$Component);

  function AppComponent() {
    (0, _classCallCheck3.default)(this, AppComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args)));

    _this._screens = {
      splash: _splashScreenComponent2.default,
      photoRoll: _photoRollScreenComponent2.default,
      webcam: _webcamScreenComponent2.default,
      editor: _editorScreenComponent2.default,
      empty: _screenComponent2.default
    };

    var initialScreen = void 0;
    if (_this.props.options.editor.image) {
      initialScreen = 'editor';
    } else {
      initialScreen = 'splash';
    }

    _this._previousScreensStack = [];
    _this.state = {
      activeScreen: _this._screens[initialScreen],
      activeScreenName: initialScreen,
      screens: (0, _defineProperty3.default)({}, initialScreen, _this._screens[initialScreen])
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Checks if the app has a previous screen on the stack
   * @return {Boolean}
   */


  AppComponent.prototype.hasPreviousScreen = function hasPreviousScreen() {
    return !!this._previousScreensStack.length;
  };

  /**
   * Returns the previous screen
   * @return {Screen}
   */


  AppComponent.prototype.getPreviousScreen = function getPreviousScreen() {
    var stack = this._previousScreensStack;
    return stack[stack.length - 1];
  };

  /**
   * Switches to the screen with the given name
   * @param  {String} name
   */


  AppComponent.prototype.switchToScreen = function switchToScreen(name) {
    var _this2 = this;

    var Screen = null;
    if (name === 'back') {
      Screen = this._previousScreensStack.pop();
      if (!Screen) {
        throw new Error('Unable to switch to previous screen - no previous screen found.');
      }
    } else {
      Screen = this._screens[name];
      if (!Screen) {
        throw new Error('Unknown screen `' + name + '`');
      }

      this._previousScreensStack.push(this.state.activeScreen);
    }

    if (!this.state.screens[name]) {
      this.state.screens[name] = Screen;
    }

    // Retain editor component
    if (this.state.activeScreenName !== 'editor') {
      delete this.state.screens[this.state.activeScreenName];
    }

    return new _globals.Promise(function (resolve) {
      _this2.setState({ activeScreen: Screen, activeScreenName: name }, function () {
        resolve();
      });
    });
  };

  /**
   * Gets called when an image is ready for editing
   * @param {Image} image
   * @param {Boolean} resetEditor
   */


  AppComponent.prototype.setImage = function setImage(image, resetEditor) {
    var _this3 = this;

    var options = this.props.options;

    options.editor.image = image;

    var firstEditorLaunch = !this.refs.editorScreen;
    this.switchToScreen('editor').then(function () {
      if (!firstEditorLaunch) {
        _this3.refs.editorScreen.setImage(image, resetEditor);
      }
    });
  };

  /**
   * Exports an image
   * @param {Boolean} download = false
   * @return {Promise}
   */


  AppComponent.prototype.export = function _export() {
    if (this.state.activeScreen !== this._screens.editor) {
      return _globals.Promise.reject(new Error('Unable to export: Active screen is not the editor screen.'));
    }

    if (this.state.screens.editor) {
      var _refs$editorScreen;

      return (_refs$editorScreen = this.refs.editorScreen).export.apply(_refs$editorScreen, arguments);
    }
  };

  /**
   * Serializes the editor state
   * @return {Promise}
   */


  AppComponent.prototype.serialize = function serialize() {
    var _refs$editorScreen2;

    if (!this.state.screens.editor) {
      return _globals.Promise.reject(new Error('Editor screen unavailable'));
    }
    return (_refs$editorScreen2 = this.refs.editorScreen).serialize.apply(_refs$editorScreen2, arguments);
  };

  /**
   * Deserializes the given data
   * @param  {Object} data
   * @return {Promise}
   */


  AppComponent.prototype.deserialize = function deserialize(data) {
    if (!this.state.screens.editor) {
      return _globals.Promise.reject(new Error('Editor screen unavailable'));
    }
    return this.refs.editorScreen.deserialize(data);
  };

  /**
   * Returns the context passed to all children
   * @return {Object}
   */


  AppComponent.prototype.getChildContext = function getChildContext() {
    return {
      ui: this.props.ui,
      options: this.props.options,
      mediator: this.props.mediator
    };
  };

  /**
   * Renders the existing screens
   * @return {ScreenComponent[]}
   * @private
   */


  AppComponent.prototype._renderScreens = function _renderScreens() {
    var renderedScreens = [];

    for (var name in this.state.screens) {
      var Screen = this.state.screens[name];
      var visible = this.state.activeScreen === Screen;
      renderedScreens.push(_globals.ReactBEM.createElement(Screen, { ref: name + 'Screen', app: this, visible: visible }));
    }

    return renderedScreens;
  };

  /**
   * Renders this component
   * @return {React.Component}
   */


  AppComponent.prototype.render = function render() {
    return _globals.ReactBEM.transform(_globals.ReactBEM.createElement(
      'div',
      { bem: 'b:editor' },
      _globals.ReactBEM.createElement(_modalContainerComponent2.default, {
        modalManager: _modalManager2.default.instance }),
      this._renderScreens()
    ));
  };

  return AppComponent;
}(_globals.React.Component);

exports.default = AppComponent;


AppComponent.childContextTypes = {
  ui: _globals.React.PropTypes.object.isRequired,
  mediator: _globals.React.PropTypes.object.isRequired,
  options: _globals.React.PropTypes.object.isRequired
};

AppComponent.propTypes = {
  ui: _globals.React.PropTypes.object.isRequired,
  mediator: _globals.React.PropTypes.object.isRequired,
  options: _globals.React.PropTypes.object.isRequired
};

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _provider = __webpack_require__(263);

Object.defineProperty(exports, 'Provider', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_provider).default;
  }
});

var _library = __webpack_require__(261);

Object.defineProperty(exports, 'Library', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_library).default;
  }
});

var _searchSuggestion = __webpack_require__(264);

Object.defineProperty(exports, 'SearchSuggestion', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_searchSuggestion).default;
  }
});

var _photo = __webpack_require__(262);

Object.defineProperty(exports, 'Photo', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_photo).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 172 */
/***/ function(module, exports) {

module.exports = {
	"controls": {
		"overview": {
			"filters": "Filter",
			"adjustments": "Korrekturen",
			"crop": "Zuschneiden",
			"blur": "Weichzeichnen",
			"border": "Rahmen",
			"sticker": "Sticker",
			"text": "Text",
			"brush": "Malen"
		},
		"border": {
			"color": "Farbe",
			"thickness": "Dicke"
		},
		"text": {
			"foreground": "Vordergrund",
			"background": "Hintergrund",
			"size": "Größe",
			"font": "Schriftart",
			"alignment": "Ausrichtung",
			"takeToFront": "Nach oben"
		},
		"adjustments": {
			"brightness": "Helligkeit",
			"contrast": "Kontrast",
			"saturation": "Sättigung",
			"exposure": "Belichtung",
			"shadows": "Schatten",
			"highlights": "Lichter",
			"clarity": "Klarheit"
		},
		"crop": {
			"custom": "Manuell",
			"square": "Quadratisch",
			"4-3": "4:3",
			"16-9": "16:9",
			"rotation": "Drehung"
		},
		"focus": {
			"radial": "Kreisförmig",
			"linear": "Linear",
			"blurRadius": "Radius"
		},
		"filters": {
			"intensity": "Intensität",
			"categories": {
				"all": "Alle",
				"retro": "Retro",
				"bw": "Schwarz & Weiß",
				"summer": "Sommer",
				"winter": "Winter",
				"special": "Spezial"
			}
		},
		"sticker": {
			"brightness": "Helligkeit",
			"contrast": "Kontrast",
			"saturation": "Sättigung",
			"blur": "Weichzeichnen",
			"flip": "Spiegeln",
			"flip-v": "Spiegeln (V)",
			"flip-h": "Spiegeln (H)",
			"takeToFront": "Nach oben",
			"categories": {
				"all": "Alle",
				"glasses": "Brillen",
				"hats": "Hüte",
				"beards": "Bärte",
				"misc": "Gemischt"
			}
		},
		"brush": {
			"thickness": "Dicke",
			"color": "Farbe"
		}
	},
	"webcam": {
		"headline": "Mache ein Foto!"
	},
	"editor": {
		"headline": "Foto editieren",
		"new": "Neu",
		"backgroundImage": "Hintergrundbild",
		"undo": "Rückgängig",
		"export": "Speichern"
	},
	"splash": {
		"upload": {
			"button": "Lade ein Foto hoch",
			"description": "Klicke hier, um ein Foto von deinem Rechner hochzuladen oder lade es per Drag-and-Drop hoch"
		},
		"webcam": {
			"headline": "Webcam",
			"description": "Klicke hier, um ein Foto mit deiner Webcam zu machen"
		},
		"photoRoll": {
			"headline": "Kostenloses Bildmaterial",
			"description": "Suche dir eines von tausenden Stock Photos aus."
		}
	},
	"photoRoll": {
		"search": {
			"placeholder": "Nach Fotos suchen",
			"noSearchResults": "Entschuldigung, aber wir konnten für <strong>\"${query}\"</strong> leider keine Ergebnisse finden.",
			"results": {
				"headline": "Suchergebnisse für \"${query}\""
			}
		}
	},
	"generic": {
		"back": "Zurück",
		"cancel": "Abbrechen",
		"color": "Farbe"
	},
	"loading": {
		"resizing": "Bild wird bearbeitet...",
		"exporting": "Exportiere...",
		"loading": "Lade..."
	},
	"warnings": {
		"imageResized_maxMegaPixels": {
			"title": "Bild verkleinert",
			"text": "Da dein Bild die maximale Größe von ${maxMegaPixels} Megapixeln überschreitet, wurde es auf ${width}x${height} Pixel verkleinert."
		},
		"imageResized_maxDimensions": {
			"title": "Bild verkleinert",
			"text": "Aufgrund von Hardware-Beschränkungen wurde das Bild auf ${width}x${height} Pixel verkleinert."
		}
	},
	"errors": {
		"imageLoadFail": {
			"title": "Bild konnte nicht geladen werden",
			"text": "Beim Laden des Bildes unter ${path} ist ein Fehler aufgetreten."
		},
		"webcamUnavailable": {
			"title": "Webcam nicht verfügbar",
			"text": "Webcam-Bild kann nicht dargestellt werden. (Fehler: ${error})"
		},
		"webcamNotSupported": {
			"title": "Webcam nicht unterstützt",
			"text": "Dein Browser unterstützt das Webcam-Feature leider noch nicht."
		},
		"renderingError": {
			"title": "Rendering-Fehler",
			"text": "Beim Rendern des Bildes ist ein Fehler aufgetreten."
		},
		"context_lost": {
			"title": "Es ist ein Fehler aufgetreten",
			"text": "Dein Browser hat zu lange gebraucht, um das Bild zu generieren. Bitte versuche es noch einmal."
		},
		"context_lost_limit": {
			"title": "Es ist ein Fehler aufgetreten",
			"text": "Bild-Generierung ist mehrmals fehlgeschlagen."
		},
		"loadingStickersFailed": {
			"title": "Laden der Sticker fehlgeschlagen"
		}
	}
};

/***/ },
/* 173 */
/***/ function(module, exports) {

module.exports = {
	"controls": {
		"overview": {
			"filters": "Filters",
			"adjustments": "Adjust",
			"crop": "Crop",
			"focus": "Focus",
			"border": "Border",
			"sticker": "Sticker",
			"text": "Text",
			"brush": "Brush"
		},
		"border": {
			"color": "Color",
			"thickness": "Thickness"
		},
		"text": {
			"foreground": "Foreground",
			"background": "Background",
			"size": "Size",
			"font": "Font",
			"alignment": "Alignment",
			"takeToFront": "To Front"
		},
		"adjustments": {
			"brightness": "Brightness",
			"contrast": "Contrast",
			"saturation": "Saturation",
			"exposure": "Exposure",
			"shadows": "Shadows",
			"highlights": "Highlights",
			"clarity": "Clarity"
		},
		"crop": {
			"custom": "Custom",
			"square": "Square",
			"4-3": "4:3",
			"16-9": "16:9",
			"rotation": "Rotation"
		},
		"focus": {
			"radial": "Radial",
			"linear": "Linear",
			"blurRadius": "Blur radius"
		},
		"filters": {
			"intensity": "Intensity",
			"categories": {
				"all": "All",
				"retro": "Retro",
				"bw": "Black & White",
				"summer": "Summer",
				"winter": "Winter",
				"special": "Special"
			}
		},
		"sticker": {
			"brightness": "Brightness",
			"contrast": "Contrast",
			"saturation": "Saturation",
			"blur": "Blur",
			"flip": "Flip",
			"flip-v": "Flip (V)",
			"flip-h": "Flip (H)",
			"takeToFront": "To Front",
			"categories": {
				"all": "All",
				"glasses": "Glasses",
				"hats": "Hats",
				"beards": "Beards",
				"misc": "Misc"
			}
		},
		"brush": {
			"thickness": "Thickness",
			"color": "Color"
		}
	},
	"webcam": {
		"headline": "Take a photo!"
	},
	"editor": {
		"headline": "Edit Photo",
		"new": "New",
		"backgroundImage": "Background Image",
		"undo": "Undo",
		"export": "Export"
	},
	"splash": {
		"upload": {
			"button": "Upload your image",
			"description": "Upload a picture from your library or just drag and drop"
		},
		"webcam": {
			"headline": "Webcam",
			"description": "Take a picture with your webcam or phone"
		},
		"photoRoll": {
			"headline": "Free stock footage",
			"description": "Select from thousands of Free Stock Photos"
		}
	},
	"photoRoll": {
		"search": {
			"placeholder": "Search for photos",
			"noSearchResults": "Sorry, but we couldn't find any photos for <strong>\"${query}\"</strong>.",
			"results": {
				"headline": "Search results for \"${query}\""
			}
		}
	},
	"generic": {
		"back": "Back",
		"cancel": "Cancel",
		"color": "Color"
	},
	"loading": {
		"resizing": "Resizing...",
		"exporting": "Exporting...",
		"loading": "Loading..."
	},
	"warnings": {
		"imageResized_maxMegaPixels": {
			"title": "Image resized",
			"text": "Your image exceeds the maximum size of ${maxMegaPixels} megapixels and has therefore been resized to ${width}x${height} pixels."
		},
		"imageResized_maxDimensions": {
			"title": "Image resized",
			"text": "Due to hardware limitations your image has been resized to ${width}x${height} pixels."
		}
	},
	"errors": {
		"imageLoadFail": {
			"title": "Failed to load image",
			"text": "Failed to load the image at ${path}"
		},
		"webcamUnavailable": {
			"title": "Webcam unavailable",
			"text": "Unable to display webcam image (Error: ${error})"
		},
		"webcamNotSupported": {
			"title": "Webcam not supported",
			"text": "The webcam feature is not supported by your browser."
		},
		"renderingError": {
			"title": "Error while rendering",
			"text": "An error has occurred while rendering the image."
		},
		"context_lost": {
			"title": "An error has occurred",
			"text": "Your browser took too long to render the image. Please try applying less operations."
		},
		"context_lost_limit": {
			"title": "An error has occurred",
			"text": "Your browser failed multiple times while rendering the image."
		},
		"loadingStickersFailed": {
			"title": "Failed to load stickers"
		}
	}
};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BackButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(BackButtonComponent, _BaseComponent);

  function BackButtonComponent() {
    (0, _classCallCheck3.default)(this, BackButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  BackButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:controls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell m:largeButton' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: '$e:largeButton', onClick: this.props.onClick },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/back.png', true) })
        )
      )
    );
  };

  return BackButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = BackButtonComponent;


BackButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = __webpack_require__(113);

var _react2 = _interopRequireDefault(_react);

var _reactBem = __webpack_require__(123);

var _reactBem2 = _interopRequireDefault(_reactBem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BaseComponent = function (_React$Component) {
  (0, _inherits3.default)(BaseComponent, _React$Component);

  function BaseComponent() {
    (0, _classCallCheck3.default)(this, BaseComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args)));

    _this._events = {};
    _this._needsStyleFixes = false;

    _this._bindAll('_onSharedStateUpdate', 'fixStyles');
    return _this;
  }

  // -------------------------------------------------------------------------- WORKAROUNDS

  /**
   * A method that is called whenever styles need to be fixed by the JavaScript.
   * This needs to be done thanks to older Internet Explorer browsers which have
   * a bunch of CSS bugs.
   */


  BaseComponent.prototype.fixStyles = function fixStyles() {};

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  BaseComponent.prototype.componentDidMount = function componentDidMount() {
    this._bindEvents();
    if (this.props.sharedState) {
      this.props.sharedState.on('update', this._onSharedStateUpdate);
    }

    if (this._needsStyleFixes) {
      this.fixStyles();
      if (this.context.options.responsive) {
        window.addEventListener('resize', this.fixStyles);
      }
    }
  };

  /**
   * Gets called before this component is unmounted
   */


  BaseComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    this._unbindEvents();

    if (this.props.sharedState) {
      this.props.sharedState.off('update', this._onSharedStateUpdate);
    }

    if (this.context.options.responsive && this._needsStyleFixes) {
      window.removeEventListener('resize', this.fixStyles);
    }
  };

  /**
   * Gets called when this component is about to receive new properties
   * @param  {Object} nextProps
   */


  BaseComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.sharedState) {
      if (this.props.sharedState) {
        this.props.sharedState.off('update', this._onSharedStateUpdate);
      }
      nextProps.sharedState.on('update', this._onSharedStateUpdate);
    }
  };

  // -------------------------------------------------------------------------- HELPER FUNCTIONS

  /**
   * Binds the instance methods with the given names
   * to the class context
   * @param  {Array.<String>} ...fnNames
   * @protected
   */


  BaseComponent.prototype._bindAll = function _bindAll() {
    var _this2 = this;

    for (var _len2 = arguments.length, fnNames = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      fnNames[_key2] = arguments[_key2];
    }

    fnNames.forEach(function (name) {
      if (typeof _this2[name] !== 'function') {
        throw new Error('_bindAll: ' + _this2.constructor.name + '.' + name + ' is not a function.');
      }
      _this2[name] = _this2[name].bind(_this2);
    });
  };

  /**
   * Returns the translation for `key`
   * @param  {String} key
   * @param  {Object} [interpolationOptions]
   * @return {String}
   */


  BaseComponent.prototype._t = function _t(key, interpolationOptions) {
    return this.context.ui.translate(key, interpolationOptions);
  };

  /**
   * A helper method for UI.helpers.assetPath
   * @param {?} ...args
   * @protected
   */


  BaseComponent.prototype._getAssetPath = function _getAssetPath() {
    var _context$ui;

    return (_context$ui = this.context.ui).getAssetPath.apply(_context$ui, arguments);
  };

  // -------------------------------------------------------------------------- SHARED STATE

  /**
   * Gets called when the shared state did change
   * @param  {Object} oldState
   * @param  {Object} newState
   * @private
   */


  BaseComponent.prototype._onSharedStateUpdate = function _onSharedStateUpdate(oldState, newState) {
    this.sharedStateDidChange(newState);

    if (this.shouldSharedComponentUpdate(oldState, newState)) {
      this.forceUpdate();
    }
  };

  /**
   * Checks if the component should change from the given state
   * @param  {Object} oldState
   * @param  {Object} newState
   * @return {Boolean}
   */


  BaseComponent.prototype.shouldSharedComponentUpdate = function shouldSharedComponentUpdate(oldState, newState) {
    return true;
  };

  /**
   * Gets called when the shared state did change
   * @param {Object} newState
   */


  BaseComponent.prototype.sharedStateDidChange = function sharedStateDidChange(newState) {};

  /**
   * Sets the given state on the shared state
   * @param {Object} state
   * @param {Boolean} update
   */


  BaseComponent.prototype.setSharedState = function setSharedState(state, update) {
    this.props.sharedState.set(state, update);
  };

  /**
   * Returns the shared state value for the given property
   * @param {String} prop
   * @return {*}
   */


  BaseComponent.prototype.getSharedState = function getSharedState(prop) {
    return this.props.sharedState.get(prop);
  };

  /**
   * Forces an update of the shared state
   */


  BaseComponent.prototype.forceSharedUpdate = function forceSharedUpdate() {
    this.props.sharedState.broadcastUpdate();
  };

  // -------------------------------------------------------------------------- EVENT HANDLING

  /**
   * Binds the events in _events
   * @protected
   */


  BaseComponent.prototype._bindEvents = function _bindEvents() {
    for (var eventName in this._events) {
      var handler = this._events[eventName];
      this.context.mediator.on(eventName, handler);
    }
  };

  /**
   * Unbinds the events in _events
   * @protected
   */


  BaseComponent.prototype._unbindEvents = function _unbindEvents() {
    for (var eventName in this._events) {
      var handler = this._events[eventName];
      this.context.mediator.off(eventName, handler);
    }
  };

  /**
   * Emits an event with the given event name and arguments through
   * the mediator
   * @param  {String} eventName
   * @param  {Array.<*>} ...args
   * @protected
   */


  BaseComponent.prototype._emitEvent = function _emitEvent(eventName) {
    var _context$mediator;

    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    (_context$mediator = this.context.mediator).emit.apply(_context$mediator, [eventName].concat(args));
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this element
   * @return {ReactBEM.element}
   */


  BaseComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _reactBem2.default.createElement('div');
  };

  /**
   * Transforms the ReactBEM.element returned by `renderWithBEM` into
   * React.Element objects with proper class names
   * @return {React.Element}
   */


  BaseComponent.prototype.render = function render() {
    return _reactBem2.default.transform(this.renderWithBEM());
  };

  return BaseComponent;
}(_react2.default.Component);

exports.default = BaseComponent;


BaseComponent.contextTypes = {
  editor: _react2.default.PropTypes.object,
  ui: _react2.default.PropTypes.object,
  options: _react2.default.PropTypes.object,
  mediator: _react2.default.PropTypes.object,
  editorScreen: _react2.default.PropTypes.object
};

BaseComponent.propTypes = {
  sharedState: _react2.default.PropTypes.any
};

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ButtonComponent, _BaseComponent);

  function ButtonComponent() {
    (0, _classCallCheck3.default)(this, ButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  ButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    var bemSpecifier = 'b:button';
    if (this.props.uppercase) {
      bemSpecifier += ' m:uppercase';
    }

    return _globals.ReactBEM.createElement(
      'button',
      { bem: bemSpecifier, className: this.props.className, onClick: this.props.onClick },
      this.props.children
    );
  };

  return ButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ButtonComponent;


ButtonComponent.propTypes = {
  onClick: _globals.React.PropTypes.func,
  children: _globals.React.PropTypes.any.isRequired,
  className: _globals.React.PropTypes.string
};

ButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CategoryDropdownOverlayComponent = function (_BaseComponent) {
  (0, _inherits3.default)(CategoryDropdownOverlayComponent, _BaseComponent);

  function CategoryDropdownOverlayComponent() {
    (0, _classCallCheck3.default)(this, CategoryDropdownOverlayComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks on an item
   * @param  {Object} item
   * @private
   */
  CategoryDropdownOverlayComponent.prototype._onItemClick = function _onItemClick(item) {
    this.props.onChange && this.props.onChange(item);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the list items
   * @return {Array.<React.Element>}
   * @private
   */


  CategoryDropdownOverlayComponent.prototype._renderListItems = function _renderListItems() {
    var _this2 = this;

    return this.props.items.map(function (item) {
      var active = item.name === _this2.props.selectedItem.name;
      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: '$e:item',
          className: active ? ' is-active' : '',
          onClick: _this2._onItemClick.bind(_this2, item) },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: item.icon }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          item.label
        )
      );
    });
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  CategoryDropdownOverlayComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:categoryDropdown $e:overlay' },
      _globals.ReactBEM.createElement(
        'ul',
        { bem: '$e:list' },
        this._renderListItems()
      )
    );
  };

  return CategoryDropdownOverlayComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = CategoryDropdownOverlayComponent;


CategoryDropdownOverlayComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var AlphaComponent = function (_BaseComponent) {
  (0, _inherits3.default)(AlphaComponent, _BaseComponent);

  function AlphaComponent() {
    (0, _classCallCheck3.default)(this, AlphaComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onKnobDrag', '_onKnobDragStart');

    _this._value = _this.props.initialValue.clone();
    _this._transparentPatternCanvas = _globals.Utils.createTransparentPatternCanvas();
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after this component has been mounted
   */


  AlphaComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderCanvas();
  };

  /**
   * Gets called when this component receives new props or state
   * @param  {Object} newProps
   * @return {Boolean}
   */


  AlphaComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(newProps) {
    var initialValue = newProps.initialValue;

    if (initialValue !== this._value) {
      this._value = initialValue.clone();
      this._renderCanvas();
      return true;
    }
    return false;
  };

  // -------------------------------------------------------------------------- DRAG EVENTS

  /**
   * Gets called when the user starts dragging the knob
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  AlphaComponent.prototype._onKnobDragStart = function _onKnobDragStart(position, e) {
    if (e.target === this.refs.knob) {
      this._initialAlpha = this._value.a;
    } else {
      this._setAlphaFromPosition(position);
    }
  };

  /**
   * Gets called while the user drags the knob
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  AlphaComponent.prototype._onKnobDrag = function _onKnobDrag(offset, e) {
    var canvas = this.refs.canvas;
    var canvasWidth = canvas.offsetWidth;

    var alphaChange = offset.x / canvasWidth;
    this._setAlpha(this._initialAlpha + alphaChange);
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style object for the knob
   * @return {Object}
   * @private
   */


  AlphaComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return {
      left: (this._value.a * 100).toFixed(2) + '%',
      top: '50%'
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Sets the alpha value of the color to the given one
   * @param {Number} a
   * @private
   */


  AlphaComponent.prototype._setAlpha = function _setAlpha(a) {
    this._value.a = a;
    this._value.a = Math.min(1, Math.max(0, this._value.a));
    this.forceUpdate();
    this.props.onChange && this.props.onChange(this._value);
  };

  /**
   * Sets the alpha from the given cursor position
   * @param {Vector2} position
   * @private
   */


  AlphaComponent.prototype._setAlphaFromPosition = function _setAlphaFromPosition(position) {
    var canvas = this.refs.canvas;
    this._initialAlpha = position.x / canvas.offsetWidth;
    this._setAlpha(this._initialAlpha);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the canvas with the current color
   * @private
   */


  AlphaComponent.prototype._renderCanvas = function _renderCanvas() {
    var canvas = this.refs.canvas;
    var context = canvas.getContext('2d');

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    // Fill with pattern
    var pattern = context.createPattern(this._transparentPatternCanvas, 'repeat');
    context.fillStyle = pattern;
    context.fillRect(0, 0, canvas.width, canvas.height);

    // Create gradient
    var gradient = context.createLinearGradient(0, 0, canvas.width, canvas.height);
    var color = this._value.clone();
    color.a = 0;
    gradient.addColorStop(0, color.toRGBA());
    gradient.addColorStop(1, this._value.toHex());

    // Draw gradient
    context.fillStyle = gradient;
    context.fillRect(0, 0, canvas.width, canvas.height);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  AlphaComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:colorPicker $e:alpha' },
      _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onKnobDragStart,
          onDrag: this._onKnobDrag },
        _globals.ReactBEM.createElement(
          'div',
          null,
          _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'canvas' }),
          _globals.ReactBEM.createElement('div', {
            bem: 'e:knob $b:knob m:transparent',
            ref: 'knob',
            style: this._getKnobStyle() })
        )
      )
    );
  };

  return AlphaComponent;
}(_globals.BaseComponent);

exports.default = AlphaComponent;


AlphaComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var HueComponent = function (_BaseComponent) {
  (0, _inherits3.default)(HueComponent, _BaseComponent);

  function HueComponent() {
    (0, _classCallCheck3.default)(this, HueComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onKnobDrag', '_onKnobDragStart');

    _this._value = _this.props.initialValue.clone();
    var hsvArr = _this._value.toHSV();
    var h = hsvArr[0];
    var s = hsvArr[1];
    var v = hsvArr[2];
    _this._hsvColor = { h: h, s: s, v: v };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after this component has been mounted
   */


  HueComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderCanvas();
  };

  /**
   * Gets called when this component receives new props or state
   * @param  {Object} newProps
   * @return {Boolean}
   */


  HueComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(newProps) {
    var initialValue = newProps.initialValue;

    if (initialValue !== this._value) {
      this._value = initialValue.clone();
      var hsvArr = this._value.toHSV();
      var h = hsvArr[0];
      var s = hsvArr[1];
      var v = hsvArr[2];
      this._hsvColor = { h: h, s: s, v: v };
      this._renderCanvas();
      return true;
    }
    return false;
  };

  // -------------------------------------------------------------------------- DRAG EVENTS

  /**
   * Gets called when the user starts dragging the knob
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  HueComponent.prototype._onKnobDragStart = function _onKnobDragStart(position, e) {
    if (e.target === this.refs.knob) {
      this._initialHue = this._hsvColor.h;
    } else {
      this._setValueFromPosition(position);
    }
  };

  /**
   * Gets called while the user drags the knob
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  HueComponent.prototype._onKnobDrag = function _onKnobDrag(offset, e) {
    var canvas = this.refs.canvas;

    var canvasHeight = canvas.offsetHeight;

    var hueChange = offset.y / canvasHeight;
    this._setHue(this._initialHue + hueChange);
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style object for the knob
   * @return {Object}
   * @private
   */


  HueComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return {
      left: '50%',
      top: (this._hsvColor.h * 100).toFixed(2) + '%'
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Sets the hue value of the color to the given one
   * @param {Number} h
   * @private
   */


  HueComponent.prototype._setHue = function _setHue(h) {
    var _hsvColor = this._hsvColor;
    var s = _hsvColor.s;
    var v = _hsvColor.v;

    h = Math.min(1, Math.max(0, h));
    s = Math.max(0.01, Math.min(s, 0.99));
    v = Math.max(0.01, Math.min(v, 0.99));

    this._value = _globals.Color.fromHSV(h, s, v, this._value.a);
    this._hsvColor = { h: h, s: s, v: v };
    this.forceUpdate();
    this.props.onChange && this.props.onChange(this._value);
  };

  /**
   * Sets the value from the given cursor position
   * @param {Vector2} position
   * @private
   */


  HueComponent.prototype._setValueFromPosition = function _setValueFromPosition(position) {
    var canvas = this.refs.canvas;

    this._initialHue = position.y / canvas.offsetHeight;
    this._setHue(this._initialHue);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the hue colors to the canvas
   * @private
   */


  HueComponent.prototype._renderCanvas = function _renderCanvas() {
    var canvas = this.refs.canvas;

    var context = canvas.getContext('2d');

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    for (var y = 0; y < canvas.height; y++) {
      var ratio = y / canvas.height;
      var color = _globals.Color.fromHSV(ratio, 1, 1);

      context.strokeStyle = color.toRGBA();
      context.beginPath();
      context.moveTo(0, y);
      context.lineTo(canvas.width, y);
      context.stroke();
    }
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  HueComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:colorPicker $e:hue' },
      _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onKnobDragStart,
          onDrag: this._onKnobDrag },
        _globals.ReactBEM.createElement(
          'div',
          null,
          _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'canvas' }),
          _globals.ReactBEM.createElement('div', {
            bem: 'e:knob $b:knob m:transparent',
            ref: 'knob',
            style: this._getKnobStyle() })
        )
      )
    );
  };

  return HueComponent;
}(_globals.BaseComponent);

exports.default = HueComponent;


HueComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _alphaComponent = __webpack_require__(178);

var _alphaComponent2 = _interopRequireDefault(_alphaComponent);

var _saturationComponent = __webpack_require__(181);

var _saturationComponent2 = _interopRequireDefault(_saturationComponent);

var _hueComponent = __webpack_require__(179);

var _hueComponent2 = _interopRequireDefault(_hueComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var ColorPickerOverlayComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ColorPickerOverlayComponent, _BaseComponent);

  function ColorPickerOverlayComponent() {
    (0, _classCallCheck3.default)(this, ColorPickerOverlayComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._value = _this.props.initialValue.clone();
    var hsvArr = _this._value.toHSV();
    var h = hsvArr[0];
    var s = hsvArr[1];
    var v = hsvArr[2];
    _this._hsv = { h: h, s: s, v: v };

    _this._bindAll('_onElementClick', '_onColorChange', '_onDocumentClick');
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  ColorPickerOverlayComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);

    document.addEventListener('click', this._onDocumentClick);
  };

  /**
   * Gets called when this component is about to be unmounted
   */


  ColorPickerOverlayComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _BaseComponent.prototype.componentWillUnmount.call(this);

    document.removeEventListener('click', this._onDocumentClick);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks anywhere on the screen. If the click is outside
   * of the color picker and the color picker is visible, we hide this color picker.
   * @param  {Event} e
   * @private
   */


  ColorPickerOverlayComponent.prototype._onDocumentClick = function _onDocumentClick(e) {
    for (var element = e.target; element; element = element.parentNode) {
      if (element === this.refs.root) {
        return;
      }
    }
    this.props.onClose && this.props.onClose();
  };

  /**
   * Catches clicks on the element and makes sure that no click event is triggered
   * on the parent element
   * @param  {Event} e
   * @private
   */


  ColorPickerOverlayComponent.prototype._onElementClick = function _onElementClick(e) {
    e.stopPropagation();
  };

  /**
   * Gets called when the color changes
   * @param  {Color} color
   * @private
   */


  ColorPickerOverlayComponent.prototype._onColorChange = function _onColorChange(color) {
    this._value = color;
    this.props.onChange && this.props.onChange(color);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ColorPickerOverlayComponent.prototype.renderWithBEM = function renderWithBEM() {
    var alphaComponent = void 0;
    if (this.props.alpha !== false) {
      alphaComponent = _globals.ReactBEM.createElement(_alphaComponent2.default, {
        initialValue: this._value,
        onChange: this._onColorChange
      });
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:colorPicker $e:overlay', onClick: this._onElementClick, ref: 'root' },
      alphaComponent,
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:bottom' },
        _globals.ReactBEM.createElement(_saturationComponent2.default, {
          initialValue: this._value,
          onChange: this._onColorChange
        }),
        _globals.ReactBEM.createElement(_hueComponent2.default, {
          initialValue: this._value,
          onChange: this._onColorChange
        })
      )
    );
  };

  return ColorPickerOverlayComponent;
}(_globals.BaseComponent);

exports.default = ColorPickerOverlayComponent;


ColorPickerOverlayComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var SaturationComponent = function (_BaseComponent) {
  (0, _inherits3.default)(SaturationComponent, _BaseComponent);

  function SaturationComponent() {
    (0, _classCallCheck3.default)(this, SaturationComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onKnobDrag', '_onKnobDragStart');

    _this._value = _this.props.initialValue.clone();
    var hsvArr = _this._value.toHSV();
    var h = hsvArr[0];
    var s = hsvArr[1];
    var v = hsvArr[2];
    _this._hsvColor = { h: h, s: s, v: v };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after this component has been mounted
   */


  SaturationComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderCanvas();
  };

  /**
   * Gets called when this component receives new props or state
   * @param  {Object} newProps
   * @return {Boolean}
   */


  SaturationComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(newProps) {
    var initialValue = newProps.initialValue;

    if (initialValue !== this._value) {
      this._value = initialValue.clone();
      var hsvArr = this._value.toHSV();
      var h = hsvArr[0];
      var s = hsvArr[1];
      var v = hsvArr[2];
      this._hsvColor = { h: h, s: s, v: v };
      this._renderCanvas();
      return true;
    }
    return false;
  };

  // -------------------------------------------------------------------------- DRAG EVENTS

  /**
   * Gets called when the user starts dragging the knob
   * @param  {Vector} position
   * @param  {Event} e
   * @private
   */


  SaturationComponent.prototype._onKnobDragStart = function _onKnobDragStart(position, e) {
    if (e.target === this.refs.knob) {
      this._initialValue = this._hsvColor.v;
      this._initialSaturation = this._hsvColor.s;
    } else {
      this._setValuesFromPosition(position);
    }
  };

  /**
   * Gets called while the user drags the knob
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  SaturationComponent.prototype._onKnobDrag = function _onKnobDrag(offset, e) {
    var canvas = this.refs.canvas;

    var canvasWidth = canvas.offsetWidth;
    var canvasHeight = canvas.offsetHeight;

    var saturationChange = offset.x / canvasWidth;
    var valueChange = offset.y / canvasHeight * -1;

    var h = this._hsvColor.h;

    this._setHSV(h, this._initialSaturation + saturationChange, this._initialValue + valueChange);
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style object for the knob
   * @return {Object}
   * @private
   */


  SaturationComponent.prototype._getKnobStyle = function _getKnobStyle() {
    var _hsvColor = this._hsvColor;
    var s = _hsvColor.s;
    var v = _hsvColor.v;


    return {
      left: (s * 100).toFixed(2) + '%',
      top: ((1 - v) * 100).toFixed(2) + '%'
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Sets the HSV values of the color to the given values
   * @param {Number} h
   * @param {Number} s
   * @param {Number} v
   * @private
   */


  SaturationComponent.prototype._setHSV = function _setHSV(h, s, v) {
    s = Math.max(0.01, Math.min(s, 0.99));
    v = Math.max(0.01, Math.min(v, 0.99));
    this._value = _globals.Color.fromHSV(h, s, v, this._value.a);
    this._hsvColor = { h: h, s: s, v: v };

    this.forceUpdate();
    this.props.onChange && this.props.onChange(this._value);
  };

  /**
   * Sets the values from the given cursor position
   * @param {Vector2} position
   * @private
   */


  SaturationComponent.prototype._setValuesFromPosition = function _setValuesFromPosition(position) {
    var canvas = this.refs.canvas;

    this._initialSaturation = position.x / canvas.offsetWidth;
    this._initialValue = 1 - position.y / canvas.offsetHeight;

    var h = this._hsvColor.h;

    this._setHSV(h, this._initialSaturation, this._initialValue);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the current color to the canvas
   * @private
   */


  SaturationComponent.prototype._renderCanvas = function _renderCanvas() {
    var canvas = this.refs.canvas;

    var context = canvas.getContext('2d');

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);

    for (var y = 0; y < canvas.height; y++) {
      var value = (canvas.height - y) / canvas.height;
      for (var x = 0; x < canvas.width; x++) {
        var saturation = x / canvas.width;
        var color = _globals.Color.fromHSV(this._hsvColor.h, saturation, value);
        var r = color.r;
        var g = color.g;
        var b = color.b;
        var a = color.a;


        var index = (y * canvas.width + x) * 4;

        imageData.data[index] = r * 255;
        imageData.data[index + 1] = g * 255;
        imageData.data[index + 2] = b * 255;
        imageData.data[index + 3] = a * 255;
      }
    }

    context.putImageData(imageData, 0, 0);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SaturationComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:colorPicker $e:saturation' },
      _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onKnobDragStart,
          onDrag: this._onKnobDrag },
        _globals.ReactBEM.createElement(
          'div',
          null,
          _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'canvas' }),
          _globals.ReactBEM.createElement('div', {
            bem: 'e:knob $b:knob m:transparent',
            ref: 'knob',
            style: this._getKnobStyle() })
        )
      )
    );
  };

  return SaturationComponent;
}(_globals.BaseComponent);

exports.default = SaturationComponent;


SaturationComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _sliderOverlayComponent = __webpack_require__(54);

var _sliderOverlayComponent2 = _interopRequireDefault(_sliderOverlayComponent);

var _miniSliderComponent = __webpack_require__(205);

var _miniSliderComponent2 = _interopRequireDefault(_miniSliderComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ITEMS = [{
  identifier: 'brightness',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('brightness');
  },
  defaultValue: 0,
  valueMultiplier: 100,
  valueOffset: 0
}, {
  identifier: 'saturation',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('saturation');
  },
  defaultValue: 1,
  valueMultiplier: 100,
  valueOffset: -100
}, {
  identifier: 'contrast',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('contrast');
  },
  defaultValue: 1,
  valueMultiplier: 100,
  valueOffset: -100
}, {
  identifier: 'clarity',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('clarity');
  },
  defaultValue: 0,
  valueMultiplier: 100,
  valueOffset: 0
}, {
  identifier: 'exposure',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('exposure');
  },
  defaultValue: 0,
  valueMultiplier: 100,
  valueOffset: 0
}, {
  identifier: 'shadows',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('shadows');
  },
  defaultValue: 1,
  valueMultiplier: 100,
  valueOffset: -100
}, {
  identifier: 'highlights',
  isAvailable: function isAvailable(editor) {
    return editor.isToolEnabled('highlights');
  },
  defaultValue: 1,
  valueMultiplier: 100,
  valueOffset: 0
}]; /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var AdjustmentsControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(AdjustmentsControlsComponent, _ControlsComponent);

  function AdjustmentsControlsComponent() {
    (0, _classCallCheck3.default)(this, AdjustmentsControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._bindAll('_onSliderValueChange');

    var editor = _this.context.editor;

    _this._operation = editor.operations.getOrCreate('adjustments');

    _this.state = { selectedControls: null };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  AdjustmentsControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    var editor = this.context.editor;

    var operationExistedBefore = this.getSharedState('operationExistedBefore');
    var initialOptions = this.getSharedState('initialOptions');

    if (!this._operation.optionsEqual(initialOptions)) {
      editor.history.add(this._operation, initialOptions, operationExistedBefore);
    }

    var defaultOptions = this._operation.getDefaultOptions();
    if (this._operation.optionsEqual(defaultOptions)) {
      editor.operations.remove(this._operation);
    }

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  /**
   * Gets called when the user changes the slider value
   * @param  {Number} value
   * @private
   */


  AdjustmentsControlsComponent.prototype._onSliderValueChange = function _onSliderValueChange(value) {
    var selectedControls = this.state.selectedControls;
    var identifier = selectedControls.identifier;
    var valueMultiplier = selectedControls.valueMultiplier;
    var valueOffset = selectedControls.valueOffset;

    value = (value - valueOffset) / valueMultiplier;
    this._operation.setOption(identifier, value);

    var editor = this.context.editor;

    editor.render();
  };

  /**
   * Gets called when the user clicks one of the three buttons
   * @param {Object} controlsItem
   * @param {Event} e
   * @private
   */


  AdjustmentsControlsComponent.prototype._onButtonClick = function _onButtonClick(controlsItem, e) {
    this.setState({ selectedControls: controlsItem });
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Builds the props hash passed to the sliders
   * @return {Object}
   */


  AdjustmentsControlsComponent.prototype._buildSliderProps = function _buildSliderProps(controls) {
    var identifier = controls.identifier;
    var defaultValue = controls.defaultValue;
    var valueMultiplier = controls.valueMultiplier;
    var valueOffset = controls.valueOffset;


    var minValue = -1 * valueMultiplier;
    var maxValue = 1 * valueMultiplier;
    var value = this._operation ? this._operation.getOption(identifier) : defaultValue;

    value *= valueMultiplier;
    value += valueOffset;

    return {
      minValue: minValue, maxValue: maxValue, value: value,
      valueUnit: '%',
      positiveValuePrefix: '+',
      label: this._t('controls.adjustments.' + identifier),
      middleDot: true,
      onChange: this._onSliderValueChange
    };
  };

  // -------------------------------------------------------------------------- RENDERING

  AdjustmentsControlsComponent.prototype.renderOverlayControls = function renderOverlayControls() {
    var selectedControls = this.state.selectedControls;

    if (!selectedControls) return;

    var sliderProps = this._buildSliderProps(selectedControls);
    return _globals.ReactBEM.createElement(_sliderOverlayComponent2.default, sliderProps);
  };

  /**
   * Renders the list items
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  AdjustmentsControlsComponent.prototype._renderListItems = function _renderListItems() {
    var _this2 = this;

    return ITEMS.filter(function (item) {
      return item.isAvailable(_this2.context.editor);
    }).map(function (item) {
      var isSelected = _this2.state.selectedControls === item;
      var className = isSelected ? 'is-active' : null;

      var miniSlider = void 0;
      if (!isSelected && false) {
        // Mini sliders temporarily disabled
        var sliderProps = _this2._buildSliderProps(item);
        miniSlider = _globals.ReactBEM.createElement(
          'bem',
          { specifier: 'b:adjustmentsControls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:miniSlider' },
            _globals.ReactBEM.createElement(_miniSliderComponent2.default, sliderProps)
          )
        );
      }

      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: item.identifier,
          'data-identifier': item.identifier },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:button m:withLabel', onClick: _this2._onButtonClick.bind(_this2, item), className: className },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: _this2._getAssetPath('controls/adjustments/' + item.identifier + '.png', true) }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:label' },
              _this2._t('controls.adjustments.' + item.identifier)
            ),
            miniSlider
          )
        )
      );
    });
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  AdjustmentsControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = this._renderListItems();

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        null,
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    );
  };

  return AdjustmentsControlsComponent;
}(_controlsComponent2.default);

exports.default = AdjustmentsControlsComponent;


AdjustmentsControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _adjustmentsControlsComponent = __webpack_require__(182);

var _adjustmentsControlsComponent2 = _interopRequireDefault(_adjustmentsControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The adjustments controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var AdjustmentsControls = function (_Controls) {
  (0, _inherits3.default)(AdjustmentsControls, _Controls);

  function AdjustmentsControls() {
    (0, _classCallCheck3.default)(this, AdjustmentsControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {AdjustmentsControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  AdjustmentsControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;

    var operationExistedBefore = editor.operations.exists('adjustments');
    var operation = editor.operations.getOrCreate('adjustments');
    var initialOptions = operation.serializeOptions();

    this.setSharedState({ operation: operation, operationExistedBefore: operationExistedBefore, initialOptions: initialOptions });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @override
   * @ignore
   */


  AdjustmentsControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('brightness') || editor.isToolEnabled('saturation') || editor.isToolEnabled('contrast');
  };

  return AdjustmentsControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


AdjustmentsControls.controlsComponent = _adjustmentsControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
AdjustmentsControls.identifier = 'adjustments';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
AdjustmentsControls.iconPath = 'controls/overview/adjustments.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
AdjustmentsControls.languageKey = 'controls.overview.adjustments';

/**
 * The default options for this control
 * @type {Object}
 */
AdjustmentsControls.defaultOptions = {};

exports.default = AdjustmentsControls;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _sliderComponent = __webpack_require__(41);

var _sliderComponent2 = _interopRequireDefault(_sliderComponent);

var _colorPickerComponent = __webpack_require__(67);

var _colorPickerComponent2 = _interopRequireDefault(_colorPickerComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BorderControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(BorderControlsComponent, _ControlsComponent);

  function BorderControlsComponent() {
    (0, _classCallCheck3.default)(this, BorderControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasDoneButton = true;
    _this._operation = _this.getSharedState('operation');
    _this._bindAll('_onThicknessUpdate', '_onColorUpdate');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the thickness has been updated
   * @param  {Number} thickness
   * @private
   */


  BorderControlsComponent.prototype._onThicknessUpdate = function _onThicknessUpdate(thickness) {
    var editor = this.context.editor;


    var inputDimensions = this.getSharedState('inputDimensions');
    this._operation.setThickness(thickness / inputDimensions.min());

    editor.render();
  };

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  BorderControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    var editor = this.context.editor;

    if (!this.getSharedState('operationExistedBefore')) {
      editor.operations.remove(this._operation);
    } else {
      this._operation.set(this.getSharedState('initialOptions'));
    }

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');
    editor.render();

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  /**
   * Gets called when the color has changed
   * @param  {Color} color
   * @private
   */


  BorderControlsComponent.prototype._onColorUpdate = function _onColorUpdate(color) {
    this._operation.setColor(color);

    var editor = this.context.editor;

    editor.render();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  BorderControlsComponent.prototype.renderControls = function renderControls() {
    var inputDimensions = this.getSharedState('inputDimensions');

    var minThickness = 0;
    var maxThickness = 0.5 * inputDimensions.min();
    var currentWidth = this._operation.getThickness() * inputDimensions.min();

    return [_globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:slider' },
      _globals.ReactBEM.createElement(_sliderComponent2.default, {
        style: 'large',
        minValue: minThickness,
        maxValue: maxThickness,
        valueUnit: 'px',
        middleDot: false,
        label: this._t('controls.border.thickness'),
        onChange: this._onThicknessUpdate,
        value: currentWidth })
    ), _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:colorPicker' },
      _globals.ReactBEM.createElement(_colorPickerComponent2.default, {
        initialValue: this._operation.getColor().clone(),
        onChange: this._onColorUpdate })
    )];
  };

  return BorderControlsComponent;
}(_controlsComponent2.default);

exports.default = BorderControlsComponent;


BorderControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _borderControlsComponent = __webpack_require__(184);

var _borderControlsComponent2 = _interopRequireDefault(_borderControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The border controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BorderControls = function (_Controls) {
  (0, _inherits3.default)(BorderControls, _Controls);

  function BorderControls() {
    (0, _classCallCheck3.default)(this, BorderControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {BorderControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  BorderControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;


    var operationExistedBefore = editor.operations.exists('border');
    var operation = editor.operations.getOrCreate('border', {
      thickness: 0.05
    });
    var initialOptions = {
      color: operation.getColor().clone(),
      thickness: operation.getThickness()
    };

    this.setSharedState({
      operation: operation,
      operationExistedBefore: operationExistedBefore,
      initialOptions: initialOptions,
      inputDimensions: operation.getInputDimensions()
    });

    editor.zoom.set('auto', function () {
      editor.features.disable('zoom', 'drag');
    });
  };

  /**
   * Gets called when the user leaves these controls
   * @this {StickersControlsComponent}
   * @override
   * @ignore
   */


  BorderControls.onExit = function onExit() {
    var editor = this.context.editor;

    var operation = this.getSharedState('operation');

    editor.history.add(operation, this.getSharedState('initialOptions'), this.getSharedState('operationExistedBefore'));

    operation.setEnabled(true);

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');
    editor.render();
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @ignore
   */


  BorderControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('border');
  };

  return BorderControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


BorderControls.controlsComponent = _borderControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
BorderControls.identifier = 'border';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
BorderControls.iconPath = 'controls/overview/border.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
BorderControls.languageKey = 'controls.overview.border';

/**
 * The default options for this control
 * @type {Object}
 */
BorderControls.defaultOptions = {};

exports.default = BorderControls;

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _spritesCanvasControlsComponent = __webpack_require__(69);

var _spritesCanvasControlsComponent2 = _interopRequireDefault(_spritesCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BrushCanvasControlsComponent = function (_SpritesCanvasControl) {
  (0, _inherits3.default)(BrushCanvasControlsComponent, _SpritesCanvasControl);

  function BrushCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, BrushCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _SpritesCanvasControl.call.apply(_SpritesCanvasControl, [this].concat(args)));

    _this._windowResized = false;
    _this._drawing = false;
    _this._bindAll('_onMouseEnter', '_onMouseLeave', '_onMouseDown', '_onMouseMove', '_onMouseUp', '_onMouseMoveOnCanvas', '_onWindowResize');

    _this._lastDrawPosition = null;

    _this._events = _globals.SDKUtils.extend(_this._events, (0, _defineProperty3.default)({}, _globals.Constants.EVENTS.WINDOW_RESIZE, _this._onWindowResize));

    _this.state = {
      cursorVisible: false,
      cursorPosition: new _globals.Vector2()
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  BrushCanvasControlsComponent.prototype.componentDidMount = function componentDidMount() {
    _SpritesCanvasControl.prototype.componentDidMount.call(this);
    this._updateContainerRect();
  };

  /**
   * Gets called when this component has been updated
   */


  BrushCanvasControlsComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    if (this._windowResized) {
      this._updateContainerRect();
      this._windowResized = false;
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the window has been resized
   * @private
   */


  BrushCanvasControlsComponent.prototype._onWindowResize = function _onWindowResize() {
    this._windowResized = true;
  };

  /**
   * Gets called when an operation has been removed
   * @param  {Operation} operation
   * @private
   */


  BrushCanvasControlsComponent.prototype._onOperationRemoved = function _onOperationRemoved(operation) {
    void 0;
  };

  /**
   * Gets called when an operation has been updated
   * @param  {Operation} operation
   * @private
   */


  BrushCanvasControlsComponent.prototype._onOperationUpdated = function _onOperationUpdated(operation) {
    if (operation === this.getSharedState('operation')) {
      this.forceUpdate();
    }
  };

  /**
   * Gets called when the user presses a mouse button
   * @param  {Event} e
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseDown = function _onMouseDown(e) {
    e.preventDefault();

    this._optionsBeforeDraw = this.getSharedState('operation').serializeOptions();
    delete this._optionsBeforeDraw.enabled;

    this._operationExistedBeforeDraw = this.getSharedState('operationExistedBefore');
    this.setSharedState({ operationExistedBefore: true }, false);

    var outputDimensions = this.context.editor.getOutputDimensions();
    var cursorPosition = this._getCursorPosition(e);

    var brush = this.getSharedState('brush');
    var thickness = this.getSharedState('thickness') / outputDimensions.min();
    var color = this.getSharedState('color');
    var hardness = this.getSharedState('hardness');
    this._drawing = true;
    this._currentPath = brush.createPath(thickness, hardness, color);
    this._currentPath.addControlPoint(cursorPosition.clone().divide(outputDimensions));

    document.addEventListener('mousemove', this._onMouseMove);
    document.addEventListener('touchmove', this._onMouseMove);
    document.addEventListener('mouseup', this._onMouseUp);
    document.addEventListener('touchend', this._onMouseUp);
  };

  /**
   * Gets called when the user releases a mouse button
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseUp = function _onMouseUp() {
    this._currentPath.setClosed(true);

    this._currentPath = null;
    this._drawing = false;

    var editor = this.context.editor;

    editor.history.add(this.getSharedState('operation'), this._optionsBeforeDraw, this._operationExistedBeforeDraw);

    document.removeEventListener('mousemove', this._onMouseMove);
    document.removeEventListener('touchmove', this._onMouseMove);
    document.removeEventListener('mouseup', this._onMouseUp);
    document.removeEventListener('touchend', this._onMouseUp);
  };

  /**
   * Gets called when the user enters the canvas
   * @param {Event} event
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseEnter = function _onMouseEnter(e) {
    var cursorPosition = this._getCursorPosition(e);
    this.setState({
      cursorVisible: true,
      cursorPosition: cursorPosition
    });
    this._onMouseMove(e);
  };

  /**
   * Gets called when the user leaves the canvas
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseLeave = function _onMouseLeave() {
    this.setState({
      cursorVisible: false
    });
  };

  /**
   * Gets called while the user moves the mouse
   * @param {Event} e
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseMove = function _onMouseMove(e) {
    var outputDimensions = this.context.editor.getOutputDimensions();

    var zoom = this.context.editor.zoom.get();
    var cursorPosition = this._getCursorPosition(e);
    this.setState({ cursorPosition: cursorPosition });

    var shouldDraw = void 0;
    if (!this._lastDrawPosition) {
      shouldDraw = true;
    } else {
      var brushSize = this.getSharedState('thickness');
      var distance = this._lastDrawPosition.clone().subtract(cursorPosition).abs().len() / zoom;
      shouldDraw = distance >= brushSize / 3;
    }

    if (this._drawing && shouldDraw) {
      this._currentPath.addControlPoint(cursorPosition.clone().divide(outputDimensions));

      this.getSharedState('brush').render(outputDimensions);

      this._lastDrawPosition = cursorPosition.clone();
    }
  };

  /**
   * Gets called while the user moves the mouse on top of the canvas. Updates
   * the cursor cursor position
   * @param  {Event} e
   * @private
   */


  BrushCanvasControlsComponent.prototype._onMouseMoveOnCanvas = function _onMouseMoveOnCanvas(e) {
    var cursorPosition = this._getCursorPosition(e);
    this.setState({ cursorPosition: cursorPosition });
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the cursor's style object
   * @return {Object}
   * @private
   */


  BrushCanvasControlsComponent.prototype._getCursorStyle = function _getCursorStyle() {
    var thickness = this.getSharedState('thickness');
    var color = this.getSharedState('color');

    var cursorPosition = this.state.cursorPosition;

    return {
      left: cursorPosition.x,
      top: cursorPosition.y,
      width: thickness,
      height: thickness,
      background: color.toRGBA(),
      marginLeft: thickness * -0.5,
      marginTop: thickness * -0.5
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Updates the container bounding rect
   * @private
   */


  BrushCanvasControlsComponent.prototype._updateContainerRect = function _updateContainerRect() {
    this._containerBoundingRect = this.refs.innerContainer.getBoundingClientRect();
  };

  /**
   * Returns the cursor position for the given event
   * @param  {Event} event
   * @private
   */


  BrushCanvasControlsComponent.prototype._getCursorPosition = function _getCursorPosition(event) {
    var position = _globals.Utils.getEventPosition(event);
    var boundingRect = this._containerBoundingRect;
    return position.subtract(boundingRect.left, boundingRect.top);
  };

  /**
   * Returns the properties for the outer container
   * @return {Object}
   * @private
   */


  BrushCanvasControlsComponent.prototype._getContainerProps = function _getContainerProps() {
    var props = _SpritesCanvasControl.prototype._getContainerProps.call(this);

    props.onMouseDown = props.onTouchStart = this._onMouseDown;
    return props;
  };

  /**
   * Returns the properties for the canvas container
   * @return {Object}
   * @private
   */


  BrushCanvasControlsComponent.prototype._getInnerContainerProps = function _getInnerContainerProps() {
    var props = _SpritesCanvasControl.prototype._getInnerContainerProps.call(this);

    // This disables the hit testing for this sub control
    delete props.onClick;

    props.onMouseEnter = this._onMouseEnter;
    props.onMouseLeave = this._onMouseLeave;
    props.onMouseMove = this._onMouseMoveOnCanvas;
    return props;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * This renders controls on top of the sprites
   * @return {ReactBEM.Element}
   * @private
   */


  BrushCanvasControlsComponent.prototype._renderOverlayControls = function _renderOverlayControls() {
    var cursorClass = this.state.cursorVisible ? 'is-visible' : null;
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:brushCanvasControls' },
      _globals.ReactBEM.createElement('div', { bem: 'e:cursor', className: cursorClass, style: this._getCursorStyle() })
    );
  };

  return BrushCanvasControlsComponent;
}(_spritesCanvasControlsComponent2.default);

exports.default = BrushCanvasControlsComponent;


BrushCanvasControlsComponent.contextTypes = _spritesCanvasControlsComponent2.default.contextTypes;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _sliderComponent = __webpack_require__(41);

var _sliderComponent2 = _interopRequireDefault(_sliderComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _colorPickerComponent = __webpack_require__(67);

var _colorPickerComponent2 = _interopRequireDefault(_colorPickerComponent);

var _presetPreviewItemComponent = __webpack_require__(189);

var _presetPreviewItemComponent2 = _interopRequireDefault(_presetPreviewItemComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BrushControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(BrushControlsComponent, _ControlsComponent);

  function BrushControlsComponent() {
    var _this$_events;

    (0, _classCallCheck3.default)(this, BrushControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasDoneButton = false;
    _this._brushOptions = {
      thickness: _this.getSharedState('thickness'),
      color: _this.getSharedState('color').clone()
    };

    _this._hasPresets = _this.props.options.thicknessPresets && _this.props.options.thicknessPresets.length > 0;
    _this._hasSlider = !_this._hasPresets;

    _this._bindAll('_onThicknessUpdated', '_onColorUpdated', '_onOperationUpdated', '_onOperationRemoved');

    _this.state = {
      thicknessControlsEnabled: false
    };

    _this._events = (_this$_events = {}, (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.OPERATION_UPDATED, _this._onOperationUpdated), (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.OPERATION_REMOVED, _this._onOperationRemoved), _this$_events);
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  BrushControlsComponent.prototype.componentDidMount = function componentDidMount() {
    _ControlsComponent.prototype.componentDidMount.call(this);

    var editor = this.context.editor;

    editor.zoom.set('auto');
    editor.features.disable('zoom', 'drag');
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks a thickness preset
   * @param  {Number} thickness
   * @private
   */


  BrushControlsComponent.prototype._onThicknessClick = function _onThicknessClick(thickness) {
    this._onThicknessUpdated(thickness);
    this.forceUpdate();
  };

  /**
   * Gets called when an operation has been removed
   * @param  {Operation} operation
   * @private
   */


  BrushControlsComponent.prototype._onOperationRemoved = function _onOperationRemoved(operation) {
    if (operation !== this.getSharedState('operation')) return;
    if (this._backButtonClicked) return;

    // Operation can be removed by the undo button. We need
    // to make sure we re-create the operation for the lifetime
    // of this control
    var editor = this.context.editor;

    var newOperation = editor.operations.getOrCreate('sprite');

    var brush = newOperation.createBrush();
    newOperation.addSprite(brush);

    this.setSharedState({
      operation: newOperation,
      brush: brush,
      operationExistedBefore: false,
      initialOptions: {}
    });

    editor.render();
  };

  /**
   * Gets called when an operation has been updated
   * @param  {Operation} operation
   * @private
   */


  BrushControlsComponent.prototype._onOperationUpdated = function _onOperationUpdated(operation) {
    var _this2 = this;

    if (operation === this.getSharedState('operation')) {
      (function () {
        // SpriteOperation re-creates all sprites when they're mass-assigned,
        // so we need to find the new instance by matching against the previous ID
        var previousBrush = _this2.getSharedState('brush');
        if (previousBrush) {
          var brush = operation.getSprites().filter(function (s) {
            return s.getId() === previousBrush.getId();
          })[0];
          _this2.setSharedState({ brush: brush });
        }

        // Trigger brush canvas rendering
        operation.setEnabled(true);
        _this2.context.editor.render(function () {
          operation.setEnabled(false);
          _this2.context.editor.render();
        });
      })();
    }
  };

  /**
   * Gets called when the thickness has been updated
   * @param {Number} thickness
   * @private
   */


  BrushControlsComponent.prototype._onThicknessUpdated = function _onThicknessUpdated(thickness) {
    this.setSharedState({ thickness: thickness });
    this._brushOptions.thickness = thickness;
  };

  /**
   * Gets called when the color has been updated
   * @param  {Color} color
   * @private
   */


  BrushControlsComponent.prototype._onColorUpdated = function _onColorUpdated(color) {
    this.setSharedState({ color: color });
    this._brushOptions.color = color.clone();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the thickness list items
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  BrushControlsComponent.prototype._renderThicknessItems = function _renderThicknessItems() {
    var _this3 = this;

    var thicknessPresets = this.props.options.thicknessPresets;

    var maxThickness = Math.max.apply(null, thicknessPresets);
    return thicknessPresets.map(function (thickness) {
      var isActive = _this3.getSharedState('thickness') === thickness;
      return _globals.ReactBEM.createElement(_presetPreviewItemComponent2.default, {
        thickness: thickness,
        maxThickness: maxThickness,
        active: isActive,
        key: thickness,
        onClick: _this3._onThicknessClick.bind(_this3, thickness) });
    });
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  BrushControlsComponent.prototype.renderControls = function renderControls() {
    var editor = this.context.editor;

    var zoom = editor.zoom.get();
    var items = [];

    if (this._hasSlider) {
      var finalDimensions = editor.getFinalDimensions();
      var minThickness = 1;
      var maxThickness = Math.round(finalDimensions.clone().multiply(zoom).min() / 2);
      var currentWidth = this._brushOptions.thickness;

      items.push(_globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell m:slider' },
        _globals.ReactBEM.createElement(_sliderComponent2.default, {
          style: 'large',
          minValue: minThickness,
          maxValue: maxThickness,
          valueUnit: 'px',
          middleDot: false,
          label: this._t('controls.brush.thickness'),
          onChange: this._onThicknessUpdated,
          value: currentWidth })
      ));
    } else if (this._hasPresets) {
      items.push(_globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell m:list' },
        _globals.ReactBEM.createElement(
          _scrollbarComponent2.default,
          null,
          _globals.ReactBEM.createElement(
            'ul',
            { bem: '$e:list' },
            this._renderThicknessItems()
          )
        )
      ));
    }

    items.push(_globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:colorPicker' },
      _globals.ReactBEM.createElement(_colorPickerComponent2.default, {
        initialValue: this._brushOptions.color.clone(),
        onChange: this._onColorUpdated })
    ));

    return items;
  };

  return BrushControlsComponent;
}(_controlsComponent2.default);

exports.default = BrushControlsComponent;


BrushControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _brushControlsComponent = __webpack_require__(187);

var _brushControlsComponent2 = _interopRequireDefault(_brushControlsComponent);

var _brushCanvasControlsComponent = __webpack_require__(186);

var _brushCanvasControlsComponent2 = _interopRequireDefault(_brushCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The brush controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BrushControls = function (_Controls) {
  (0, _inherits3.default)(BrushControls, _Controls);

  function BrushControls() {
    (0, _classCallCheck3.default)(this, BrushControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user leaves these controls
   * @this {StickersControlsComponent}
   * @override
   * @ignore
   */
  BrushControls.onExit = function onExit() {
    var editor = this.context.editor;

    var operation = this.getSharedState('operation');

    operation.setEnabled(true);

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');
    editor.render();
  };

  /**
   * Gets called when the user enters these controls
   * @this {BrushControlsComponent}
   * @param {SharedState} sharedState
   * @param {Object} options
   * @override
   * @ignore
   */


  BrushControls.onEnter = function onEnter(sharedState, options) {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();
    var operationExistedBefore = editor.operations.exists('sprite');
    var operation = editor.operations.getOrCreate('sprite');
    var brush = operation.createBrush();
    var initialOptions = operation.serializeOptions();
    operation.addSprite(brush);

    editor.zoom.set('auto', function () {
      operation.setEnabled(false);
      editor.render();
    });

    var thickness = outputDimensions.min() * 0.05;
    if (options.thicknessPresets && options.thicknessPresets.length > 0) {
      thickness = options.thicknessPresets[0];
    }

    var color = new _globals.Color(1, 0, 0, 1);
    var hardness = 1;

    this.setSharedState({
      operationExistedBefore: operationExistedBefore, operation: operation, brush: brush, initialOptions: initialOptions,
      thickness: thickness, color: color, hardness: hardness
    });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @override
   * @ignore
   */


  BrushControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('brush');
  };

  return BrushControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


BrushControls.controlsComponent = _brushControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
BrushControls.canvasControlsComponent = _brushCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
BrushControls.identifier = 'brush';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
BrushControls.iconPath = 'controls/overview/brush.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
BrushControls.languageKey = 'controls.overview.brush';

/**
 * The default options for this control
 * @type {Object}
 */
BrushControls.defaultOptions = {
  thicknessPresets: []
};

exports.default = BrushControls;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PresetPreviewItemComponent = function (_BaseComponent) {
  (0, _inherits3.default)(PresetPreviewItemComponent, _BaseComponent);

  function PresetPreviewItemComponent() {
    (0, _classCallCheck3.default)(this, PresetPreviewItemComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after the component has been mounted
   */
  PresetPreviewItemComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);
    this._renderCanvas();
  };

  /**
   * Gets called after this component has been updated
   */


  PresetPreviewItemComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    this._renderCanvas();
  };

  // -------------------------------------------------------------------------- CANVAS RENDERING

  /**
   * Renders the current font family onto the canvas
   * @private
   */


  PresetPreviewItemComponent.prototype._renderCanvas = function _renderCanvas() {
    var canvas = this.refs.canvas;

    var context = canvas.getContext('2d');

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    var _props = this.props;
    var maxThickness = _props.maxThickness;
    var thickness = _props.thickness;

    var diameter = canvas.width * (thickness / maxThickness);
    var radius = diameter / 2;

    context.fillStyle = 'white';
    context.beginPath();
    context.arc(canvas.width / 2, canvas.height / 2, radius, 0, 2 * Math.PI);
    context.fill();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  PresetPreviewItemComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:controls $e:list' },
      _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          onClick: this.props.onClick },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:button m:withLabel', className: this.props.active ? 'is-active' : null },
            _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'canvas' }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:label' },
              this.props.thickness
            )
          )
        )
      )
    );
  };

  return PresetPreviewItemComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = PresetPreviewItemComponent;


PresetPreviewItemComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

var _canvasControlsComponent = __webpack_require__(39);

var _canvasControlsComponent2 = _interopRequireDefault(_canvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MIN_DIMENSIONS = new _globals.Vector2(50, 50); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var StraightenCanvasControlsComponent = function (_CanvasControlsCompon) {
  (0, _inherits3.default)(StraightenCanvasControlsComponent, _CanvasControlsCompon);

  function StraightenCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, StraightenCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _CanvasControlsCompon.call.apply(_CanvasControlsCompon, [this].concat(args)));

    _this._needsStyleFixes = true;
    _this._bindAll('_onCenterDragStart', '_onCenterDrag');
    return _this;
  }

  /**
   * Fixes styles in IE
   */


  StraightenCanvasControlsComponent.prototype.fixStyles = function fixStyles() {
    if (_globals.Utils.Browser.isIElte(11)) {
      var editor = this.context.editor;
      var container = this.refs.container;


      var canvasDimensions = editor.getCanvasDimensions(false);
      var cellHeight = canvasDimensions.y;
      container.style.height = cellHeight + 'px';
    }
  };

  // -------------------------------------------------------------------------- CENTER DRAGGING

  /**
   * Gets called when the user stars dragging the center
   * @private
   */


  StraightenCanvasControlsComponent.prototype._onCenterDragStart = function _onCenterDragStart() {
    var start = this.getSharedState('start');
    var end = this.getSharedState('end');

    this._initialValues = {
      start: start.clone(),
      end: end.clone(),
      size: end.clone().subtract(start)
    };
  };

  /**
   * Gets called while the user drags the center
   * @param {Vector2} offset
   * @private
   */


  StraightenCanvasControlsComponent.prototype._onCenterDrag = function _onCenterDrag(offset) {
    var editor = this.context.editor;
    var _initialValues = this._initialValues;
    var start = _initialValues.start;
    var size = _initialValues.size;

    var outputDimensions = editor.getOutputDimensions();
    var cropDifference = offset.clone().divide(outputDimensions);

    var minStart = new _globals.Vector2(0, 0);
    var maxStart = new _globals.Vector2(1, 1).subtract(size);

    var newStart = start.clone().add(cropDifference).clamp(minStart, maxStart);
    var newEnd = newStart.clone().add(size);

    this.setSharedState({ start: newStart, end: newEnd });
  };

  // -------------------------------------------------------------------------- KNOB DRAGGING

  /**
   * Gets called when the user starts dragging a knob
   * @param {String} optionName
   * @private
   */


  StraightenCanvasControlsComponent.prototype._onKnobDragStart = function _onKnobDragStart(optionName) {
    this._currentDragOption = optionName;

    this._initialValues = {
      start: this.getSharedState('start').clone(),
      end: this.getSharedState('end').clone()
    };
  };

  /**
   * Gets called while the user drags a knob
   * @param {String} optionName
   * @param {Vector2} offset
   * @private
   */


  StraightenCanvasControlsComponent.prototype._onKnobDrag = function _onKnobDrag(optionName, offset) {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var _ref = this.getSharedState('ratio') || { ratio: '*' };

    var ratio = _ref.ratio;


    var newSize = this._initialValues.end.clone().subtract(this._initialValues.start).multiply(outputDimensions);

    // Calculate max size and new size
    var maxSize = void 0;
    if (optionName === 'start') {
      newSize.subtract(offset);
      maxSize = this._initialValues.end.clone().multiply(outputDimensions);
    } else if (optionName === 'end') {
      newSize.add(offset);
      maxSize = new _globals.Vector2(1, 1).subtract(this._initialValues.start).multiply(outputDimensions);
    }

    newSize.x = Math.min(Math.max(MIN_DIMENSIONS.x, newSize.x), maxSize.x);
    if (ratio !== '*') {
      newSize.y = newSize.x / ratio;
    }
    newSize.y = Math.min(Math.max(MIN_DIMENSIONS.y, newSize.y), maxSize.y);
    if (ratio !== '*') {
      newSize.x = newSize.y * ratio;
    }

    if (optionName === 'start') {
      var newStart = this._initialValues.end.clone().subtract(newSize.clone().divide(outputDimensions));
      this.setSharedState({ start: newStart });
    } else if (optionName === 'end') {
      var newEnd = this._initialValues.start.clone().add(newSize.clone().divide(outputDimensions));
      this.setSharedState({ end: newEnd });
    }
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns the dimensions according to the current crop dimensions
   * @private
   */


  StraightenCanvasControlsComponent.prototype._calculateDimensions = function _calculateDimensions() {
    var editor = this.context.editor;

    var start = this.getSharedState('start');
    var end = this.getSharedState('end');

    return end.clone().subtract(start).multiply(editor.getInputDimensions()).round();
  };

  // -------------------------------------------------------------------------- RESIZING / STYLING

  /**
   * Returns the styles (width / height) for the crop areas that define the
   * crop size
   * @return {Object}
   * @private
   */


  StraightenCanvasControlsComponent.prototype._getAreaStyles = function _getAreaStyles() {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();
    var canvasDimensions = editor.getCanvasDimensions();

    var start = this.getSharedState('start').clone().multiply(outputDimensions).floor();
    var end = this.getSharedState('end').clone().multiply(outputDimensions).ceil();
    var size = end.clone().subtract(start);

    var offset = canvasDimensions.clone().subtract(outputDimensions).divide(2).floor();

    var padding = editor.getPadding();
    start.add(offset).add(0, padding[0]);

    return {
      topLeft: this._getDimensionsStyles(start.x, start.y),
      topCenter: this._getDimensionsStyles(size.x, start.y),
      centerLeft: this._getDimensionsStyles(start.x, size.y),
      center: this._getDimensionsStyles(size.x, size.y)
    };
  };

  /**
   * Returns the dimensions style (width / height) for the given dimensions
   * @param {Number} x
   * @param {Number} y
   * @return {Object}
   * @private
   */


  StraightenCanvasControlsComponent.prototype._getDimensionsStyles = function _getDimensionsStyles(x, y) {
    // Table cells and rows can't have a width / height of 0
    return {
      width: Math.max(1, x),
      height: Math.max(1, y)
    };
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  StraightenCanvasControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    var areaStyles = this._getAreaStyles();
    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'b:canvasControls e:container m:full', ref: 'container' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:cropCanvasControls' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:row' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark', style: areaStyles.topLeft },
            ' '
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark', style: areaStyles.topCenter },
            ' '
          ),
          _globals.ReactBEM.createElement('div', { bem: 'e:cell m:dark' })
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:row' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark', style: areaStyles.centerLeft },
            ' '
          ),
          _globals.ReactBEM.createElement(
            _draggableComponent2.default,
            {
              onStart: this._onCenterDragStart,
              onDrag: this._onCenterDrag },
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:cell m:bordered', style: areaStyles.center },
              _globals.ReactBEM.createElement(
                _draggableComponent2.default,
                {
                  onStart: this._onKnobDragStart.bind(this, 'start'),
                  onDrag: this._onKnobDrag.bind(this, 'start') },
                _globals.ReactBEM.createElement(
                  'div',
                  { bem: 'e:knob m:topLeft $b:knob' },
                  _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/resize-diagonal-down.png', true) })
                )
              ),
              _globals.ReactBEM.createElement(
                _draggableComponent2.default,
                {
                  onStart: this._onKnobDragStart.bind(this, 'end'),
                  onDrag: this._onKnobDrag.bind(this, 'end') },
                _globals.ReactBEM.createElement(
                  'div',
                  { bem: 'e:knob m:bottomRight $b:knob' },
                  _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/resize-diagonal-down.png', true) })
                )
              )
            )
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark' },
            ' '
          )
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:row' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark' },
            ' '
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark' },
            ' '
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:dark' },
            ' '
          )
        )
      )
    );
  };

  return StraightenCanvasControlsComponent;
}(_canvasControlsComponent2.default);

exports.default = StraightenCanvasControlsComponent;


StraightenCanvasControlsComponent.contextTypes = _canvasControlsComponent2.default.contextTypes;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _sliderOverlayComponent = __webpack_require__(54);

var _sliderOverlayComponent2 = _interopRequireDefault(_sliderOverlayComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var StraightenControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(StraightenControlsComponent, _ControlsComponent);

  function StraightenControlsComponent() {
    (0, _classCallCheck3.default)(this, StraightenControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasDoneButton = true;
    _this._bindAll('_selectRatio', '_onRotationChange');

    _this.state = { ratio: null };
    _this._initRatios();

    if (!_this.getSharedState('operationExistedBefore')) {
      _this._selectInitialRatio(true);
    }
    return _this;
  }

  // -------------------------------------------------------------------------- INITIALIZATION

  /**
   * Initializes the available ratios
   * @private
   */


  StraightenControlsComponent.prototype._initRatios = function _initRatios() {
    var _props$options = this.props.options;
    var ratios = _props$options.ratios;
    var replaceRatios = _props$options.replaceRatios;
    var selectableRatios = _props$options.selectableRatios;

    ratios = ratios || [];

    this._ratios = _globals.Constants.DEFAULTS.CROP_RATIOS;
    if (replaceRatios) {
      this._ratios = ratios;
    } else {
      this._ratios = this._ratios.concat(ratios);
    }

    if (selectableRatios && selectableRatios.length) {
      this._ratios = _globals.Utils.select(this._ratios, selectableRatios, function (r) {
        return r.name;
      });
    }
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Checks if the component should change from the given state
   * @param  {Object} oldState
   * @param  {Object} newState
   * @return {Boolean}
   */


  StraightenControlsComponent.prototype.shouldSharedComponentUpdate = function shouldSharedComponentUpdate(oldState, newState) {
    return oldState.ratio !== newState.ratio;
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the rotation has been chagned (by using the slider)
   * @param  {Number} rotation
   * @private
   */


  StraightenControlsComponent.prototype._onRotationChange = function _onRotationChange(rotation) {
    var editor = this.context.editor;

    rotation = rotation * Math.PI / 180;
    editor.setRotation(rotation);

    // Update sprite scale
    this._updateSpriteScale();

    editor.render();
    this.setSharedState({ rotation: rotation });
  };

  /**
   * Updates the sprite scale so that the cropped area fits
   * inside the sprite
   * @private
   */


  StraightenControlsComponent.prototype._updateSpriteScale = function _updateSpriteScale() {
    var editor = this.context.editor;

    var rotatedSpriteDimensions = this._getRotatedSpriteDimensions();
    var dimensions = editor.getOutputDimensions(false);

    var distanceToCorner = dimensions.clone().multiply(0.5);
    distanceToCorner.subtract(rotatedSpriteDimensions.clone().divide(2));
    distanceToCorner.abs();

    var scale = 1;
    if (distanceToCorner.y > distanceToCorner.x) {
      scale = distanceToCorner.y * 2 / dimensions.y + 1;
    } else {
      scale = distanceToCorner.x * 2 / dimensions.x + 1;
    }
    editor.setSpriteScale(scale);
  };

  /**
   * Gets the outer bounding dimensions of the rotated sprite
   * @return {PhotoEditorSDK.Math.Vector2}
   * @private
   */


  StraightenControlsComponent.prototype._getRotatedSpriteDimensions = function _getRotatedSpriteDimensions() {
    var editor = this.context.editor;

    var rotation = editor.getRotation();

    var outputDimensions = editor.getOutputDimensions(false);

    return new _globals.Vector2(Math.abs(outputDimensions.x * Math.cos(rotation)) + Math.abs(outputDimensions.y * Math.sin(rotation)), Math.abs(outputDimensions.x * Math.sin(rotation)) + Math.abs(outputDimensions.y * Math.cos(rotation)));
  };

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  StraightenControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    var editor = this.context.editor;


    var operation = this.getSharedState('operation');
    if (this.getSharedState('cropOperationExistedBefore')) {
      operation.set(this.getSharedState('initialCropOptions'));
      operation.setEnabled(true, false);
    } else {
      editor.operations.remove(operation);
    }

    editor.setPadding(false);
    editor.setRotation(0);
    editor.setSpriteScale(1);

    // Enable zoom and drag again
    editor.features.enable('zoom', 'drag');

    editor.zoom.undo();

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  /**
   * Gets called when the user clicks the done button
   * @param {Event} e
   * @private
   */


  StraightenControlsComponent.prototype._onDoneClick = function _onDoneClick(e) {
    var editor = this.context.editor;


    var options = {
      rotation: editor.getRotation(),
      scale: editor.getSpriteScale(),
      start: this.getSharedState('start').clone(),
      end: this.getSharedState('end').clone(),
      enabled: true
    };

    var cropOperation = editor.operations.get('crop');
    var spriteOperation = editor.operations.get('sprite');
    var orientationOperation = editor.operations.get('orientation');

    if (spriteOperation) {
      spriteOperation.crop(cropOperation, options);
    }

    cropOperation.set(options);

    editor.setPadding(false);
    editor.setRotation(0);
    editor.setSpriteScale(1);

    var historyItems = [];

    var initialCropOptions = this.getSharedState('initialCropOptions');
    var cropOperationExistedBefore = this.getSharedState('cropOperationExistedBefore');
    if (!cropOperation.optionsEqual(initialCropOptions)) {
      historyItems.push({
        operation: cropOperation,
        options: initialCropOptions,
        existent: cropOperationExistedBefore,
        undo: function undo(operation, newOptions) {
          editor.broadcastCrop(operation, newOptions);
        }
      });
    } else if (!cropOperationExistedBefore) {
      editor.operations.remove(cropOperation);
    }

    var initialOrientationOptions = this.getSharedState('initialOrientationOptions');
    var orientationOperationExistedBefore = this.getSharedState('orientationOperationExistedBefore');
    if (!orientationOperation.optionsEqual(initialOrientationOptions)) {
      historyItems.push({
        operation: orientationOperation,
        options: initialOrientationOptions,
        existent: orientationOperationExistedBefore,
        undo: function undo(operation, newOptions) {
          if (operation.getRotation() !== newOptions.rotation) {
            editor.broadcastRotate(newOptions.rotation - operation.getRotation());
          }

          var rotation = newOptions.rotation;
          var inverseFlip = rotation === 90 || rotation === 270;
          if (operation.getFlipVertically() !== newOptions.flipVertically) {
            editor.broadcastFlip(inverseFlip ? 'horizontal' : 'vertical');
          } else if (operation.getFlipHorizontally() !== newOptions.flipHorizontally) {
            editor.broadcastFlip(inverseFlip ? 'vertical' : 'horizontal');
          }
        }
      });
    } else if (!orientationOperationExistedBefore) {
      editor.operations.remove(orientationOperation);
    }

    if (historyItems.length) {
      editor.history.add(historyItems);
    }

    // Enable zoom and drag again
    editor.features.enable('zoom', 'drag');

    // Zoom to auto again
    editor.zoom.set('auto');

    _ControlsComponent.prototype._onDoneClick.call(this, e);
  };

  // -------------------------------------------------------------------------- RATIO HANDLING

  /**
   * Selects the initial ratio
   * @param {Boolean} setDefaultOptions = true
   * @private
   */


  StraightenControlsComponent.prototype._selectInitialRatio = function _selectInitialRatio() {
    var setDefaultOptions = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

    var operation = this.getSharedState('operation');
    var selectedRatio = null;

    // 1. Selected ratio stored in operation
    var operationRatio = operation._ratio;
    if (operationRatio) {
      var matchingRatios = this._ratios.filter(function (ratio) {
        return ratio === operationRatio;
      });
      selectedRatio = matchingRatios[0];
    }

    // 2. First ratio with `selected` flag
    if (!selectedRatio) {
      var selectedRatios = this._ratios.filter(function (ratio) {
        return ratio.selected;
      });
      selectedRatio = selectedRatios.pop();
    }

    // 3. First ratio
    if (!selectedRatio) {
      selectedRatio = this._ratios[0];
    }

    return this._selectRatio(selectedRatio, setDefaultOptions);
  };

  /**
   * Selects the given ratio
   * @param {String} ratio
   * @param {Boolean} setDefaultOptions = true
   * @private
   */


  StraightenControlsComponent.prototype._selectRatio = function _selectRatio(ratio) {
    var setDefaultOptions = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    var operation = this.getSharedState('operation');
    if (setDefaultOptions) {
      this._setDefaultOptionsForRatio(ratio);
    }
    operation._ratio = ratio;
    this.setSharedState({ ratio: ratio });
  };

  /**
   * Sets the default options (start / end) for the given ratio
   * @param {Object} ratio
   * @private
   */


  StraightenControlsComponent.prototype._setDefaultOptionsForRatio = function _setDefaultOptionsForRatio(_ref) {
    var ratio = _ref.ratio;
    var name = _ref.name;
    var editor = this.context.editor;

    var start = new _globals.Vector2();
    var end = new _globals.Vector2();

    if (ratio === '*') {
      start = new _globals.Vector2(0, 0);
      end = new _globals.Vector2(1, 1);
    } else {
      var outputDimensions = editor.getOutputDimensions();
      var canvasRatio = outputDimensions.x / outputDimensions.y;
      if (canvasRatio <= ratio) {
        var height = 1 / outputDimensions.y * (outputDimensions.x / ratio);
        start.set(0, (1.0 - height) / 2);
        end.set(1.0, 1 - start.y);
      } else {
        var width = 1 / outputDimensions.x * (ratio * outputDimensions.y);
        start.set((1 - width) / 2, 0);
        end.set(1 - start.x, 1.0);
      }
    }

    this.setSharedState({ start: start, end: end });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the overlay controls of this component
   * @return {ReactBEM.Element}
   */


  StraightenControlsComponent.prototype.renderOverlayControls = function renderOverlayControls() {
    var rotation = this.getSharedState('rotation') * 180 / Math.PI;
    return _globals.ReactBEM.createElement(_sliderOverlayComponent2.default, {
      value: rotation,
      minValue: -45,
      middleDot: true,
      maxValue: 45,
      valueUnit: '°',
      label: this._t('controls.crop.rotation'),
      onChange: this._onRotationChange });
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  StraightenControlsComponent.prototype.renderControls = function renderControls() {
    var _this2 = this;

    var listItems = this._ratios.map(function (ratio) {
      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: ratio.name },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:button m:withLabel',
              className: _this2.getSharedState('ratio') === ratio ? 'is-active' : null,
              onClick: _this2._selectRatio.bind(_this2, ratio) },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: _this2._getAssetPath('controls/crop/' + ratio.name + '.png', true) }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:label' },
              _this2._t('controls.crop.' + ratio.name)
            )
          )
        )
      );
    });

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        null,
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    );
  };

  return StraightenControlsComponent;
}(_controlsComponent2.default);

exports.default = StraightenControlsComponent;


StraightenControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _topBarComponent = __webpack_require__(55);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var CropTopBarComponent = function (_TopBarComponent) {
  (0, _inherits3.default)(CropTopBarComponent, _TopBarComponent);

  function CropTopBarComponent() {
    (0, _classCallCheck3.default)(this, CropTopBarComponent);
    return (0, _possibleConstructorReturn3.default)(this, _TopBarComponent.apply(this, arguments));
  }

  /**
   * Gets called when the user clicks one of the rotate buttons
   * @param  {String} direction
   * @private
   */
  CropTopBarComponent.prototype._onRotateClick = function _onRotateClick(direction) {
    var degrees = void 0;
    if (direction === 'cw') {
      degrees = 90;
    } else if (direction === 'ccw') {
      degrees = -90;
    }

    var editor = this.context.editor;

    var operation = this.getSharedState('orientationOperation');
    var newRotation = (operation.getRotation() + degrees) % 360;

    var start = this.getSharedState('start');
    var end = this.getSharedState('end');
    var tempStart = start.clone();
    if (direction === 'cw') {
      start.set(1.0 - end.y, tempStart.x);
      end.set(1.0 - tempStart.y, end.x);
    } else if (direction === 'ccw') {
      start.set(tempStart.y, 1.0 - end.x);
      end.set(end.y, 1.0 - tempStart.x);
    }
    operation.set({ rotation: newRotation });

    this.setSharedState({
      orientationRotation: newRotation,
      start: start, end: end
    });

    editor.broadcastRotate(degrees);
    editor.zoom.set('auto');
  };

  /**
   * Gets called when the user clicks one of the flip buttons
   * @private
   */


  CropTopBarComponent.prototype._onFlipClick = function _onFlipClick(direction) {
    var _setSharedState;

    var editor = this.context.editor;

    var operation = this.getSharedState('orientationOperation');

    var newFlip = !this.getSharedState('flip' + direction);
    var newRotation = this.getSharedState('rotation') * -1;
    this.setSharedState((_setSharedState = {}, (0, _defineProperty3.default)(_setSharedState, 'flip' + direction, newFlip), (0, _defineProperty3.default)(_setSharedState, 'rotation', newRotation), _setSharedState));
    editor.setRotation(newRotation);
    operation.flip(direction);

    var start = this.getSharedState('start');
    var end = this.getSharedState('end');
    var tmpStart = start.clone();
    if (direction === 'horizontal') {
      start.set(1.0 - end.x, start.y);
      end.set(1.0 - tmpStart.x, end.y);
    } else if (direction === 'vertical') {
      start.set(start.x, 1.0 - end.y);
      end.set(end.x, 1.0 - tmpStart.y);
    }

    this.setSharedState({ start: start, end: end });

    editor.broadcastFlip(direction);
    editor.render();
  };

  /**
   * Checks if the component should change from the given state
   * @param  {Object} oldState
   * @param  {Object} newState
   * @return {Boolean}
   */


  CropTopBarComponent.prototype.shouldSharedComponentUpdate = function shouldSharedComponentUpdate(oldState, newState) {
    return false;
  };

  /**
   * Renders the content of this OverviewTopBarComponent
   * @return {ReactBEM.Element}
   */


  CropTopBarComponent.prototype.renderContent = function renderContent() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:topBar' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:iconButton', onClick: this._onFlipClick.bind(this, 'vertical') },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/crop/flip-v.png', true) })
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:iconButton', onClick: this._onFlipClick.bind(this, 'horizontal') },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/crop/flip-h.png', true) })
      ),
      _globals.ReactBEM.createElement('div', { bem: 'e:space' }),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:iconButton', onClick: this._onRotateClick.bind(this, 'ccw') },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/crop/rotate-ccw.png', true) })
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:iconButton', onClick: this._onRotateClick.bind(this, 'cw') },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/crop/rotate-cw.png', true) })
      )
    );
  };

  return CropTopBarComponent;
}(_topBarComponent2.default);

exports.default = CropTopBarComponent;


CropTopBarComponent.contextTypes = _topBarComponent2.default.contextTypes;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _cropControlsComponent = __webpack_require__(191);

var _cropControlsComponent2 = _interopRequireDefault(_cropControlsComponent);

var _cropCanvasControlsComponent = __webpack_require__(190);

var _cropCanvasControlsComponent2 = _interopRequireDefault(_cropCanvasControlsComponent);

var _cropTopBarComponent = __webpack_require__(192);

var _cropTopBarComponent2 = _interopRequireDefault(_cropTopBarComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The crop controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
var CropControls = function (_Controls) {
  (0, _inherits3.default)(CropControls, _Controls);

  function CropControls() {
    (0, _classCallCheck3.default)(this, CropControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {CropControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  CropControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;


    var cropOperationExistedBefore = editor.operations.exists('crop');
    var cropOperation = editor.operations.getOrCreate('crop');
    cropOperation.setEnabled(false, false);

    var orientationOperationExistedBefore = editor.operations.exists('orientation');
    var orientationOperation = editor.operations.getOrCreate('orientation');

    var defaultOptions = {
      end: new _globals.Vector2(1, 1),
      rotation: 0,
      start: new _globals.Vector2(0, 0),
      scale: 1
    };

    var initialCropOptions = defaultOptions;
    if (cropOperationExistedBefore) {
      initialCropOptions = cropOperation.serializeOptions();
      delete initialCropOptions.enabled;
    }

    editor.broadcastCrop(cropOperation, defaultOptions);

    // Reset start and end so that SpriteOperation gets an update and repositions
    // the stickers
    cropOperation.set(defaultOptions, cropOperationExistedBefore);

    var initialOrientationOptions = orientationOperation.serializeOptions();
    delete initialOrientationOptions.enabled;

    editor.setSpriteScale(initialCropOptions.scale);
    editor.setRotation(initialCropOptions.rotation);
    editor.setPadding([10, 0, 58 + 10, 0]);
    editor.zoom.set('auto', function () {
      // Disable zoom and drag while we're cropping
      editor.features.disable('zoom', 'drag');
    }, false);

    this.setSharedState({
      initialCropOptions: initialCropOptions,
      initialOrientationOptions: initialOrientationOptions,
      operation: cropOperation,
      orientationOperation: orientationOperation,
      orientationOperationExistedBefore: orientationOperationExistedBefore,
      cropOperationExistedBefore: cropOperationExistedBefore,
      start: _globals.Vector2.fromObject(initialCropOptions.start),
      end: _globals.Vector2.fromObject(initialCropOptions.end),
      rotation: initialCropOptions.rotation,
      orientationRotation: orientationOperation.getRotation(),
      flipVertically: orientationOperation.getFlipVertically(),
      flipHorizontally: orientationOperation.getFlipHorizontally()
    });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @ignore
   */


  CropControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('crop');
  };

  return CropControls;
}(_controls2.default);

/**
 * This control's top bar component. Used for the upper part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.TopBarControlsComponent}
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

CropControls.topBarControlsComponent = _cropTopBarComponent2.default;

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
CropControls.controlsComponent = _cropControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
CropControls.canvasControlsComponent = _cropCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
CropControls.identifier = 'crop';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
CropControls.iconPath = 'controls/overview/crop.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
CropControls.languageKey = 'controls.overview.crop';

/**
 * The default options for this control
 * @type {Object}
 * @property {Object[]} [ratios = []]
 * @property {Boolean} [replaceRatios = false]
 * @property {String[]} [availableRatios = null]
 */
CropControls.defaultOptions = {};

exports.default = CropControls;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _categoryDropdownComponent = __webpack_require__(115);

var _categoryDropdownComponent2 = _interopRequireDefault(_categoryDropdownComponent);

var _sliderOverlayComponent = __webpack_require__(54);

var _sliderOverlayComponent2 = _interopRequireDefault(_sliderOverlayComponent);

var _filterManager = __webpack_require__(121);

var _filterManager2 = _interopRequireDefault(_filterManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var FilterControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(FilterControlsComponent, _ControlsComponent);

  function FilterControlsComponent() {
    (0, _classCallCheck3.default)(this, FilterControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._bindAll('_onItemClick', '_onOperationUpdated', '_onSliderValueChange', '_onCategoryChange');
    _this._operation = _this.getSharedState('operation');

    _this._events = (0, _defineProperty3.default)({}, _globals.Constants.EVENTS.OPERATION_UPDATED, _this._onOperationUpdated);

    _this._initFilterManager();

    _this.state = {
      category: 'all'
    };
    return _this;
  }

  // -------------------------------------------------------------------------- INITIALIZATION

  /**
   * Initializes the filter manager
   * @private
   */


  FilterControlsComponent.prototype._initFilterManager = function _initFilterManager() {
    this._filterManager = new _filterManager2.default(this.props.options);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the slider value has been changed
   * @param {Number} value
   * @private
   */


  FilterControlsComponent.prototype._onSliderValueChange = function _onSliderValueChange(value) {
    this._operation.setIntensity(value / 100);

    var editor = this.context.editor;

    editor.render();
  };

  /**
   * Gets called when the user switches the category
   * @param  {Object} category
   * @private
   */


  FilterControlsComponent.prototype._onCategoryChange = function _onCategoryChange(category) {
    var _this2 = this;

    this.setState({ category: category.name }, function () {
      _this2.refs.scrollbar.update();
    });
  };

  /**
   * Gets called when an operation has been updated
   * @param  {Operation} operation
   * @private
   */


  FilterControlsComponent.prototype._onOperationUpdated = function _onOperationUpdated(operation) {
    // The undo button might change this operation's selected filter or intensity.
    // Update the component to reflect the change
    if (operation === this._operation) {
      this.forceUpdate();
    }
  };

  /**
   * Gets called when the user clicks an item
   * @param {Class} Filter
   * @param {Event} e
   * @private
   */


  FilterControlsComponent.prototype._onItemClick = function _onItemClick(Filter, e) {
    this._operation.set({
      filter: new Filter({ intensity: 1 }),
      intensity: 1
    });

    var editor = this.context.editor;

    editor.render();
    this.forceUpdate();
  };

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  FilterControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    var initialOptions = this.getSharedState('initialOptions');
    var filter = this._operation.getFilter();
    var intensity = this._operation.getIntensity();
    if (filter !== initialOptions.filter || intensity !== initialOptions.intensity) {
      var editor = this.context.editor;

      editor.history.add(this._operation, initialOptions, this.getSharedState('operationExistedBefore'));
    }

    if (filter.isIdentity) {
      var _editor = this.context.editor;

      _editor.operations.remove(this._operation);
    }

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the overlay controls of this component
   * @return {ReactBEM.Element}
   */


  FilterControlsComponent.prototype.renderOverlayControls = function renderOverlayControls() {
    var currentFilter = this._operation.getFilter();
    if (currentFilter.isIdentity) return null;

    var intensity = this._operation.getIntensity();
    return _globals.ReactBEM.createElement(_sliderOverlayComponent2.default, {
      minValue: 0,
      maxValue: 100,
      value: intensity * 100,
      valueUnit: '%',
      positiveValuePrefix: '+',
      label: this._t('controls.filters.intensity'),
      onChange: this._onSliderValueChange });
  };

  /**
   * Renders the list items for this control
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  FilterControlsComponent.prototype._renderListItems = function _renderListItems() {
    var _this3 = this;

    var currentFilter = this._operation.getFilter();

    var filters = this._filterManager.getFiltersForCategory(this.state.category);
    return [_globals.SDK.Filters.IdentityFilter].concat(filters).map(function (filter) {
      var identifier = filter.identifier;
      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: identifier,
          onClick: _this3._onItemClick.bind(_this3, filter) },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            {
              bem: '$e:button m:withInlineLabel' },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: _this3._getAssetPath('controls/filters/' + identifier + '.png', true) }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: '$e:inlineLabel', className: currentFilter instanceof filter ? 'is-active' : null },
              _globals.ReactBEM.createElement(
                'div',
                { bem: 'e:label' },
                filter.displayName
              )
            )
          )
        )
      );
    });
  };

  /**
   * Renders the category dropdown (if present)
   * @return {ReactBEM.Element}
   * @private
   */


  FilterControlsComponent.prototype._renderCategoryDropdown = function _renderCategoryDropdown() {
    var _this4 = this;

    var categories = this._filterManager.getCategories();
    var categoryDropdownVisible = !this.props.options.hideCategories && categories.length > 1;
    if (!categoryDropdownVisible) {
      return null;
    }

    var categoryItems = categories.map(function (c) {
      return {
        name: c.name,
        label: _this4._t('controls.filters.categories.' + c.name),
        icon: _this4._getAssetPath('controls/filters/categories/' + c.name + '.png', true)
      };
    });
    var selectedCategory = {
      name: this.state.category,
      label: this._t('controls.filters.categories.' + this.state.category),
      icon: this._getAssetPath('controls/filters/categories/' + this.state.category + '.png', true)
    };

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:categoryDropdown' },
      _globals.ReactBEM.createElement(_categoryDropdownComponent2.default, {
        items: categoryItems,
        selectedItem: selectedCategory,
        onChange: this._onCategoryChange })
    );
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  FilterControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = this._renderListItems();
    var categoryDropdown = this._renderCategoryDropdown();

    return [categoryDropdown, _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        { ref: 'scrollbar' },
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    )];
  };

  return FilterControlsComponent;
}(_controlsComponent2.default);

exports.default = FilterControlsComponent;


FilterControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _filterControlsComponent = __webpack_require__(194);

var _filterControlsComponent2 = _interopRequireDefault(_filterControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The filters controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var FiltersControls = function (_Controls) {
  (0, _inherits3.default)(FiltersControls, _Controls);

  function FiltersControls() {
    (0, _classCallCheck3.default)(this, FiltersControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {FiltersControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  FiltersControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;

    var operationExistedBefore = editor.operations.exists('filter');
    var operation = editor.operations.getOrCreate('filter');
    var initialOptions = {
      filter: operation.getFilter(),
      intensity: operation.getIntensity()
    };

    this.setSharedState({ operation: operation, operationExistedBefore: operationExistedBefore, initialOptions: initialOptions });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @override
   */


  FiltersControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled(this.identifier);
  };

  return FiltersControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


FiltersControls.controlsComponent = _filterControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
FiltersControls.identifier = 'filter';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
FiltersControls.iconPath = 'controls/overview/filters.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
FiltersControls.languageKey = 'controls.overview.filters';

/**
 * The default options for this control
 * @type {Object}
 * @property {PhotoEditorSDK.Filter[]} [categories = []]
 * @property {Boolean} [replaceCategories = false]
 * @property {String[]} [selectableFilters = null]
 */
FiltersControls.defaultOptions = {
  categories: [],
  replaceCategories: false,
  selectableFilters: null,
  hideCategories: false
};

exports.default = FiltersControls;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _radialFocus = __webpack_require__(201);

var _radialFocus2 = _interopRequireDefault(_radialFocus);

var _linearFocus = __webpack_require__(198);

var _linearFocus2 = _interopRequireDefault(_linearFocus);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ITEMS = [_radialFocus2.default, _linearFocus2.default]; /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var FocusControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(FocusControlsComponent, _ControlsComponent);

  function FocusControlsComponent() {
    (0, _classCallCheck3.default)(this, FocusControlsComponent);
    return (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks one of the three buttons
   * @param {Object} controlsItem
   * @param {Event} e
   * @private
   */
  FocusControlsComponent.prototype._onButtonClick = function _onButtonClick(controlsItem, e) {
    this.context.editorScreen.switchToControls(controlsItem);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the list items for this control
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  FocusControlsComponent.prototype._renderListItems = function _renderListItems() {
    var _this2 = this;

    return ITEMS.filter(function (item) {
      return item.isAvailable(_this2.context.editor);
    }).map(function (item) {
      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: item.identifier },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:controls' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:button m:withLabel', onClick: _this2._onButtonClick.bind(_this2, item) },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: _this2._getAssetPath(item.iconPath, true) }),
            _globals.ReactBEM.createElement(
              'div',
              { bem: 'e:label' },
              _this2._t(item.languageKey)
            )
          )
        )
      );
    });
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  FocusControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = this._renderListItems();

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        null,
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    );
  };

  return FocusControlsComponent;
}(_controlsComponent2.default);

exports.default = FocusControlsComponent;


FocusControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _focusControlsComponent = __webpack_require__(196);

var _focusControlsComponent2 = _interopRequireDefault(_focusControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The focus controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var FocusControls = function (_Controls) {
  (0, _inherits3.default)(FocusControls, _Controls);

  function FocusControls() {
    (0, _classCallCheck3.default)(this, FocusControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Checks if this control is available to the user
   * @param  {Editor} editor
   * @return {Boolean}
   * @ignore
   */
  FocusControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('radial-focus') || editor.isToolEnabled('linear-focus');
  };

  /**
   * Gets called when the user leaves these controls
   * @this {StickersControlsComponent}
   * @override
   * @ignore
   */


  FocusControls.onExit = function onExit() {
    var editor = this.context.editor;

    editor.features.enable('zoom', 'drag');
  };

  return FocusControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


FocusControls.controlsComponent = _focusControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
FocusControls.identifier = 'focus';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
FocusControls.iconPath = 'controls/overview/focus.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
FocusControls.languageKey = 'controls.overview.focus';

/**
 * The default options for this control
 * @type {Object}
 */
FocusControls.defaultOptions = {};

exports.default = FocusControls;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _linearFocusControlsComponent = __webpack_require__(200);

var _linearFocusControlsComponent2 = _interopRequireDefault(_linearFocusControlsComponent);

var _linearFocusCanvasControlsComponent = __webpack_require__(199);

var _linearFocusCanvasControlsComponent2 = _interopRequireDefault(_linearFocusCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The radial blur controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var LinearFocusControls = function (_Controls) {
  (0, _inherits3.default)(LinearFocusControls, _Controls);

  function LinearFocusControls() {
    (0, _classCallCheck3.default)(this, LinearFocusControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {BorderControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  LinearFocusControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;

    var operationExistedBefore = editor.operations.exists('linear-focus');

    var defaultStart = new _globals.Vector2(0.49, 0.5);
    var defaultEnd = new _globals.Vector2(0.51, 0.5);

    var operation = editor.operations.getOrCreate('linear-focus', {
      start: defaultStart,
      end: defaultEnd
    });

    var inputDimensions = operation.getInputDimensions();

    var start = operation.getStart().clone();
    var end = operation.getEnd().clone();

    var size = operation.getSize();
    var gradientSize = operation.getGradientSize();

    var initialOptions = {
      start: start, end: end, size: size, gradientSize: gradientSize,
      blurRadius: operation.getBlurRadius()
    };

    this.setSharedState({
      operation: operation,
      operationExistedBefore: operationExistedBefore,
      initialOptions: initialOptions,
      inputDimensions: inputDimensions
    });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @ignore
   */


  LinearFocusControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('linear-focus');
  };

  return LinearFocusControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


LinearFocusControls.controlsComponent = _linearFocusControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
LinearFocusControls.canvasControlsComponent = _linearFocusCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
LinearFocusControls.identifier = 'linear-focus';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
LinearFocusControls.iconPath = 'controls/focus/linear.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
LinearFocusControls.languageKey = 'controls.focus.linear';

/**
 * The default options for this control
 * @type {Object}
 */
LinearFocusControls.defaultOptions = {};

exports.default = LinearFocusControls;

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

var _canvasControlsComponent = __webpack_require__(39);

var _canvasControlsComponent2 = _interopRequireDefault(_canvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LinearFocusCanvasControlsComponent = function (_CanvasControlsCompon) {
  (0, _inherits3.default)(LinearFocusCanvasControlsComponent, _CanvasControlsCompon);

  function LinearFocusCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, LinearFocusCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _CanvasControlsCompon.call.apply(_CanvasControlsCompon, [this].concat(args)));

    _this._bindAll('_onCenterDragStart', '_onCenterDrag', '_onKnobDragStart', '_onKnobDrag');

    _this.state = {
      areaPosition: new _globals.Vector2(),
      areaDimensions: new _globals.Vector2(),
      knobPosition: new _globals.Vector2()
    };
    _this._operation = _this.getSharedState('operation');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called after the canvas has been zoomed in or out
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._onCanvasZoomDone = function _onCanvasZoomDone() {
    this._setStylesFromOptions();
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when the shared state did change
   * @param {Object} newState
   */


  LinearFocusCanvasControlsComponent.prototype.sharedStateDidChange = function sharedStateDidChange(newState) {
    if (newState.operation) {
      this._operation = newState.operation;
    }
    this._setStylesFromOptions();
  };

  /**
   * Gets called when this component has been mounted
   */


  LinearFocusCanvasControlsComponent.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _CanvasControlsCompon.prototype.componentDidMount.call(this);

    var editor = this.context.editor;

    editor.zoom.set('auto', function () {
      editor.features.disable('zoom', 'drag');
      _this2._setStylesFromOptions();
    });
  };

  // -------------------------------------------------------------------------- CENTER DRAGGING

  /**
   * Gets called when the user stars dragging the center
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._onCenterDragStart = function _onCenterDragStart() {
    this._initialStart = this._operation.getStart();
    this._initialEnd = this._operation.getEnd();
    this._initialDist = this._initialEnd.clone().subtract(this._initialStart);
  };

  /**
   * Gets called while the user drags the center
   * @param {Vector2} offset
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._onCenterDrag = function _onCenterDrag(offset) {
    var editor = this.context.editor;


    var outputDimensions = editor.getOutputDimensions();
    var relativeOffset = offset.clone().divide(outputDimensions);

    var newStart = this._initialStart.clone().add(relativeOffset).clamp(new _globals.Vector2(0, 0), new _globals.Vector2(1, 1).subtract(this._initialDist));
    var newEnd = newStart.clone().add(this._initialDist);

    this._operation.set({
      start: newStart,
      end: newEnd
    });

    editor.render();
    this._setStylesFromOptions();
    this.forceUpdate();
  };

  // -------------------------------------------------------------------------- GRADIENT KNOB DRAG

  /**
   * Gets called when the user stars dragging the gradient knob
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._onKnobDragStart = function _onKnobDragStart(e) {
    this._initialKnobPosition = this.state.knobPosition.clone();
  };

  /**
   * Gets called while the user drags the gradient knob
   * @param {Vector2} offset
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._onKnobDrag = function _onKnobDrag(offset) {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var newKnobPosition = this._initialKnobPosition.clone().add(offset).clamp(new _globals.Vector2(0, 0), outputDimensions);

    var distance = newKnobPosition.clone().subtract(this.state.areaPosition);
    var newGradientRadius = distance.len() * 2;

    var start = this.state.areaPosition.clone().add(-distance.y, distance.x).divide(outputDimensions);
    var end = this.state.areaPosition.clone().add(distance.y, -distance.x).divide(outputDimensions);
    var size = end.clone().subtract(start).len();
    var gradientSize = size;

    this._operation.set({
      start: start, end: end,
      size: size, gradientSize: gradientSize
    });
    this.setState({
      knobPosition: newKnobPosition,
      areaDimensions: new _globals.Vector2(this.state.areaDimensions.x, newGradientRadius)
    });
    editor.render();
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the CSS styles for the area div
   * @return {Object}
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._getAreaStyle = function _getAreaStyle() {
    var dist = this.state.knobPosition.clone().subtract(this.state.areaPosition);
    var degrees = Math.atan2(dist.x, dist.y) * (180 / Math.PI);
    var transform = 'rotate(' + (-degrees).toFixed(2) + 'deg)';

    return {
      width: this.state.areaDimensions.x,
      height: this.state.areaDimensions.y,
      left: this.state.areaPosition.x,
      top: this.state.areaPosition.y,
      marginLeft: this.state.areaDimensions.x * -0.5,
      marginTop: this.state.areaDimensions.y * -0.5,
      transform: transform,
      MozTransform: transform,
      msTransform: transform,
      WebkitTransform: transform
    };
  };

  /**
   * Returns the CSS styles for the knob
   * @return {Object}
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return {
      left: this.state.knobPosition.x,
      top: this.state.knobPosition.y
    };
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Sets the dimensions and position values from the current operation options
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._setStylesFromOptions = function _setStylesFromOptions() {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var start = this._operation.getStart().clone().multiply(outputDimensions);
    var end = this._operation.getEnd().clone().multiply(outputDimensions);
    var size = this._operation.getSize() * outputDimensions.min();

    var dist = end.clone().subtract(start);
    var middle = start.clone().add(dist.clone().divide(2));

    var areaSize = new _globals.Vector2(outputDimensions.len() * 2, size);

    var totalDist = dist.len();
    var factor = dist.clone().divide(totalDist).divide(2);

    this.setState({
      areaDimensions: areaSize,
      areaPosition: middle.clone(),
      knobPosition: middle.clone().add(-size * factor.y, size * factor.x)
    });
  };

  /**
   * Returns the container style
   * @return {Object}
   * @private
   */


  LinearFocusCanvasControlsComponent.prototype._getContainerStyle = function _getContainerStyle() {
    var _context$editor$getSD = this.context.editor.getSDK().getSprite().getBounds();

    var x = _context$editor$getSD.x;
    var y = _context$editor$getSD.y;
    var width = _context$editor$getSD.width;
    var height = _context$editor$getSD.height;

    return {
      left: x,
      top: y,
      width: width, height: height
    };
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  LinearFocusCanvasControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'b:canvasControls e:container m:full', ref: 'container', style: this._getContainerStyle() },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:linearFocusCanvasControls' },
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onCenterDragStart,
            onDrag: this._onCenterDrag },
          _globals.ReactBEM.createElement('div', { bem: 'e:area', style: this._getAreaStyle() })
        ),
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onKnobDragStart,
            onDrag: this._onKnobDrag },
          _globals.ReactBEM.createElement('div', { bem: 'e:knob $b:knob', style: this._getKnobStyle() })
        )
      )
    );
  };

  return LinearFocusCanvasControlsComponent;
}(_canvasControlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = LinearFocusCanvasControlsComponent;


LinearFocusCanvasControlsComponent.contextTypes = _canvasControlsComponent2.default.contextTypes;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _sliderComponent = __webpack_require__(41);

var _sliderComponent2 = _interopRequireDefault(_sliderComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LinearFocusControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(LinearFocusControlsComponent, _ControlsComponent);

  function LinearFocusControlsComponent() {
    (0, _classCallCheck3.default)(this, LinearFocusControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasDoneButton = true;
    _this._operation = _this.getSharedState('operation');
    _this._bindAll('_onBackClick', '_onDoneClick', '_onBlurRadiusChange', '_onOperationRemoved');

    _this._events = (0, _defineProperty3.default)({}, _globals.Constants.EVENTS.OPERATION_REMOVED, _this._onOperationRemoved);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when an operation is removed
   * @return {Operation} operation
   * @private
   */


  LinearFocusControlsComponent.prototype._onOperationRemoved = function _onOperationRemoved(operation) {
    if (operation !== this._operation) return;
    if (this._backButtonClicked) return;

    // Operation can be removed by the undo button. We need
    // to make sure we re-create the operation for the lifetime
    // of this control
    var editor = this.context.editor;

    var newOperation = editor.operations.getOrCreate('linear-focus');
    this._operation = newOperation;
    this.setSharedState({
      operation: newOperation,
      operationExistedBefore: false,
      initialOptions: {}
    });
  };

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  LinearFocusControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    this._backButtonClicked = true;

    var editor = this.context.editor;

    if (!this.getSharedState('operationExistedBefore')) {
      editor.operations.remove(this._operation);
    } else {
      this._operation.set(this.getSharedState('initialOptions'));
    }

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  /**
   * Gets called when the user clicks the done button
   * @param  {Event} e
   * @private
   */


  LinearFocusControlsComponent.prototype._onDoneClick = function _onDoneClick(e) {
    var editor = this.context.editor;

    var operationExistedBefore = this.getSharedState('operationExistedBefore');
    var initialOptions = this.getSharedState('initialOptions');
    var optionsChanged = !this._operation.optionsEqual(initialOptions);

    if (optionsChanged || !operationExistedBefore) {
      editor.history.add(this._operation, this.getSharedState('initialOptions'), this.getSharedState('operationExistedBefore'));
    }

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');

    _ControlsComponent.prototype._onDoneClick.call(this, e);
  };

  /**
   * Gets called when the slider value has changed
   * @param {Number} value
   * @private
   */


  LinearFocusControlsComponent.prototype._onBlurRadiusChange = function _onBlurRadiusChange(value) {
    var inputDimensions = this.getSharedState('inputDimensions');
    this._operation.setBlurRadius(value / inputDimensions.min());

    var editor = this.context.editor;

    editor.render();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  LinearFocusControlsComponent.prototype.renderControls = function renderControls() {
    var inputDimensions = this.getSharedState('inputDimensions');
    var shortestSide = inputDimensions.min();
    var value = this._operation.getBlurRadius() * shortestSide;

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:slider' },
      _globals.ReactBEM.createElement(_sliderComponent2.default, {
        style: 'large',
        minValue: 0,
        maxValue: Math.min(180, Math.round(shortestSide * 0.1)),
        valueUnit: 'px',
        middleDot: false,
        label: this._t('controls.focus.blurRadius'),
        onChange: this._onBlurRadiusChange,
        value: value })
    );
  };

  return LinearFocusControlsComponent;
}(_controlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = LinearFocusControlsComponent;


LinearFocusControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _radialFocusControlsComponent = __webpack_require__(203);

var _radialFocusControlsComponent2 = _interopRequireDefault(_radialFocusControlsComponent);

var _radialFocusCanvasControlsComponent = __webpack_require__(202);

var _radialFocusCanvasControlsComponent2 = _interopRequireDefault(_radialFocusCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The radial focus controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
var RadialFocusControls = function (_Controls) {
  (0, _inherits3.default)(RadialFocusControls, _Controls);

  function RadialFocusControls() {
    (0, _classCallCheck3.default)(this, RadialFocusControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user enters these controls
   * @this {RadialFocusControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */
  RadialFocusControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;


    var operationExistedBefore = editor.operations.exists('radial-focus');
    var operation = editor.operations.getOrCreate('radial-focus');

    var _operation$getOptions = operation.getOptions();

    var position = _operation$getOptions.position;
    var radius = _operation$getOptions.radius;
    var gradientRadius = _operation$getOptions.gradientRadius;
    var blurRadius = _operation$getOptions.blurRadius;


    var initialOptions = {
      position: position,
      radius: radius, gradientRadius: gradientRadius, blurRadius: blurRadius
    };

    var inputDimensions = operation.getInputDimensions();

    this.setSharedState({
      operation: operation,
      operationExistedBefore: operationExistedBefore,
      initialOptions: initialOptions,
      inputDimensions: inputDimensions
    });
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @ignore
   */


  RadialFocusControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('radial-focus');
  };

  return RadialFocusControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

RadialFocusControls.controlsComponent = _radialFocusControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
RadialFocusControls.canvasControlsComponent = _radialFocusCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
RadialFocusControls.identifier = 'radial-focus';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
RadialFocusControls.iconPath = 'controls/focus/radial.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
RadialFocusControls.languageKey = 'controls.focus.radial';

/**
 * The default options for this control
 * @type {Object}
 */
RadialFocusControls.defaultOptions = {};

exports.default = RadialFocusControls;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

var _canvasControlsComponent = __webpack_require__(39);

var _canvasControlsComponent2 = _interopRequireDefault(_canvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RadialFocusCanvasControlsComponent = function (_CanvasControlsCompon) {
  (0, _inherits3.default)(RadialFocusCanvasControlsComponent, _CanvasControlsCompon);

  function RadialFocusCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, RadialFocusCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _CanvasControlsCompon.call.apply(_CanvasControlsCompon, [this].concat(args)));

    _this._bindAll('_onCenterDragStart', '_onCenterDrag', '_onKnobDragStart', '_onKnobDrag');

    _this.state = {
      areaPosition: new _globals.Vector2(),
      areaDimensions: new _globals.Vector2(),
      knobPosition: new _globals.Vector2()
    };
    _this._knobChangedManually = false;
    _this._operation = _this.getSharedState('operation');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called after the canvas has been zoomed in or out
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._onCanvasZoomDone = function _onCanvasZoomDone() {
    this._setStylesFromOptions();
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when the shared state did change
   * @param {Object} newState
   */


  RadialFocusCanvasControlsComponent.prototype.sharedStateDidChange = function sharedStateDidChange(newState) {
    if (newState.operation) {
      this._operation = newState.operation;
    }
    this._setStylesFromOptions();
  };

  /**
   * Gets called when this component has been mounted
   */


  RadialFocusCanvasControlsComponent.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _CanvasControlsCompon.prototype.componentDidMount.call(this);
    var editor = this.context.editor;

    editor.zoom.set('auto', function () {
      editor.features.disable('zoom', 'drag');
      _this2._setStylesFromOptions();
    });
  };

  // -------------------------------------------------------------------------- CENTER DRAGGING

  /**
   * Gets called when the user stars dragging the center
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._onCenterDragStart = function _onCenterDragStart() {
    this._initialPosition = this._operation.getPosition();
    this._initialKnobPosition = this.state.knobPosition.clone();
  };

  /**
   * Gets called while the user drags the center
   * @param {Vector2} offset
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._onCenterDrag = function _onCenterDrag(offset) {
    var editor = this.context.editor;


    var outputDimensions = editor.getOutputDimensions();
    var relativeOffset = offset.clone().divide(outputDimensions);
    var newPosition = this._initialPosition.clone().add(relativeOffset);

    var newKnobPosition = this._initialKnobPosition.clone().add(offset);

    this._operation.set({
      position: newPosition
    });

    this.state.knobPosition = newKnobPosition;

    editor.render();
    this._setStylesFromOptions();
  };

  // -------------------------------------------------------------------------- GRADIENT KNOB DRAG

  /**
   * Gets called when the user stars dragging the gradient knob
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._onKnobDragStart = function _onKnobDragStart(e) {
    this._knobChangedManually = true;
    this._initialKnobPosition = this.state.knobPosition.clone();
  };

  /**
   * Gets called while the user drags the gradient knob
   * @param {Vector2} offset
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._onKnobDrag = function _onKnobDrag(offset) {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var newKnobPosition = this._initialKnobPosition.clone().add(offset).clamp(new _globals.Vector2(0, 0), outputDimensions);

    var position = this._operation.getPosition().clone().multiply(outputDimensions);

    var radius = newKnobPosition.clone().subtract(position).abs().len();
    var gradientRadius = radius / 2;

    this.setState({
      knobPosition: newKnobPosition,
      areaDimensions: new _globals.Vector2(radius * 2, radius * 2)
    });
    this._operation.set({
      radius: radius / outputDimensions.min(),
      gradientRadius: gradientRadius / outputDimensions.min()
    });

    editor.render();
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the CSS styles for the area div
   * @return {Object}
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._getAreaStyle = function _getAreaStyle() {
    return {
      width: this.state.areaDimensions.x,
      height: this.state.areaDimensions.y,
      left: this.state.areaPosition.x,
      top: this.state.areaPosition.y,
      marginLeft: this.state.areaDimensions.x * -0.5,
      marginTop: this.state.areaDimensions.y * -0.5
    };
  };

  /**
   * Returns the CSS styles for the knob
   * @return {Object}
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return {
      left: this.state.knobPosition.x,
      top: this.state.knobPosition.y
    };
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Sets the dimensions and position values from the current operation options
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._setStylesFromOptions = function _setStylesFromOptions() {
    var editor = this.context.editor;


    var outputDimensions = editor.getOutputDimensions();
    var position = this._operation.getPosition().clone().multiply(outputDimensions);

    var radius = this._operation.getRadius() * outputDimensions.min();
    var diameter = radius * 2;
    var areaSize = new _globals.Vector2(diameter, diameter);

    var newState = {
      areaDimensions: areaSize,
      areaPosition: position
    };

    if (!this._knobChangedManually) {
      newState.knobPosition = position.clone().add(radius, 0);
    }

    this.setState(newState);
  };

  /**
   * Returns the container style
   * @return {Object}
   * @private
   */


  RadialFocusCanvasControlsComponent.prototype._getContainerStyle = function _getContainerStyle() {
    var editor = this.context.editor;

    var _editor$getSDK$getSpr = editor.getSDK().getSprite().getBounds();

    var x = _editor$getSDK$getSpr.x;
    var y = _editor$getSDK$getSpr.y;
    var width = _editor$getSDK$getSpr.width;
    var height = _editor$getSDK$getSpr.height;

    return {
      left: x,
      top: y,
      width: width, height: height
    };
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  RadialFocusCanvasControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'b:canvasControls e:container m:full', ref: 'container', style: this._getContainerStyle() },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:radialFocusCanvasControls' },
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onCenterDragStart,
            onDrag: this._onCenterDrag },
          _globals.ReactBEM.createElement('div', { bem: 'e:area', style: this._getAreaStyle() })
        ),
        _globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onKnobDragStart,
            onDrag: this._onKnobDrag },
          _globals.ReactBEM.createElement('div', { bem: 'e:knob $b:knob', style: this._getKnobStyle() })
        )
      )
    );
  };

  return RadialFocusCanvasControlsComponent;
}(_canvasControlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = RadialFocusCanvasControlsComponent;


RadialFocusCanvasControlsComponent.contextTypes = _canvasControlsComponent2.default.contextTypes;

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _sliderComponent = __webpack_require__(41);

var _sliderComponent2 = _interopRequireDefault(_sliderComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RadialFocusControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(RadialFocusControlsComponent, _ControlsComponent);

  function RadialFocusControlsComponent() {
    (0, _classCallCheck3.default)(this, RadialFocusControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._hasDoneButton = true;
    _this._operation = _this.getSharedState('operation');
    _this._bindAll('_onBackClick', '_onDoneClick', '_onBlurRadiusChange', '_onOperationRemoved');

    _this._events = (0, _defineProperty3.default)({}, _globals.Constants.EVENTS.OPERATION_REMOVED, _this._onOperationRemoved);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when an operation is removed
   * @return {Operation} operation
   * @private
   */


  RadialFocusControlsComponent.prototype._onOperationRemoved = function _onOperationRemoved(operation) {
    if (operation !== this._operation) return;
    if (this._backButtonClicked) return;

    // Operation can be removed by the undo button. We need
    // to make sure we re-create the operation for the lifetime
    // of this control
    var editor = this.context.editor;

    var newOperation = editor.operations.getOrCreate('radial-focus');
    this._operation = newOperation;
    this.setSharedState({
      operation: newOperation,
      operationExistedBefore: false,
      initialOptions: {}
    });
  };

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  RadialFocusControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    this._backButtonClicked = true;

    var editor = this.context.editor;

    if (!this.getSharedState('operationExistedBefore')) {
      editor.operations.remove(this._operation);
    } else {
      this._operation.set(this.getSharedState('initialOptions'));
    }

    editor.render();
    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');

    _ControlsComponent.prototype._onBackClick.call(this, e);
  };

  /**
   * Gets called when the user clicks the done button
   * @param  {Event} e
   * @private
   */


  RadialFocusControlsComponent.prototype._onDoneClick = function _onDoneClick(e) {
    var editor = this.context.editor;

    var operationExistedBefore = this.getSharedState('operationExistedBefore');
    var initialOptions = this.getSharedState('initialOptions');
    var optionsChanged = !this._operation.optionsEqual(initialOptions);

    if (optionsChanged || !operationExistedBefore) {
      editor.history.add(this._operation, this.getSharedState('initialOptions'), this.getSharedState('operationExistedBefore'));
    }

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');

    _ControlsComponent.prototype._onDoneClick.call(this, e);
  };

  /**
   * Gets called when the slider value has changed
   * @param {Number} value
   * @private
   */


  RadialFocusControlsComponent.prototype._onBlurRadiusChange = function _onBlurRadiusChange(value) {
    var inputDimensions = this.getSharedState('inputDimensions');
    this._operation.setBlurRadius(value / inputDimensions.min());

    var editor = this.context.editor;

    editor.render();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  RadialFocusControlsComponent.prototype.renderControls = function renderControls() {
    var inputDimensions = this.getSharedState('inputDimensions');
    var shortestSide = inputDimensions.min();
    var value = this._operation.getBlurRadius() * shortestSide;

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:slider' },
      _globals.ReactBEM.createElement(_sliderComponent2.default, {
        style: 'large',
        minValue: 0,
        maxValue: Math.min(180, Math.round(shortestSide * 0.1)),
        valueUnit: 'px',
        middleDot: false,
        label: this._t('controls.focus.blurRadius'),
        onChange: this._onBlurRadiusChange,
        value: value })
    );
  };

  return RadialFocusControlsComponent;
}(_controlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = RadialFocusControlsComponent;


RadialFocusControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _adjustments = __webpack_require__(183);

Object.defineProperty(exports, 'adjustments', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_adjustments).default;
  }
});

var _crop = __webpack_require__(193);

Object.defineProperty(exports, 'crop', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_crop).default;
  }
});

var _filter = __webpack_require__(195);

Object.defineProperty(exports, 'filter', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_filter).default;
  }
});

var _focus = __webpack_require__(197);

Object.defineProperty(exports, 'focus', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_focus).default;
  }
});

var _border = __webpack_require__(185);

Object.defineProperty(exports, 'border', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_border).default;
  }
});

var _sticker = __webpack_require__(216);

Object.defineProperty(exports, 'sticker', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_sticker).default;
  }
});

var _text = __webpack_require__(221);

Object.defineProperty(exports, 'text', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_text).default;
  }
});

var _brush = __webpack_require__(188);

Object.defineProperty(exports, 'brush', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_brush).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(42);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MiniSliderComponent = function (_BaseComponent) {
  (0, _inherits3.default)(MiniSliderComponent, _BaseComponent);

  function MiniSliderComponent() {
    (0, _classCallCheck3.default)(this, MiniSliderComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this.state = {
      value: _this.props.value || 0,
      sliderPosition: 0,
      foregroundLeft: 0,
      foregroundWidth: 0
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after the component has been mounted
   */


  MiniSliderComponent.prototype.componentDidMount = function componentDidMount() {
    // Trigger a re-render to position the knob
    this._setValue(this.state.value, false);
  };

  /**
   * Gets called when this component receives new props
   * @param  {Object} props
   */


  MiniSliderComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (props.value !== this.state.value) {
      this._setValue(props.value, false);
    }
  };

  /**
   * Returns the style for the knob (position)
   * @return {Object}
   * @private
   */


  MiniSliderComponent.prototype._getKnobStyle = function _getKnobStyle() {
    return { left: this.state.sliderPosition };
  };

  /**
   * Returns the style for the foreground bar
   * @return {Object}
   * @private
   */


  MiniSliderComponent.prototype._getForegroundStyle = function _getForegroundStyle() {
    return {
      left: this.state.foregroundLeft,
      width: this.state.foregroundWidth
    };
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Decides whether or not this slider should have a middle dot on the bar
   * @private
   */


  MiniSliderComponent.prototype._displayMiddleDot = function _displayMiddleDot() {
    return this.props.middleDot !== false;
  };

  /**
   * Sets the value to the given value, updates the slider position
   * @param {Number} value
   * @param {Boolean} emitChange = true
   * @private
   */


  MiniSliderComponent.prototype._setValue = function _setValue(value) {
    var emitChange = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    value = Math.round(value);
    var _props = this.props;
    var minValue = _props.minValue;
    var maxValue = _props.maxValue;

    var progress = (value - minValue) / (maxValue - minValue);

    // Calculate slider position
    var bar = this.refs.bar;

    var barWidth = bar.offsetWidth;
    var sliderPosition = barWidth * progress;

    // Calculate foreground position and width
    var foregroundWidth = progress * barWidth;
    var foregroundLeft = 0;
    if (this._displayMiddleDot()) {
      foregroundWidth = Math.abs(progress - 0.5) * barWidth;
      foregroundLeft = progress < 0.5 ? barWidth * 0.5 - foregroundWidth : '50%';
    }

    this.setState({ value: value, sliderPosition: sliderPosition, foregroundWidth: foregroundWidth, foregroundLeft: foregroundLeft });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  MiniSliderComponent.prototype.renderWithBEM = function renderWithBEM() {
    var foregroundProps = {
      style: this._getForegroundStyle()
    };

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:miniSlider' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:bar', ref: 'bar' },
        _globals.ReactBEM.createElement('div', { bem: '$e:background' }),
        _globals.ReactBEM.createElement('div', (0, _extends3.default)({ bem: '$e:foreground' }, foregroundProps)),
        _globals.ReactBEM.createElement('div', { bem: 'e:knob', style: this._getKnobStyle() })
      )
    );
  };

  return MiniSliderComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = MiniSliderComponent;


MiniSliderComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _topBarComponent = __webpack_require__(210);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

var _overviewControlsComponent = __webpack_require__(116);

var _overviewControlsComponent2 = _interopRequireDefault(_overviewControlsComponent);

var _overviewCanvasControlsComponent = __webpack_require__(207);

var _overviewCanvasControlsComponent2 = _interopRequireDefault(_overviewCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var OverviewControls = function (_Controls) {
  (0, _inherits3.default)(OverviewControls, _Controls);

  function OverviewControls() {
    (0, _classCallCheck3.default)(this, OverviewControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  return OverviewControls;
}(_controls2.default);

/**
 * This control's top bar controls component. Used for the sub-header part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


OverviewControls.topBarControlsComponent = _topBarComponent2.default;

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
OverviewControls.controlsComponent = _overviewControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
OverviewControls.canvasControlsComponent = _overviewCanvasControlsComponent2.default;

exports.default = OverviewControls;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _canvasControlsComponent = __webpack_require__(39);

var _canvasControlsComponent2 = _interopRequireDefault(_canvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var OverviewCanvasControlsComponent = function (_CanvasControlsCompon) {
  (0, _inherits3.default)(OverviewCanvasControlsComponent, _CanvasControlsCompon);

  function OverviewCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, OverviewCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _CanvasControlsCompon.call.apply(_CanvasControlsCompon, [this].concat(args)));

    _this._bindAll('_onClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks somewhere on the canvas
   * @param  {Event} e
   * @private
   */


  OverviewCanvasControlsComponent.prototype._onClick = function _onClick(e) {
    this._performHitTest(_globals.Utils.getEventPosition(e));
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the container style
   * @return {Object}
   * @private
   */


  OverviewCanvasControlsComponent.prototype._getContainerStyle = function _getContainerStyle() {
    if (!this.context.editor.isReady()) {
      return { left: 0, top: 0, width: 1, height: 1 };
    }

    var _context$editor$getSD = this.context.editor.getSDK().getSprite().getBounds();

    var x = _context$editor$getSD.x;
    var y = _context$editor$getSD.y;
    var width = _context$editor$getSD.width;
    var height = _context$editor$getSD.height;

    return {
      left: x,
      top: y,
      width: width, height: height
    };
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  OverviewCanvasControlsComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      {
        bem: '$b:canvasControls e:container m:full',
        ref: 'container' },
      _globals.ReactBEM.createElement('div', {
        bem: '$b:canvasControls e:innerContainer',
        ref: 'innerContainer',
        style: this._getContainerStyle(),
        onClick: this._onClick,
        onTouchStart: this._onClick })
    );
  };

  return OverviewCanvasControlsComponent;
}(_canvasControlsComponent2.default);

exports.default = OverviewCanvasControlsComponent;


OverviewCanvasControlsComponent.contextTypes = _canvasControlsComponent2.default.contextTypes;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _buttonComponent = __webpack_require__(72);

var _buttonComponent2 = _interopRequireDefault(_buttonComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ExportButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ExportButtonComponent, _BaseComponent);

  function ExportButtonComponent() {
    (0, _classCallCheck3.default)(this, ExportButtonComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onButtonClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the button has been clicked
   * @private
   */


  ExportButtonComponent.prototype._onButtonClick = function _onButtonClick() {
    var _this2 = this;

    var _context = this.context;
    var options = _context.options;
    var editor = _context.editor;
    var editorScreen = _context.editorScreen;

    var exportOptions = options.editor.export;

    editorScreen.switchToControls('home', null, function () {
      var loadingModal = _modalManager2.default.instance.displayLoading(_this2._t('loading.exporting'));

      // Give it some time to display the loading modal
      setTimeout(function () {
        editor.export(exportOptions.download).then(function () {
          loadingModal.close();
        });
      }, 100);
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ExportButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    var options = this.context.options;

    if (!options.editor.export.showButton) return null;

    return _globals.ReactBEM.createElement(_buttonComponent2.default, {
      style: 'blue',
      label: this._t('editor.export'),
      icon: 'editor/export.png',
      onClick: this._onButtonClick });
  };

  return ExportButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ExportButtonComponent;


ExportButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _buttonComponent = __webpack_require__(72);

var _buttonComponent2 = _interopRequireDefault(_buttonComponent);

var _invisibleUploadComponent = __webpack_require__(71);

var _invisibleUploadComponent2 = _interopRequireDefault(_invisibleUploadComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NewFileButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(NewFileButtonComponent, _BaseComponent);

  function NewFileButtonComponent() {
    (0, _classCallCheck3.default)(this, NewFileButtonComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onNewFile', '_onButtonClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user has selected a new file
   * @param {Image} image
   */


  NewFileButtonComponent.prototype._onNewFile = function _onNewFile(image) {
    var editor = this.context.editor;

    editor.reset();
    editor.setImage(image);
    editor.zoom.set('auto');
  };

  /**
   * Gets called when the button has been clicked
   * @private
   */


  NewFileButtonComponent.prototype._onButtonClick = function _onButtonClick() {
    var options = this.context.options;

    var webcamEnabled = options.enableWebcam === false || _globals.Utils.isMobile();
    var photoRollEnabled = !!options.photoRoll.provider;
    if (webcamEnabled && !photoRollEnabled) {
      this.refs.upload.open();
    } else if (photoRollEnabled) {
      this.props.app.switchToScreen('photoRoll');
    } else {
      this.props.app.switchToScreen('splash');
    }
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  NewFileButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    var options = this.context.options;


    var buttonLabel = null;
    if (options.photoRoll.provider) {
      buttonLabel = this._t('editor.backgroundImage');
    } else {
      buttonLabel = this._t('editor.new');
    }

    return _globals.ReactBEM.createElement(
      'div',
      null,
      _globals.ReactBEM.createElement(_invisibleUploadComponent2.default, { onNewFile: this._onNewFile, ref: 'upload' }),
      _globals.ReactBEM.createElement(_buttonComponent2.default, {
        label: buttonLabel,
        icon: 'editor/new.png',
        onClick: this._onButtonClick })
    );
  };

  return NewFileButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = NewFileButtonComponent;


NewFileButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _topBarComponent = __webpack_require__(55);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

var _newFileButtonComponent = __webpack_require__(209);

var _newFileButtonComponent2 = _interopRequireDefault(_newFileButtonComponent);

var _exportButtonComponent = __webpack_require__(208);

var _exportButtonComponent2 = _interopRequireDefault(_exportButtonComponent);

var _undoButtonComponent = __webpack_require__(211);

var _undoButtonComponent2 = _interopRequireDefault(_undoButtonComponent);

var _zoomComponent = __webpack_require__(212);

var _zoomComponent2 = _interopRequireDefault(_zoomComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var OverviewTopBarComponent = function (_TopBarComponent) {
  (0, _inherits3.default)(OverviewTopBarComponent, _TopBarComponent);

  function OverviewTopBarComponent() {
    (0, _classCallCheck3.default)(this, OverviewTopBarComponent);
    return (0, _possibleConstructorReturn3.default)(this, _TopBarComponent.apply(this, arguments));
  }

  /**
   * Renders the content of this OverviewTopBarComponent
   * @return {ReactBEM.Element}
   */
  OverviewTopBarComponent.prototype.renderContent = function renderContent() {
    var newFileButton = null;
    if (this.context.options.enableUpload) {
      newFileButton = _globals.ReactBEM.createElement(_newFileButtonComponent2.default, { app: this.props.app });
    }

    var zoomComponent = null;
    if (this.context.options.editor.enableZoom) {
      zoomComponent = _globals.ReactBEM.createElement(_zoomComponent2.default, null);
    }

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:topBar' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:left' },
        newFileButton
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:right' },
        _globals.ReactBEM.createElement(_undoButtonComponent2.default, null),
        _globals.ReactBEM.createElement(_exportButtonComponent2.default, null)
      ),
      zoomComponent
    );
  };

  return OverviewTopBarComponent;
}(_topBarComponent2.default);

exports.default = OverviewTopBarComponent;


OverviewTopBarComponent.contextTypes = _topBarComponent2.default.contextTypes;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _buttonComponent = __webpack_require__(72);

var _buttonComponent2 = _interopRequireDefault(_buttonComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var UndoButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(UndoButtonComponent, _BaseComponent);

  function UndoButtonComponent() {
    var _this$_events;

    (0, _classCallCheck3.default)(this, UndoButtonComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onButtonClick', '_onHistoryUpdated', '_onFeaturesUpdated');

    _this._events = (_this$_events = {}, (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.HISTORY_UPDATED, _this._onHistoryUpdated), (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.FEATURES_UPDATED, _this._onFeaturesUpdated), _this$_events);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the features have been enabled or disabled
   * @private
   */


  UndoButtonComponent.prototype._onFeaturesUpdated = function _onFeaturesUpdated() {
    this.forceUpdate();
  };

  /**
   * Gets called when the history has been updated
   * @private
   */


  UndoButtonComponent.prototype._onHistoryUpdated = function _onHistoryUpdated() {
    this.forceUpdate();
  };

  /**
   * Gets called when the button has been clicked
   * @private
   */


  UndoButtonComponent.prototype._onButtonClick = function _onButtonClick() {
    var editor = this.context.editor;

    editor.history.undo();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  UndoButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    var editor = this.context.editor;

    if (!editor.history.isAvailable()) return null;

    return _globals.ReactBEM.createElement(_buttonComponent2.default, {
      label: this._t('editor.undo'),
      icon: 'editor/undo.png',
      onClick: this._onButtonClick });
  };

  return UndoButtonComponent;
}(_globals.BaseComponent);

exports.default = UndoButtonComponent;


UndoButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ZoomComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ZoomComponent, _BaseComponent);

  function ZoomComponent() {
    var _this$_events;

    (0, _classCallCheck3.default)(this, ZoomComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onZoomOutClick', '_onZoomInClick', '_onZoomDone', '_onFeaturesUpdated');

    _this._events = (_this$_events = {}, (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.ZOOM_DONE, _this._onZoomDone), (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.FEATURES_UPDATED, _this._onFeaturesUpdated), _this$_events);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the features have been updated
   * @private
   */


  ZoomComponent.prototype._onFeaturesUpdated = function _onFeaturesUpdated() {
    this.forceUpdate();
  };

  /**
   * Gets called when the new zoom level has been applied
   * @private
   */


  ZoomComponent.prototype._onZoomDone = function _onZoomDone() {
    this.forceUpdate();
  };

  /**
   * Gets called when the user clicks the "zoom out" button
   * @param {Event} e
   * @private
   */


  ZoomComponent.prototype._onZoomOutClick = function _onZoomOutClick(e) {
    var editor = this.context.editor;

    if (!editor.features.isEnabled('zoom')) return;

    editor.zoom.zoomOut();
  };

  /**
   * Gets called when the user clicks the "zoom in" button
   * @param {Event} e
   * @private
   */


  ZoomComponent.prototype._onZoomInClick = function _onZoomInClick(e) {
    var editor = this.context.editor;

    if (!editor.features.isEnabled('zoom')) return;

    editor.zoom.zoomIn();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ZoomComponent.prototype.renderWithBEM = function renderWithBEM() {
    var editor = this.context.editor;

    var zoom = editor.zoom.get();
    var enabled = editor.features.isEnabled('zoom');

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:editorScreen $e:zoom' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:button m:zoomOut',
          onClick: this._onZoomOutClick,
          className: enabled ? null : 'is-disabled' },
        _globals.ReactBEM.createElement('img', { bem: 'e:image', src: this._getAssetPath('controls/minus.png', true) })
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:label' },
        'Zoom',
        _globals.ReactBEM.createElement('br', null),
        Math.round(zoom * 100),
        '%'
      ),
      _globals.ReactBEM.createElement(
        'div',
        {
          bem: '$e:button m:zoomIn',
          onClick: this._onZoomInClick,
          className: enabled ? null : 'is-disabled' },
        _globals.ReactBEM.createElement('img', { bem: 'e:image', src: this._getAssetPath('controls/plus.png', true) })
      )
    );
  };

  return ZoomComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ZoomComponent;


ZoomComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _itemComponent = __webpack_require__(68);

var _itemComponent2 = _interopRequireDefault(_itemComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var BrushItemComponent = function (_ItemComponent) {
  (0, _inherits3.default)(BrushItemComponent, _ItemComponent);

  function BrushItemComponent() {
    (0, _classCallCheck3.default)(this, BrushItemComponent);
    return (0, _possibleConstructorReturn3.default)(this, _ItemComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */
  BrushItemComponent.prototype.componentDidMount = function componentDidMount() {
    _ItemComponent.prototype.componentDidMount.call(this);

    var canvas = this.props.sprite.getCanvas();
    this.refs.brush.appendChild(canvas);
  };

  /**
   * Gets called when this component is about to receive new properties
   * @param  {Object} nextProps
   */


  BrushItemComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.sprite !== this.props.sprite) {
      var canvas = this.props.sprite.getCanvas();
      canvas.parentNode.removeChild(canvas);
      var newCanvas = nextProps.sprite.getCanvas();
      this.refs.brush.appendChild(newCanvas);
    }
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Checks if this item is currently selected
   * @return {Boolean}
   */


  BrushItemComponent.prototype._isSelected = function _isSelected() {
    return this.getSharedState('brush') === this.props.sprite;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  BrushItemComponent.prototype.renderWithBEM = function renderWithBEM() {
    var brushClassName = this._isSelected() ? 'is-selected' : null;
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:spritesCanvasControls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:item e:container m:full', ref: 'container' },
        _globals.ReactBEM.createElement('div', {
          bem: '$e:brush',
          className: brushClassName,
          ref: 'brush' })
      )
    );
  };

  return BrushItemComponent;
}(_itemComponent2.default);

exports.default = BrushItemComponent;


BrushItemComponent.contextTypes = _itemComponent2.default.contextTypes;

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

var _itemComponent = __webpack_require__(68);

var _itemComponent2 = _interopRequireDefault(_itemComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StickerItemComponent = function (_ItemComponent) {
  (0, _inherits3.default)(StickerItemComponent, _ItemComponent);

  function StickerItemComponent() {
    (0, _classCallCheck3.default)(this, StickerItemComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ItemComponent.call.apply(_ItemComponent, [this].concat(args)));

    _this._bindAll('_onRotateKnobDragStart', '_onRotateKnobDrag', '_onRotateKnobDragStop');
    _this._id = _globals.SDKUtils.getUUID();
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user starts dragging a knob
   * @param  {String} side
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  StickerItemComponent.prototype._onKnobDragStart = function _onKnobDragStart(side, position, e) {
    var sprite = this.props.sprite;

    switch (side) {
      case 'bottom':
        this._initialPosition = this._getBottomDragKnobPosition();
        break;
      case 'top':
        this._initialPosition = this._getTopDragKnobPosition();
        break;
    }

    this._initialDimensions = sprite.getDimensions().clone();

    this.props.onDragStart && this.props.onDragStart();
  };

  /**
   * Gets called while the user drags a sticker
   * @param  {String} side
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  StickerItemComponent.prototype._onKnobDrag = function _onKnobDrag(side, offset, e) {
    var sprite = this.props.sprite;

    var stickerPosition = this._getAbsoluteSpritePosition();
    var newKnobPosition = this._initialPosition.clone().add(offset);

    // Calculate new rotation and dimensions from new knob position
    var knobDistanceFromCenter = newKnobPosition.clone().subtract(stickerPosition);

    var initialKnobDistanceFromCenter = this._initialPosition.clone().subtract(stickerPosition);

    if (this.props.options.fixedRatio) {
      var halfDimensions = this._getStickerDimensions().divide(2).abs();

      var initialDistanceFromCenter = this._initialPosition.clone().subtract(stickerPosition);

      var radians = void 0;

      switch (side) {
        case 'bottom':
          radians = Math.atan2(knobDistanceFromCenter.y, knobDistanceFromCenter.x) - Math.atan2(halfDimensions.y, halfDimensions.x);
          break;
        case 'top':
          radians = Math.atan2(knobDistanceFromCenter.y, knobDistanceFromCenter.x) - Math.atan2(-halfDimensions.y, -halfDimensions.x);
          break;
      }

      var newDimensions = this._initialDimensions.clone().multiply(knobDistanceFromCenter.len() / initialDistanceFromCenter.len());

      sprite.set({
        dimensions: newDimensions,
        rotation: radians
      });
    } else {
      var zoom = this.context.editor.zoom.get();
      var rotation = sprite.getRotation();
      var cos = Math.cos(rotation * -1);
      var sin = Math.sin(rotation * -1);

      var localDistanceToCenter = new _globals.Vector2(knobDistanceFromCenter.x * cos - knobDistanceFromCenter.y * sin, knobDistanceFromCenter.x * sin + knobDistanceFromCenter.y * cos);

      var previousLocalDistanceToCenter = new _globals.Vector2(initialKnobDistanceFromCenter.x * cos - initialKnobDistanceFromCenter.y * sin, initialKnobDistanceFromCenter.x * sin + initialKnobDistanceFromCenter.y * cos);

      var distanceToCenterDiff = void 0;

      switch (side) {
        case 'bottom':
          distanceToCenterDiff = localDistanceToCenter.clone().subtract(previousLocalDistanceToCenter);
          break;
        case 'top':
          distanceToCenterDiff = previousLocalDistanceToCenter.clone().subtract(localDistanceToCenter);
          break;
      }

      var _newDimensions = this._initialDimensions.clone().add(distanceToCenterDiff.clone().divide(zoom).multiply(2));

      sprite.set({
        dimensions: _newDimensions
      });
    }
  };

  /**
   * Gets called when the user stops dragging a knob
   * @private
   */


  StickerItemComponent.prototype._onKnobDragStop = function _onKnobDragStop() {
    this.props.onDragStop && this.props.onDragStop();
  };

  /**
   * Gets called when the user starts dragging the rotate knob
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  StickerItemComponent.prototype._onRotateKnobDragStart = function _onRotateKnobDragStart(position, e) {
    this._initialPosition = this._getRotateKnobPosition();
    this.props.onDragStart && this.props.onDragStart();
  };

  /**
   * Gets called when the user stops dragging the rotate knob
   * @private
   */


  StickerItemComponent.prototype._onRotateKnobDragStop = function _onRotateKnobDragStop() {
    this.props.onDragStop && this.props.onDragStop();
  };

  /**
   * Gets called while the user drags a sticker
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  StickerItemComponent.prototype._onRotateKnobDrag = function _onRotateKnobDrag(offset, e) {
    var sprite = this.props.sprite;

    var stickerPosition = this._getAbsoluteSpritePosition();
    var newKnobPosition = this._initialPosition.clone().add(offset);

    var halfDimensions = this._getStickerDimensions().divide(2);

    // Calculate new rotation and dimensions from new knob position
    var knobDistanceFromCenter = newKnobPosition.clone().subtract(stickerPosition);

    var radians = void 0;
    radians = Math.atan2(knobDistanceFromCenter.y, knobDistanceFromCenter.x) - Math.atan2(-halfDimensions.y, halfDimensions.x);

    sprite.set({
      rotation: radians
    });
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style object for the bottom right drag knob
   * @return {Object}
   * @private
   */


  StickerItemComponent.prototype._getBottomDragKnobStyle = function _getBottomDragKnobStyle() {
    var knobPosition = this._getBottomDragKnobPosition();

    return {
      left: knobPosition.x,
      top: knobPosition.y
    };
  };

  /**
   * Returns the style object for the top right drag knob
   * @return {Object}
   * @private
   */


  StickerItemComponent.prototype._getTopDragKnobStyle = function _getTopDragKnobStyle() {
    var knobPosition = this._getTopDragKnobPosition();

    return {
      left: knobPosition.x,
      top: knobPosition.y
    };
  };

  /**
   * Returns the style object for the rotate knob
   * @return {Object}
   * @private
   */


  StickerItemComponent.prototype._getRotateKnobStyle = function _getRotateKnobStyle() {
    var knobPosition = this._getRotateKnobPosition();

    return {
      left: knobPosition.x,
      top: knobPosition.y
    };
  };

  /**
   * Builds the style object for this sticker
   * @return {Object}
   * @private
   */


  StickerItemComponent.prototype._getStickerStyle = function _getStickerStyle() {
    var sprite = this.props.sprite;


    var processedDimensions = this._getStickerDimensions().abs();
    var spritePosition = this._getAbsoluteSpritePosition().subtract(processedDimensions.clone().divide(2));

    var degrees = sprite.getRotation() * 180 / Math.PI;
    var transform = 'rotate(' + degrees.toFixed(2) + 'deg)';

    var spriteDimensions = sprite.getDimensions();

    var flipVertically = sprite.getFlipVertically();
    if (spriteDimensions.y < 0) flipVertically = !flipVertically;
    if (flipVertically) {
      transform += ' scaleY(-1)';
    }

    var flipHorizontally = sprite.getFlipHorizontally();
    if (spriteDimensions.x < 0) flipHorizontally = !flipHorizontally;
    if (flipHorizontally) {
      transform += ' scaleX(-1)';
    }

    return {
      top: spritePosition.y,
      left: spritePosition.x,
      width: processedDimensions.x,
      height: processedDimensions.y,
      WebkitTransform: transform,
      msTransform: transform,
      MozTransform: transform,
      OTransform: transform
    };
  };

  // -------------------------------------------------------------------------- CALCULATIONS

  /**
   * Calculates the sticker dimensions
   * @param  {Object} sticker
   * @return {Vector2}
   * @private
   */


  StickerItemComponent.prototype._getStickerDimensions = function _getStickerDimensions() {
    var sprite = this.props.sprite;
    var editor = this.context.editor;


    return sprite.getDimensions().clone().multiply(editor.zoom.get());
  };

  /**
   * Calculates the rotate button knob's position
   * @return {PhotoEditorSDK.Math.Vector2}
   * @private
   */


  StickerItemComponent.prototype._getRotateKnobPosition = function _getRotateKnobPosition() {
    var sprite = this.props.sprite;

    var stickerPosition = this._getAbsoluteSpritePosition();
    var stickerRotation = sprite.getRotation();

    // Calculate sin and cos for rotation
    var sin = Math.sin(stickerRotation || 0);
    var cos = Math.cos(stickerRotation || 0);

    // Calculate sticker dimensions
    var halfDimensions = this._getStickerDimensions().divide(2);

    // Calculate knob position
    return stickerPosition.clone().add(halfDimensions.x * cos + halfDimensions.y * sin, halfDimensions.x * sin - halfDimensions.y * cos);
  };

  /**
   * Calculates the drag bottom right knob's position
   * @return {Vector2}
   * @private
   */


  StickerItemComponent.prototype._getBottomDragKnobPosition = function _getBottomDragKnobPosition() {
    var sprite = this.props.sprite;

    var stickerPosition = this._getAbsoluteSpritePosition();
    var stickerRotation = sprite.getRotation();

    // Calculate sin and cos for rotation
    var sin = Math.sin(stickerRotation || 0);
    var cos = Math.cos(stickerRotation || 0);

    // Calculate sticker dimensions
    var halfDimensions = this._getStickerDimensions().divide(2);

    // Calculate knob position
    return stickerPosition.clone().add(halfDimensions.x * cos - halfDimensions.y * sin, halfDimensions.x * sin + halfDimensions.y * cos);
  };

  /**
   * Calculates the drag top right knob's position
   * @return {Vector2}
   * @private
   */


  StickerItemComponent.prototype._getTopDragKnobPosition = function _getTopDragKnobPosition() {
    var sprite = this.props.sprite;

    var stickerPosition = this._getAbsoluteSpritePosition();
    var stickerRotation = sprite.getRotation();

    // Calculate sin and cos for rotation
    var sin = Math.sin(stickerRotation || 0);
    var cos = Math.cos(stickerRotation || 0);

    // Calculate sticker dimensions
    var halfDimensions = this._getStickerDimensions(sprite).divide(2);

    // Calculate knob position
    return stickerPosition.clone().subtract(halfDimensions.x * cos - halfDimensions.y * sin, halfDimensions.x * sin + halfDimensions.y * cos);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the knobs for this item
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  StickerItemComponent.prototype._renderKnobs = function _renderKnobs() {
    var knobs = [];
    if (this.props.selected) {
      knobs = [_globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onKnobDragStart.bind(this, 'bottom'),
          onStop: this._onKnobDragStop.bind(this, 'bottom'),
          onDrag: this._onKnobDrag.bind(this, 'bottom') },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:knob $b:knob', style: this._getBottomDragKnobStyle() },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/resize-diagonal-down.png', true) })
        )
      ), _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onKnobDragStart.bind(this, 'top'),
          onStop: this._onKnobDragStop.bind(this, 'top'),
          onDrag: this._onKnobDrag.bind(this, 'top') },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:knob $b:knob', style: this._getTopDragKnobStyle() },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/resize-diagonal-down.png', true) })
        )
      )];

      if (!this.props.options.fixedRatio) {
        knobs.push(_globals.ReactBEM.createElement(
          _draggableComponent2.default,
          {
            onStart: this._onRotateKnobDragStart,
            onStop: this._onRotateKnobDragStop,
            onDrag: this._onRotateKnobDrag },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:knob $b:knob', style: this._getRotateKnobStyle() },
            _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/rotate.png', true) })
          )
        ));
      }
    }
    return knobs;
  };

  /**
   * Renders the draggable item
   * @return {ReactBEM.Element}
   * @private
   */


  StickerItemComponent.prototype._renderItem = function _renderItem() {
    var sprite = this.props.sprite;

    var stickerStyle = this._getStickerStyle();
    var className = this.props.selected ? 'is-selected' : null;

    return _globals.ReactBEM.createElement(
      _draggableComponent2.default,
      {
        onStart: this._onItemDragStart,
        onStop: this._onItemDragStop,
        onDrag: this._onItemDrag,
        disabled: !this.props.selected },
      _globals.ReactBEM.createElement(
        'div',
        {
          bem: '$e:sticker',
          style: stickerStyle,
          className: className },
        _globals.ReactBEM.createElement('img', { src: sprite.getImage().src, width: stickerStyle.width, height: stickerStyle.height })
      )
    );
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  StickerItemComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:spritesCanvasControls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:item e:container' },
        this._renderItem(),
        this._renderKnobs()
      )
    );
  };

  return StickerItemComponent;
}(_itemComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = StickerItemComponent;


StickerItemComponent.contextTypes = _itemComponent2.default.contextTypes;

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _draggableComponent = __webpack_require__(19);

var _draggableComponent2 = _interopRequireDefault(_draggableComponent);

var _itemComponent = __webpack_require__(68);

var _itemComponent2 = _interopRequireDefault(_itemComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextItemComponent = function (_ItemComponent) {
  (0, _inherits3.default)(TextItemComponent, _ItemComponent);

  function TextItemComponent() {
    (0, _classCallCheck3.default)(this, TextItemComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ItemComponent.call.apply(_ItemComponent, [this].concat(args)));

    _this._bindAll('_onTextChange', '_onItemDoubleClick', '_onItemTouchStart', '_onItemTouchEnd', '_onResizeKnobDragStart', '_onResizeKnobDrag', '_onResizeKnobDragStop', '_onRotationKnobDragStart', '_onRotationKnobDrag', '_onRotationKnobDragStop');

    _this.state = {
      editMode: false
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user has changed the text
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onTextChange = function _onTextChange(e) {
    var sprite = this.props.sprite;

    sprite.setText(e.target.value);
  };

  /**
   * Gets called when the user double clicks the text. Turns the sprite into
   * editing mode.
   * @private
   */


  TextItemComponent.prototype._onItemDoubleClick = function _onItemDoubleClick() {
    this.enterEditMode();
  };

  /**
   * Enters the edit mode
   */


  TextItemComponent.prototype.enterEditMode = function enterEditMode() {
    var _this2 = this;

    var sprite = this.props.sprite;

    if (!sprite._edited) {
      sprite.setText('');
      this.refs.textarea.value = '';
      sprite._edited = true;
      this.forceUpdate();
    }
    this.setState({ editMode: true }, function () {
      _this2.refs.textarea.focus();
      _this2.refs.textarea.select();
    });
  };

  /**
   * Gets called when the user starts touching the item
   * @param {Event} e
   * @private
   */


  TextItemComponent.prototype._onItemTouchStart = function _onItemTouchStart(e) {
    this._initialTouchPosition = _globals.Utils.getEventPosition(e);
    this._tapStartAt = (0, _globals.now)();
  };

  /**
   * Gets called when the user stops touching the item
   * @private
   */


  TextItemComponent.prototype._onItemTouchEnd = function _onItemTouchEnd() {
    // Recognize double tap
    if ((0, _globals.now)() - this._tapStartAt <= 100) {
      // Touch didn't last longer than 100ms => recognized as tap
      if (typeof this._lastTapAt !== 'undefined' && (0, _globals.now)() - this._lastTapAt <= 300) {
        // Last tap was no longer than 300ms ago => recognized as double tap
        this._onItemDoubleClick();
      }
      this._lastTapAt = (0, _globals.now)();
    }
  };

  // -------------------------------------------------------------------------- ROTATION DRAGGING

  /**
   * Gets called when the user starts dragging the resize knob
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onRotationKnobDragStart = function _onRotationKnobDragStart(position, e) {
    this._dragging = true;
    this._initialPosition = this._getRotationKnobPosition();

    this.props.onDragStart && this.props.onDragStart();
  };

  /**
   * Gets called while the user rotates the text
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onRotationKnobDrag = function _onRotationKnobDrag(offset, e) {
    var sprite = this.props.sprite;
    var editor = this.context.editor;


    var spritePosition = this._getAbsoluteSpritePosition();
    var newKnobPosition = this._initialPosition.clone().add(offset);

    // Calculate new rotation and scale from new knob position
    var knobDistanceFromCenter = newKnobPosition.clone().subtract(spritePosition);

    var boundingBox = sprite.getBoundingBox(editor.getSDK(), editor.getOutputDimensions());
    var radians = Math.atan2(knobDistanceFromCenter.y, knobDistanceFromCenter.x) - Math.atan2(boundingBox.y, boundingBox.x / 2);

    sprite.setRotation(radians);
  };

  /**
   * Gets called when the user stops rotating the text
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onRotationKnobDragStop = function _onRotationKnobDragStop(e) {
    this.props.onDragStop && this.props.onDragStop();
  };

  // -------------------------------------------------------------------------- RESIZE DRAGGING

  /**
   * Gets called when the user starts resizing the text
   * @param  {Vector2} position
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onResizeKnobDragStart = function _onResizeKnobDragStart(position, e) {
    this._initialPosition = this._getResizeKnobPosition();

    this.props.onDragStart && this.props.onDragStart();
  };

  /**
   * Gets called while the user resizes the text
   * @param  {Vector2} offset
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onResizeKnobDrag = function _onResizeKnobDrag(offset, e) {
    var sprite = this.props.sprite;

    var textRotation = sprite.getRotation();

    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var cos = Math.cos(textRotation);
    var sin = Math.sin(textRotation);

    var newKnobPosition = this._initialPosition.clone().add(offset);
    var position = this._getAbsoluteSpritePosition();
    var distanceToPosition = newKnobPosition.clone().subtract(position);

    var newMaxWidth = Math.max((distanceToPosition.x * cos + distanceToPosition.y * sin) / outputDimensions.x * 2, 0.1);
    sprite.setMaxWidth(newMaxWidth);
  };

  /**
   * Gets called when the user stops resizing the text
   * @param  {Event} e
   * @private
   */


  TextItemComponent.prototype._onResizeKnobDragStop = function _onResizeKnobDragStop(e) {
    this.props.onDragStop && this.props.onDragStop();
  };

  // -------------------------------------------------------------------------- STYLING

  /**
   * Returns the style object for the rotation knob
   * @return {Object}
   * @private
   */


  TextItemComponent.prototype._getRotationKnobStyle = function _getRotationKnobStyle() {
    var position = this._getRotationKnobPosition();
    return {
      left: position.x,
      top: position.y
    };
  };

  /**
   * Returns the style object for the resize knob
   * @return {Object}
   * @private
   */


  TextItemComponent.prototype._getResizeKnobStyle = function _getResizeKnobStyle() {
    var position = this._getResizeKnobPosition();
    return {
      left: position.x,
      top: position.y
    };
  };

  /**
   * Returns the style object for the given text object
   * @return {Object}
   * @private
   */


  TextItemComponent.prototype._getTextStyle = function _getTextStyle() {
    var editor = this.context.editor;
    var sprite = this.props.sprite;

    var sdk = editor.getSDK();
    var outputDimensions = editor.getOutputDimensions();
    var style = sprite.getDOMStyle(sdk, outputDimensions);

    var spritePosition = this._getAbsoluteSpritePosition();
    var boundingBox = sprite.getBoundingBox(sdk, outputDimensions);
    style.height = Math.min(boundingBox.y, outputDimensions.y - spritePosition.y);

    return style;
  };

  /**
   * Returns the style object for the item container
   * @return {Object}
   * @private
   */


  TextItemComponent.prototype._getItemContainerStyle = function _getItemContainerStyle() {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var sprite = this.props.sprite;

    var textPosition = sprite.getPosition().clone().multiply(outputDimensions);

    var degrees = sprite.getRotation() * 180 / Math.PI;
    var transform = 'rotateZ(' + degrees.toFixed(2) + 'deg)';
    var transformOrigin = '50% 0';

    var maxWidth = sprite.getMaxWidth() * outputDimensions.x;
    return {
      width: maxWidth,
      left: textPosition.x,
      top: textPosition.y,
      marginLeft: maxWidth * -0.5,
      transform: transform,
      MozTransform: transform,
      msTransform: transform,
      WebkitTransform: transform,
      transformOrigin: transformOrigin,
      MozTransformOrigin: transformOrigin,
      msTransformOrigin: transformOrigin,
      WebkitTransformOrigin: transformOrigin
    };
  };

  // -------------------------------------------------------------------------- CALCULATIONS

  /**
   * Returns the position of the rotation knob
   * @return {Vector2}
   * @private
   */


  TextItemComponent.prototype._getRotationKnobPosition = function _getRotationKnobPosition() {
    var sprite = this.props.sprite;
    var editor = this.context.editor;


    var sin = Math.sin(sprite.getRotation());
    var cos = Math.cos(sprite.getRotation());

    var outputDimensions = editor.getOutputDimensions();
    var boundingBox = sprite.getBoundingBox(editor.getSDK(), outputDimensions);
    var halfDimensions = boundingBox.clone().divide(2);
    var position = sprite.getPosition().clone().multiply(outputDimensions).add(halfDimensions.x * cos - boundingBox.y * sin, halfDimensions.x * sin + boundingBox.y * cos);
    return position;
  };

  /**
   * Returns the position of the resize knob
   * @return {Vector2}
   * @private
   */


  TextItemComponent.prototype._getResizeKnobPosition = function _getResizeKnobPosition() {
    var sprite = this.props.sprite;
    var editor = this.context.editor;


    var sin = Math.sin(sprite.getRotation());
    var cos = Math.cos(sprite.getRotation());

    var outputDimensions = editor.getOutputDimensions();
    var boundingBox = sprite.getBoundingBox(editor.getSDK(), outputDimensions);
    var halfDimensions = boundingBox.clone().divide(2);
    var position = sprite.getPosition().clone().multiply(outputDimensions).add(halfDimensions.x * cos, halfDimensions.x * sin);
    return position;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the knobs for this item
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  TextItemComponent.prototype._renderKnobs = function _renderKnobs() {
    var knobs = [];
    if (this.props.selected && !this.state.editMode) {
      knobs = [_globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onRotationKnobDragStart,
          onDrag: this._onRotationKnobDrag,
          onStop: this._onRotationKnobDragStop },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:knob m:rotate $b:knob', style: this._getRotationKnobStyle() },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon m:larger', src: this._getAssetPath('controls/knobs/rotate.png', true) })
        )
      ), _globals.ReactBEM.createElement(
        _draggableComponent2.default,
        {
          onStart: this._onResizeKnobDragStart,
          onDrag: this._onResizeKnobDrag,
          onStop: this._onResizeKnobDragStop },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:knob m:resize $b:knob', style: this._getResizeKnobStyle() },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/knobs/resize-diagonal-up.png', true) })
        )
      )];
    }
    return knobs;
  };

  /**
   * Renders the draggable item
   * @return {ReactBEM.Element}
   * @private
   */


  TextItemComponent.prototype._renderItem = function _renderItem() {
    var sprite = this.props.sprite;


    var content = [];
    content = [_globals.ReactBEM.createElement('textarea', {
      bem: 'e:content',
      ref: 'textarea',
      style: this._getTextStyle(),
      defaultValue: sprite.getText(),
      disabled: !this.state.editMode,
      onChange: this._onTextChange })];

    var textBEM = '$e:text';
    if (this.props.selected) {
      textBEM += ' m:selected';
    }

    if (!this.state.editMode) {
      content.push(_globals.ReactBEM.createElement('div', {
        bem: 'e:disabledOverlay',
        onDoubleClick: this._onItemDoubleClick,
        onTouchStart: this._onItemTouchStart,
        onTouchEnd: this._onItemTouchEnd }));
    }

    return _globals.ReactBEM.createElement(
      _draggableComponent2.default,
      {
        onStart: this._onItemDragStart,
        onStop: this._onItemDragStop,
        onDrag: this._onItemDrag,
        disabled: !this.props.selected || this.props.selected && this.state.editMode },
      _globals.ReactBEM.createElement(
        'div',
        {
          bem: '$e:text',
          style: this._getItemContainerStyle(),
          className: this.props.selected ? 'is-selected' : null },
        content
      )
    );
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  TextItemComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:spritesCanvasControls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:item e:container' },
        this._renderItem(),
        this._renderKnobs()
      )
    );
  };

  return TextItemComponent;
}(_itemComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TextItemComponent;


TextItemComponent.contextTypes = _itemComponent2.default.contextTypes;

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _stickerControlsComponent = __webpack_require__(218);

var _stickerControlsComponent2 = _interopRequireDefault(_stickerControlsComponent);

var _stickerCanvasControlsComponent = __webpack_require__(217);

var _stickerCanvasControlsComponent2 = _interopRequireDefault(_stickerCanvasControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Sticker = _globals.SDK.Operations.SpriteOperation.Sticker; /*
                                                                * This file is part of PhotoEditorSDK.
                                                                *
                                                                * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                                                                * All rights reserved.
                                                                *
                                                                * Redistribution and use in source and binary forms, without
                                                                * modification, are permitted provided that the following license agreement
                                                                * is approved and a legal/financial contract was signed by the user.
                                                                * The license agreement can be found under following link:
                                                                *
                                                                * https://www.photoeditorsdk.com/LICENSE.txt
                                                                */

/**
 * The sticker controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
var StickerControls = function (_Controls) {
  (0, _inherits3.default)(StickerControls, _Controls);

  function StickerControls() {
    (0, _classCallCheck3.default)(this, StickerControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user leaves these controls
   * @this {StickerControlsComponent}
   * @override
   * @ignore
   */
  StickerControls.onExit = function onExit() {
    var editor = this.context.editor;

    var operation = this.getSharedState('operation');

    editor.history.add(operation, this.getSharedState('initialOptions'), this.getSharedState('operationExistedBefore'));

    operation.setEnabled(true);

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');
    editor.render();
  };

  /**
   * Gets called when the user enters these controls
   * @this {StickerControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */


  StickerControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;

    var operation = editor.operations.getOrCreate('sprite');
    var operationExistedBefore = editor.operations.exists('sprite');
    var sprites = operation.getSprites();
    var stickers = operation.getSpritesOfType(Sticker);
    var initialOptions = operation.serializeOptions();

    operation.setEnabled(false);
    editor.zoom.set('auto');

    this.setSharedState({
      operationExistedBefore: operationExistedBefore, operation: operation, sprites: sprites, stickers: stickers, initialOptions: initialOptions
    });
  };

  /**
   * Checks if there is something at the given position that
   * would cause the UI to switch to this control on click
   * @param  {PhotoEditorSDK.Math.Vector2} position
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {*}
   * @override
   * @ignore
   */


  StickerControls.clickAtPosition = function clickAtPosition(position, editor) {
    if (!editor.operations.exists('sprite')) return false;

    var operation = editor.operations.getOrCreate('sprite');
    var sprites = operation.getSpritesAtPosition(position, editor.getOutputDimensions()).filter(function (s) {
      return s instanceof Sticker;
    });

    if (sprites.length) {
      return { selectedSprite: sprites[0] };
    } else {
      return false;
    }
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @override
   * @ignore
   */


  StickerControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('sticker');
  };

  return StickerControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


StickerControls.controlsComponent = _stickerControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
StickerControls.canvasControlsComponent = _stickerCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
StickerControls.identifier = 'sticker';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
StickerControls.iconPath = 'controls/overview/sticker.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
StickerControls.languageKey = 'controls.overview.sticker';

/**
 * The default options for this control
 * @type {Object}
 * @property {Object[]} [categories = []]
 * @property {Boolean} [replaceCategories = false]
 * @property {String[]} [selectableStickers = null]
 * @property {Boolean} [tooltips = false]
 */
StickerControls.defaultOptions = {
  categories: [],
  replaceCategories: false,
  selectableStickers: null,
  tooltips: false,
  hideCategories: false,
  fixedRatio: true
};

exports.default = StickerControls;

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _spritesCanvasControlsComponent = __webpack_require__(69);

var _spritesCanvasControlsComponent2 = _interopRequireDefault(_spritesCanvasControlsComponent);

var _stickerControlsOverlayComponent = __webpack_require__(219);

var _stickerControlsOverlayComponent2 = _interopRequireDefault(_stickerControlsOverlayComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StickerCanvasControlsComponent = function (_SpritesCanvasControl) {
  (0, _inherits3.default)(StickerCanvasControlsComponent, _SpritesCanvasControl);

  function StickerCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, StickerCanvasControlsComponent);
    return (0, _possibleConstructorReturn3.default)(this, _SpritesCanvasControl.apply(this, arguments));
  }

  /**
   * This renders controls on top of the sprites
   * @return {ReactBEM.Element}
   * @private
   */
  StickerCanvasControlsComponent.prototype._renderOverlayControls = function _renderOverlayControls() {
    if (!this.getSharedState('selectedSprite')) return;

    return _globals.ReactBEM.createElement(_stickerControlsOverlayComponent2.default, {
      onFlip: this._onSpriteFlip,
      onTakeToFront: this._onSpriteTakeToFront,
      onRemove: this._onSpriteRemove });
  };

  return StickerCanvasControlsComponent;
}(_spritesCanvasControlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = StickerCanvasControlsComponent;


StickerCanvasControlsComponent.contextTypes = _spritesCanvasControlsComponent2.default.contextTypes;

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(42);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _categoryDropdownComponent = __webpack_require__(115);

var _categoryDropdownComponent2 = _interopRequireDefault(_categoryDropdownComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _stickerManager = __webpack_require__(122);

var _stickerManager2 = _interopRequireDefault(_stickerManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var StickerOverviewControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(StickerOverviewControlsComponent, _ControlsComponent);

  function StickerOverviewControlsComponent() {
    (0, _classCallCheck3.default)(this, StickerOverviewControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._bindAll('_onStickerMouseLeave', '_renderTooltipCanvas', '_onCategoryChange');

    _this._operation = _this.getSharedState('operation');
    _this._sprites = _this.getSharedState('sprites');
    _this._stickers = _this.getSharedState('stickers');

    _this._initStickerManager();

    _this.state = {
      category: 'all'
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user switches the category
   * @param  {Object} category
   * @private
   */


  StickerOverviewControlsComponent.prototype._onCategoryChange = function _onCategoryChange(category) {
    var _this2 = this;

    this.setState({ category: category.name }, function () {
      _this2._renderStickers();
      _this2.refs.scrollbar.update();
    });
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component is mounted
   */


  StickerOverviewControlsComponent.prototype.componentDidMount = function componentDidMount() {
    _ControlsComponent.prototype.componentDidMount.call(this);

    if (this.props.options.stickersJSONPath) {
      this._loadExternalStickers();
    } else {
      this._renderStickers();
    }

    var editor = this.context.editor;

    editor.zoom.set('auto', function () {
      editor.features.disable('zoom', 'drag');
    });
  };

  // -------------------------------------------------------------------------- EXTERNAL STICKER LOADING

  /**
   * Loads the stickers from an external JSON source
   * @private
   */


  StickerOverviewControlsComponent.prototype._loadExternalStickers = function _loadExternalStickers() {
    var _this3 = this;

    // Display loading modal after 100ms
    var loadingModal = null;
    var loadTimeout = setTimeout(function () {
      loadingModal = _modalManager2.default.instance.displayLoading(_this3._t('loading.loading'));
    }, 100);

    // Called when loading is done. Cancels the loading timeout
    // or closes the loadingModal in case it has been opened
    var doneLoading = function doneLoading() {
      if (loadTimeout) {
        clearTimeout(loadTimeout);
        loadTimeout = null;
      }
      if (loadingModal) loadingModal.close();
    };

    // Make sure not to show any stickers
    this._availableStickers = [];
    this.forceUpdate();

    var url = this.props.options.stickersJSONPath;
    _globals.Utils.getJSONP(url).then(function (result) {
      doneLoading();

      if (result.version === '1.0') {
        // Backwards compatibility for stickers.json version 1.0
        _this3._initStickers([{
          name: 'all',
          label: 'All',
          stickers: result.stickers
        }]);
      } else if (result.version === '1.1') {
        _this3._initStickers(result.categories);
      }

      _this3.forceUpdate(function () {
        _this3.refs.scrollbar.update();
        _this3._renderStickers();
      });
    }).catch(function (e) {
      doneLoading();

      var errorModal = _modalManager2.default.instance.displayError(_this3._t('errors.loadingStickersFailed.title'), e.message);
      errorModal.on('close', function () {
        _this3.props.onBack();
      });
    });
  };

  // -------------------------------------------------------------------------- STICKER RENDERING

  /**
   * Renders the stickers on the canvas preview elements
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderStickers = function _renderStickers() {
    var _this4 = this;

    var stickers = this._stickerManager.getStickersForCategory(this.state.category);
    stickers.forEach(function (sticker, i) {
      return _this4._renderSticker(i, sticker);
    });
  };

  /**
   * Renders the sticker on the tooltip canvas
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderTooltipCanvas = function _renderTooltipCanvas() {
    var _this5 = this;

    var hoveredSticker = this.state.hoveredSticker;

    var image = new window.Image();
    image.addEventListener('load', function () {
      if (!_this5.state.tooltipVisible || _this5.state.hoveredSticker !== hoveredSticker) {
        return;
      }

      var canvas = _this5.refs.tooltipCanvas;
      canvas.width = canvas.offsetWidth;
      canvas.height = canvas.offsetHeight;

      var context = canvas.getContext('2d');
      var scale = Math.min(canvas.width / image.width, canvas.height / image.height);
      var drawSize = new _globals.Vector2(image.width, image.height).multiply(scale);
      var drawPosition = new _globals.Vector2(canvas.width, canvas.height).divide(2).subtract(drawSize.clone().divide(2));

      context.drawImage(image, 0, 0, image.width, image.height, drawPosition.x, drawPosition.y, drawSize.x, drawSize.y);
    });

    var resolvedStickerPath = this._getAssetPath((hoveredSticker.images.mediaMedium || hoveredSticker.images.mediaBase).uri);
    image.src = resolvedStickerPath;
  };

  /**
   * Renders the given sticker on the canvas with the given index
   * @param  {Number} index
   * @param  {Object} sticker
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderSticker = function _renderSticker(index, sticker) {
    var editor = this.context.editor;

    var sdk = editor.getSDK();

    var resolvedStickerPath = this._getAssetPath(sticker.images.mediaThumb.uri);
    var canvas = this.refs['canvas-' + index];

    var pixelRatio = sdk.getPixelRatio();
    canvas.width = canvas.offsetWidth * pixelRatio;
    canvas.height = canvas.offsetHeight * pixelRatio;

    canvas.style.width = canvas.offsetWidth + 'px';
    canvas.style.height = canvas.offsetHeight + 'px';

    var context = canvas.getContext('2d');

    var image = new window.Image();
    image.addEventListener('load', function () {
      var scale = Math.min(canvas.width / image.width, canvas.height / image.height);
      var drawSize = new _globals.Vector2(image.width, image.height).multiply(scale);
      var drawPosition = new _globals.Vector2(canvas.width, canvas.height).divide(2).subtract(drawSize.clone().divide(2));

      context.drawImage(image, 0, 0, image.width, image.height, drawPosition.x, drawPosition.y, drawSize.x, drawSize.y);
    });
    image.src = resolvedStickerPath;
  };

  // -------------------------------------------------------------------------- STICKERS

  /**
   * Initializes the sticker manager
   * @private
   */


  StickerOverviewControlsComponent.prototype._initStickerManager = function _initStickerManager() {
    this._stickerManager = new _stickerManager2.default(this.props.options);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  StickerOverviewControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    this._backButtonClicked = true;
    this.props.onSwitchControls('home');
  };

  /**
   * Gets called when a sticker has been clicked
   * @param  {Object} sticker
   * @private
   */


  StickerOverviewControlsComponent.prototype._onStickerClick = function _onStickerClick(sticker) {
    var _this6 = this;

    var resolvedStickerPath = this._getAssetPath(sticker.images.mediaBase.uri);
    var image = new window.Image();

    var loadingModal = void 0;
    var loadTimeout = setTimeout(function () {
      loadingModal = _modalManager2.default.instance.displayLoading(_this6._t('loading.loading'));
    }, 100);

    image.addEventListener('load', function () {
      if (loadingModal) loadingModal.close();
      if (loadTimeout) {
        clearTimeout(loadTimeout);
        loadTimeout = null;
      }

      var editor = _this6.context.editor;


      var sprite = _this6._operation.createSticker({
        name: sticker.name,
        image: image,
        position: new _globals.Vector2(0.5, 0.5),
        dimensions: new _globals.Vector2(image.width, image.height),
        rotation: 0
      });
      _this6._operation.addSprite(sprite);
      _this6._stickers.push(sprite);

      editor.render(function () {
        // Broadcast new state
        _this6.setSharedState({
          selectedSprite: sprite,
          sprites: _this6._sprites,
          stickers: _this6._stickers
        });
      });
    });

    image.addEventListener('error', function () {
      if (loadingModal) loadingModal.close();
      if (loadTimeout) {
        clearTimeout(loadTimeout);
        loadTimeout = null;
      }

      _modalManager2.default.instance.displayError(_this6._t('errors.imageLoadFail.title'), _this6._t('errors.imageLoadFail.text', { path: image.src }));
    });

    image.crossOrigin = 'Anonymous';
    image.src = resolvedStickerPath;
  };

  /**
   * Gets called when the user starts hovering a sticker
   * @param  {String} stickerPath
   * @param  {Event} e
   * @private
   */


  StickerOverviewControlsComponent.prototype._onStickerMouseEnter = function _onStickerMouseEnter(stickerPath, e) {
    var _this7 = this;

    this.setState({
      tooltipVisible: true,
      hoveredSticker: stickerPath,
      hoveredStickerElement: e.currentTarget
    }, function () {
      _this7._renderTooltipCanvas();
      _this7._updateTooltipPosition();
    });
  };

  /**
   * Updates the tooltip position to match the currently hovered
   * sticker's position
   * @private
   */


  StickerOverviewControlsComponent.prototype._updateTooltipPosition = function _updateTooltipPosition() {
    var el = this.state.hoveredStickerElement;
    var parent = el.parentNode;
    var boundingRect = el.getBoundingClientRect();
    var parentBoundingRect = parent.getBoundingClientRect();

    this.setState({
      tooltipPosition: boundingRect.left - parentBoundingRect.left + boundingRect.width * 0.5
    });
  };

  /**
   * Gets called when the user does no longer hover a sticker
   * @private
   */


  StickerOverviewControlsComponent.prototype._onStickerMouseLeave = function _onStickerMouseLeave() {
    this.setState({
      tooltipVisible: false,
      hoveredSticker: null
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the list items for this control
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderListItems = function _renderListItems() {
    var _this8 = this;

    var stickers = this._stickerManager.getStickersForCategory(this.state.category);
    return stickers.map(function (sticker, i) {
      var options = _this8.props.options;


      var itemEvents = options.tooltips ? {
        onMouseEnter: _this8._onStickerMouseEnter.bind(_this8, sticker),
        onMouseLeave: _this8._onStickerMouseLeave
      } : null;

      return _globals.ReactBEM.createElement(
        'li',
        (0, _extends3.default)({
          bem: '$b:stickersControls $e:item',
          key: sticker.name,
          onClick: _this8._onStickerClick.bind(_this8, sticker)
        }, itemEvents),
        _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'canvas-' + i })
      );
    });
  };

  /**
   * Renders the tooltip (if present)
   * @return {ReactBEM.Element}
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderTooltip = function _renderTooltip() {
    var tooltipVisible = this.props.options.tooltips && this.state.tooltipVisible;

    var style = {
      left: this.state.tooltipPosition
    };

    return tooltipVisible ? _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:empty' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:stickersControls $e:tooltip',
          visible: this.state.tooltipVisible,
          style: style },
        _globals.ReactBEM.createElement('canvas', { bem: 'e:canvas', ref: 'tooltipCanvas' })
      )
    ) : null;
  };

  /**
   * Renders the category dropdown (if present)
   * @return {ReactBEM.Element}
   * @private
   */


  StickerOverviewControlsComponent.prototype._renderCategoryDropdown = function _renderCategoryDropdown() {
    var _this9 = this;

    var categories = this._stickerManager.getCategories();
    var categoryDropdownVisible = !this.props.options.hideCategories && categories.length > 1;
    if (!categoryDropdownVisible) {
      return null;
    }

    var categoryItems = categories.map(function (c) {
      return {
        name: c.name,
        label: _this9._t('controls.sticker.categories.' + c.name),
        icon: _this9._getAssetPath('controls/stickers/categories/' + c.name + '.png', true)
      };
    });
    var selectedCategory = {
      name: this.state.category,
      label: this._t('controls.sticker.categories.' + this.state.category),
      icon: this._getAssetPath('controls/stickers/categories/' + this.state.category + '.png', true)
    };

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:categoryDropdown' },
      _globals.ReactBEM.createElement(_categoryDropdownComponent2.default, {
        items: categoryItems,
        selectedItem: selectedCategory,
        onChange: this._onCategoryChange })
    );
  };

  /**
   * Renders the controls of this component
   * @return {ReactBEM.Element}
   */


  StickerOverviewControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = this._renderListItems();
    var tooltip = this._renderTooltip();
    var categoryDropdown = this._renderCategoryDropdown();

    return [tooltip, categoryDropdown, _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        { ref: 'scrollbar' },
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    )];
  };

  return StickerOverviewControlsComponent;
}(_controlsComponent2.default);

exports.default = StickerOverviewControlsComponent;


StickerOverviewControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var StickerControlsOverlayComponent = function (_BaseComponent) {
  (0, _inherits3.default)(StickerControlsOverlayComponent, _BaseComponent);

  function StickerControlsOverlayComponent() {
    (0, _classCallCheck3.default)(this, StickerControlsOverlayComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks one of the flip items
   * @param  {String} direction
   * @param  {Event} e
   * @private
   */
  StickerControlsOverlayComponent.prototype._onFlipClick = function _onFlipClick(direction, e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onFlip && this.props.onFlip(direction);
  };

  /**
   * Gets called when the user clicks the `take to front` item
   * @param  {Event} e
   * @private
   */


  StickerControlsOverlayComponent.prototype._onTakeToFrontClick = function _onTakeToFrontClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onTakeToFront && this.props.onTakeToFront();
  };

  /**
   * Gets called when the user clicks the `remove` item
   * @param  {Event} e
   * @private
   */


  StickerControlsOverlayComponent.prototype._onRemoveClick = function _onRemoveClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onRemove && this.props.onRemove();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the items of this component
   * @return {Array.<ReactBEM.Element>}
   */


  StickerControlsOverlayComponent.prototype._renderItems = function _renderItems() {
    return [_globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onFlipClick.bind(this, 'h') },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/flip-h.png', true) })
    ), _globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onFlipClick.bind(this, 'v') },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/flip-v.png', true) })
    ), _globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onTakeToFrontClick.bind(this) },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/take-to-front.png', true) })
    ), _globals.ReactBEM.createElement('div', { bem: '$e:separator' }), _globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onRemoveClick.bind(this) },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/remove.png', true) })
    )];
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  StickerControlsOverlayComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      {
        bem: '$b:spritesControlsOverlay' },
      this._renderItems()
    );
  };

  return StickerControlsOverlayComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = StickerControlsOverlayComponent;


StickerControlsOverlayComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _fontPreviewComponent = __webpack_require__(117);

var _fontPreviewComponent2 = _interopRequireDefault(_fontPreviewComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var FontComponent = function (_BaseComponent) {
  (0, _inherits3.default)(FontComponent, _BaseComponent);

  function FontComponent() {
    (0, _classCallCheck3.default)(this, FontComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks one one of the list items
   * @param  {Object} font
   * @param  {Event} e
   * @private
   */
  FontComponent.prototype._onListItemClick = function _onListItemClick(font, e) {
    this.props.onChange && this.props.onChange(font);
  };

  // -------------------------------------------------------------------------- LIST ITEMS

  /**
   * Renders the list items
   * @return {Array.<ReactBEM.Element>}
   * @private
   */


  FontComponent.prototype._renderListItems = function _renderListItems() {
    var _this2 = this;

    var fonts = this.props.fonts;


    return fonts.map(function (font, i) {
      var isSelected = _this2.props.fontFamily === font.fontFamily && _this2.props.fontWeight === font.fontWeight;
      var className = isSelected ? 'is-active' : null;

      return _globals.ReactBEM.createElement(
        'li',
        {
          bem: 'e:item',
          key: i,
          className: className,
          onClick: _this2._onListItemClick.bind(_this2, font) },
        _globals.ReactBEM.createElement(_fontPreviewComponent2.default, {
          fontFamily: font.fontFamily,
          fontWeight: font.fontWeight }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          font.fontFamily
        )
      );
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  FontComponent.prototype.renderWithBEM = function renderWithBEM() {
    var listItems = this._renderListItems();

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:controls e:overlay m:dark' },
      _globals.ReactBEM.createElement(
        'ul',
        { bem: '$b:fontFamily e:list' },
        listItems
      )
    );
  };

  return FontComponent;
}(_globals.BaseComponent);

exports.default = FontComponent;


FontComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

var _textCanvasControlsComponent = __webpack_require__(222);

var _textCanvasControlsComponent2 = _interopRequireDefault(_textCanvasControlsComponent);

var _textControlsComponent = __webpack_require__(223);

var _textControlsComponent2 = _interopRequireDefault(_textControlsComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Text = _globals.SDK.Operations.SpriteOperation.Text; /*
                                                          * This file is part of PhotoEditorSDK.
                                                          *
                                                          * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                                                          * All rights reserved.
                                                          *
                                                          * Redistribution and use in source and binary forms, without
                                                          * modification, are permitted provided that the following license agreement
                                                          * is approved and a legal/financial contract was signed by the user.
                                                          * The license agreement can be found under following link:
                                                          *
                                                          * https://www.photoeditorsdk.com/LICENSE.txt
                                                          */

/**
 * The text controls
 * @class
 * @extends PhotoEditorSDK.UI.ReactUI.Control
 * @memberof PhotoEditorSDK.UI.ReactUI.Controls
 */
var TextControls = function (_Controls) {
  (0, _inherits3.default)(TextControls, _Controls);

  function TextControls() {
    (0, _classCallCheck3.default)(this, TextControls);
    return (0, _possibleConstructorReturn3.default)(this, _Controls.apply(this, arguments));
  }

  /**
   * Gets called when the user leaves these controls
   * @this {StickersControlsComponent}
   * @ignore
   */
  TextControls.onExit = function onExit() {
    var editor = this.context.editor;

    var operation = this.getSharedState('operation');

    editor.history.add(operation, this.getSharedState('initialOptions'), this.getSharedState('operationExistedBefore'));

    operation.setEnabled(true);

    editor.zoom.undo();
    editor.features.enable('zoom', 'drag');
    editor.render();
  };

  /**
   * Gets called when the user enters these controls
   * @this {StickerControlsComponent}
   * @param {SharedState} sharedState
   * @override
   * @ignore
   */


  TextControls.onEnter = function onEnter(sharedState) {
    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();
    var operationExistedBefore = editor.operations.exists('sprite');
    var operation = editor.operations.getOrCreate('sprite');
    var sprites = operation.getSprites();
    var initialOptions = operation.serializeOptions();
    var selectedSprite = this.getSharedState('selectedSprite');

    var _TextControls$initFon = TextControls.initFonts(this.context);

    var fonts = _TextControls$initFon.fonts;
    var defaultFont = _TextControls$initFon.defaultFont;


    if (!selectedSprite) {
      var sdk = editor.getSDK();
      var renderer = sdk.getRenderer();

      var maxTextureSize = renderer.getMaxTextureSize();
      var text = operation.createText({
        text: _globals.Constants.DEFAULTS.TEXT,
        position: new _globals.Vector2(0.5, 0.5),
        maxWidth: 0.5,
        maxHeight: maxTextureSize ? maxTextureSize / outputDimensions.y : 3,
        fontSize: 0.08,
        fontFamily: defaultFont.fontFamily,
        fontWeight: defaultFont.fontWeight,
        alignment: 'center'
      });
      operation.addSprite(text);
      selectedSprite = text;
    }

    this.setSharedState({
      operationExistedBefore: operationExistedBefore, operation: operation, sprites: sprites, initialOptions: initialOptions, selectedSprite: selectedSprite, fonts: fonts
    });

    operation.setEnabled(false);
    editor.render();
  };

  /**
   * Initializes the available fonts
   * @param  {Object} context
   * @return {Object}
   */


  TextControls.initFonts = function initFonts(context) {
    var options = context.options.editor.controlsOptions.text || {};
    var additionalFonts = options.additionalFonts;
    var replaceFonts = options.replaceFonts;
    var selectableFonts = options.selectableFonts;

    additionalFonts = additionalFonts || [];

    var fonts = _globals.Constants.DEFAULTS.FONTS;
    if (replaceFonts) {
      fonts = additionalFonts;
    } else {
      fonts = fonts.concat(additionalFonts);
    }

    if (selectableFonts && selectableFonts.length) {
      fonts = _globals.Utils.select(fonts, selectableFonts, function (r) {
        return r.name;
      });
    }

    var defaultFont = null;
    fonts.forEach(function (font) {
      if (!defaultFont && font.default) {
        defaultFont = font;
      }
    });

    if (!defaultFont) {
      defaultFont = fonts[0];
    }

    return { fonts: fonts, defaultFont: defaultFont };
  };

  /**
   * Checks if there is something at the given position that
   * would cause the UI to switch to this control on click
   * @param  {PhotoEditorSDK.Math.Vector2} position
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {*}
   * @ignore
   */


  TextControls.clickAtPosition = function clickAtPosition(position, editor) {
    if (!editor.operations.exists('sprite')) return false;

    var operation = editor.operations.getOrCreate('sprite');
    var sprites = operation.getSpritesAtPosition(position, editor.getOutputDimensions()).filter(function (s) {
      return s instanceof Text;
    });

    if (sprites.length) {
      return { selectedSprite: sprites[0] };
    } else {
      return false;
    }
  };

  /**
   * Checks if this control is available to the user
   * @param  {PhotoEditorSDK.UI.ReactUI.Editor} editor
   * @return {Boolean}
   * @ignore
   */


  TextControls.isAvailable = function isAvailable(editor) {
    return editor.isToolEnabled('text');
  };

  return TextControls;
}(_controls2.default);

/**
 * This control's controls component. Used for the lower controls part of the editor.
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */


TextControls.controlsComponent = _textControlsComponent2.default;

/**
 * This control's canvas component. Used for the upper controls part of the editor (on
 * top of the canvas)
 * @type {PhotoEditorSDK.UI.ReactUI.ControlsComponent}
 * @ignore
 */
TextControls.canvasControlsComponent = _textCanvasControlsComponent2.default;

/**
 * This control's identifier
 * @type {String}
 * @default
 */
TextControls.identifier = 'text';

/**
 * This control's icon path
 * @type {String}
 * @ignore
 */
TextControls.iconPath = 'controls/overview/text.png';

/**
 * The language key that should be used when displaying this filter
 * @type {String}
 * @ignore
 */
TextControls.languageKey = 'controls.overview.text';

/**
 * The default options for this control
 * @type {Object}
 * @property {Object[]} [additionalFonts = []]
 * @property {Boolean} [replaceFonts = false]
 * @property {String[]} [availableFonts = null]
 */
TextControls.defaultOptions = {
  additionalFonts: [],
  replaceFonts: false,
  availableFonts: null
};

exports.default = TextControls;

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _spritesCanvasControlsComponent = __webpack_require__(69);

var _spritesCanvasControlsComponent2 = _interopRequireDefault(_spritesCanvasControlsComponent);

var _textControlsOverlayComponent = __webpack_require__(224);

var _textControlsOverlayComponent2 = _interopRequireDefault(_textControlsOverlayComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextCanvasControlsComponent = function (_SpritesCanvasControl) {
  (0, _inherits3.default)(TextCanvasControlsComponent, _SpritesCanvasControl);

  function TextCanvasControlsComponent() {
    (0, _classCallCheck3.default)(this, TextCanvasControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _SpritesCanvasControl.call.apply(_SpritesCanvasControl, [this].concat(args)));

    _this._bindAll('_onTextEdit');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the selected item is deselected
   * @private
   */


  TextCanvasControlsComponent.prototype._onItemBlur = function _onItemBlur() {
    var sprite = this.getSharedState('selectedSprite');
    if (sprite && sprite.getText() === '') {
      sprite.setText(_globals.Constants.DEFAULTS.TEXT);
      sprite._edited = false;
    }
  };

  /**
   * Gets called when the user removes the selected sprite
   * @private
   */


  TextCanvasControlsComponent.prototype._onSpriteRemove = function _onSpriteRemove() {
    _SpritesCanvasControl.prototype._onSpriteRemove.call(this);
    this.props.onSwitchControls('home');
  };

  /**
   * Gets called when the clicks the edit button
   * @private
   */


  TextCanvasControlsComponent.prototype._onTextEdit = function _onTextEdit() {
    var sprite = this.getSharedState('selectedSprite');
    this.refs['sprite-' + sprite.getId()].enterEditMode();
  };

  /**
   * This renders controls on top of the sprites
   * @return {ReactBEM.Element}
   * @private
   */


  TextCanvasControlsComponent.prototype._renderOverlayControls = function _renderOverlayControls() {
    if (!this.getSharedState('selectedSprite')) return;

    return _globals.ReactBEM.createElement(_textControlsOverlayComponent2.default, {
      onTakeToFront: this._onSpriteTakeToFront,
      onRemove: this._onSpriteRemove,
      onEdit: this._onTextEdit });
  };

  return TextCanvasControlsComponent;
}(_spritesCanvasControlsComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = TextCanvasControlsComponent;


TextCanvasControlsComponent.contextTypes = _spritesCanvasControlsComponent2.default.contextTypes;

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _colorPickerComponent = __webpack_require__(67);

var _colorPickerComponent2 = _interopRequireDefault(_colorPickerComponent);

var _sliderOverlayComponent = __webpack_require__(54);

var _sliderOverlayComponent2 = _interopRequireDefault(_sliderOverlayComponent);

var _fontPreviewComponent = __webpack_require__(117);

var _fontPreviewComponent2 = _interopRequireDefault(_fontPreviewComponent);

var _fontComponent = __webpack_require__(220);

var _fontComponent2 = _interopRequireDefault(_fontComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var ALIGNMENTS = ['left', 'center', 'right'];

var TextControlsComponent = function (_ControlsComponent) {
  (0, _inherits3.default)(TextControlsComponent, _ControlsComponent);

  function TextControlsComponent() {
    (0, _classCallCheck3.default)(this, TextControlsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ControlsComponent.call.apply(_ControlsComponent, [this].concat(args)));

    _this._bindAll('_onFontSizeChange', '_onFontChange', '_onAlignmentClick', '_onTakeToFrontClick', '_onForegroundColorChange', '_onBackgroundColorChange');
    _this._operation = _this.getSharedState('operation');

    _this.state = { mode: null };

    var editor = _this.context.editor;

    editor.render();

    _this._fonts = _this.getSharedState('fonts');
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  TextControlsComponent.prototype.componentDidMount = function componentDidMount() {
    _ControlsComponent.prototype.componentDidMount.call(this);

    var editor = this.context.editor;

    editor.zoom.set('auto', function () {
      editor.features.disable('zoom', 'drag');
    });
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the back button
   * @param {Event} e
   * @private
   */


  TextControlsComponent.prototype._onBackClick = function _onBackClick(e) {
    var editor = this.context.editor;

    editor.render();
    this._backButtonClicked = true;
    this.props.onSwitchControls('home');
  };

  /**
   * Gets called when the shared state has changed
   * @param  {Object} newState
   */


  TextControlsComponent.prototype.sharedStateDidChange = function sharedStateDidChange(newState) {
    if ('selectedSprite' in newState) {
      this.forceUpdate();
    }
  };

  /**
   * Gets called when the font size has been changed
   * @param  {Number} fontSize
   * @private
   */


  TextControlsComponent.prototype._onFontSizeChange = function _onFontSizeChange(fontSize) {
    var outputDimensions = this.context.editor.getOutputDimensions();
    var selectedText = this.getSharedState('selectedSprite');
    selectedText.setFontSize(fontSize / outputDimensions.y);
    this.forceUpdate();
  };

  /**
   * Gets called when the font family or weight has been changed
   * @param  {Object} font
   * @private
   */


  TextControlsComponent.prototype._onFontChange = function _onFontChange(font) {
    var selectedText = this.getSharedState('selectedSprite');
    selectedText.setFontFamily(font.fontFamily);
    selectedText.setFontWeight(font.fontWeight);
    this.forceUpdate();
  };

  /**
   * Gets called when the user clicks the alignment button
   * @param  {Event} e
   * @private
   */


  TextControlsComponent.prototype._onAlignmentClick = function _onAlignmentClick(e) {
    var selectedText = this.getSharedState('selectedSprite');
    var alignment = selectedText.getAlignment();

    var currentIndex = ALIGNMENTS.indexOf(alignment);
    var nextIndex = (currentIndex + 1) % ALIGNMENTS.length;
    var newAlignment = ALIGNMENTS[nextIndex];

    selectedText.setAlignment(newAlignment);
    this.forceSharedUpdate();
  };

  /**
   * Gets called when the user clicks the "take to front" button
   * @param  {Event} e
   * @private
   */


  TextControlsComponent.prototype._onTakeToFrontClick = function _onTakeToFrontClick(e) {
    var operation = this.getSharedState('operation');
    operation.takeSpriteToFront(this.getSharedState('selectedSprite'));
    this.forceSharedUpdate();
  };

  /**
   * Gets called when the user changes the foreground color
   * @param  {Color} color
   * @private
   */


  TextControlsComponent.prototype._onForegroundColorChange = function _onForegroundColorChange(color) {
    var selectedText = this.getSharedState('selectedSprite');
    selectedText.setColor(color);
  };

  /**
   * Gets called when the user changes the background color
   * @param  {Color} color
   * @private
   */


  TextControlsComponent.prototype._onBackgroundColorChange = function _onBackgroundColorChange(color) {
    var selectedText = this.getSharedState('selectedSprite');
    selectedText.setBackgroundColor(color);
  };

  // -------------------------------------------------------------------------- MODES

  /**
   * Switches to the given mode
   * @param  {String} mode
   * @private
   */


  TextControlsComponent.prototype._switchToMode = function _switchToMode(mode) {
    if (mode === this.state.mode) mode = null;

    this.setState({ mode: mode });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the overlay controls of this component
   * @return {ReactBEM.Element}
   */


  TextControlsComponent.prototype.renderOverlayControls = function renderOverlayControls() {
    switch (this.state.mode) {
      case 'size':
        return this._renderFontSizeOverlayControl();
      case 'font':
        return this._renderFontFamilyOverlayControl();
      default:
        return null;
    }
  };

  // -------------------------------------------------------------------------- FONT SIZE

  /**
   * Renders the font size overlay control (slider)
   * @return {ReactBEM.Element}
   * @private
   */


  TextControlsComponent.prototype._renderFontSizeOverlayControl = function _renderFontSizeOverlayControl() {
    var selectedText = this.getSharedState('selectedSprite');
    if (!selectedText) return;

    var editor = this.context.editor;

    var outputDimensions = editor.getOutputDimensions();

    var maxFontSize = Math.round(outputDimensions.y);
    var fontSize = Math.round(selectedText.getFontSize() * outputDimensions.y);
    return _globals.ReactBEM.createElement(_sliderOverlayComponent2.default, {
      value: fontSize,
      maxValue: maxFontSize,
      label: this._t('controls.text.size'),
      onChange: this._onFontSizeChange });
  };

  /**
   * Renders the font size list item
   * @return {Component}
   * @private
   */


  TextControlsComponent.prototype._renderSizeItem = function _renderSizeItem() {
    var selectedText = this.getSharedState('selectedSprite');
    if (!selectedText) return;

    var outputDimensions = this.context.editor.getOutputDimensions();

    var fontSize = selectedText.getFontSize();
    var className = this.state.mode === 'size' ? 'is-active' : null;

    return _globals.ReactBEM.createElement(
      'li',
      {
        bem: 'e:item',
        key: 'size' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: '$b:controls' },
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: '$e:button m:withLabel',
            className: className,
            onClick: this._switchToMode.bind(this, 'size') },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'b:fontSize e:text' },
            Math.round(fontSize * outputDimensions.y)
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:label' },
            this._t('controls.text.size')
          )
        )
      )
    );
  };

  // -------------------------------------------------------------------------- FONT FAMILY

  /**
   * Renders the font family overlay control
   * @return {ReactBEM.Element}
   * @private
   */


  TextControlsComponent.prototype._renderFontFamilyOverlayControl = function _renderFontFamilyOverlayControl() {
    var selectedText = this.getSharedState('selectedSprite');
    if (!selectedText) return;

    return _globals.ReactBEM.createElement(_fontComponent2.default, {
      fontFamily: selectedText.getFontFamily(),
      fontWeight: selectedText.getFontWeight(),
      fonts: this._fonts,
      onChange: this._onFontChange });
  };

  /**
   * Renders the font list item
   * @return {Component}
   * @private
   */


  TextControlsComponent.prototype._renderFontItem = function _renderFontItem() {
    var selectedText = this.getSharedState('selectedSprite');
    if (!selectedText) return;

    var className = this.state.mode === 'font' ? 'is-active' : null;
    return _globals.ReactBEM.createElement(
      'li',
      {
        bem: 'e:item',
        key: 'font' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: '$b:controls' },
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: '$e:button m:withLabel',
            className: className,
            'data-identifier': 'font',
            onClick: this._switchToMode.bind(this, 'font') },
          _globals.ReactBEM.createElement(_fontPreviewComponent2.default, {
            fontFamily: selectedText.getFontFamily(),
            fontWeight: selectedText.getFontWeight() }),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:label' },
            this._t('controls.text.font')
          )
        )
      )
    );
  };

  // -------------------------------------------------------------------------- ALIGNMENT

  /**
   * Renders the text alignment list item
   * @return {Component}
   * @private
   */


  TextControlsComponent.prototype._renderAlignmentItem = function _renderAlignmentItem() {
    var selectedText = this.getSharedState('selectedSprite');
    if (!selectedText) return;

    var alignment = selectedText.getAlignment();

    return _globals.ReactBEM.createElement(
      'li',
      {
        bem: 'e:item',
        key: 'alignment' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: '$b:controls' },
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: '$e:button m:withLabel',
            onClick: this._onAlignmentClick },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/text/align_' + alignment + '.png', true) }),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:label' },
            this._t('controls.text.alignment')
          )
        )
      )
    );
  };

  /**
   * Renders the "take to front" list item
   * @return {Component}
   * @private
   */


  TextControlsComponent.prototype._renderTakeToFrontItem = function _renderTakeToFrontItem() {
    return _globals.ReactBEM.createElement(
      'li',
      {
        bem: 'e:item',
        key: 'takeToFront' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: '$b:controls' },
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: '$e:button m:withLabel',
            onClick: this._onTakeToFrontClick },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/take_to_front.png', true) }),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:label' },
            this._t('controls.text.takeToFront')
          )
        )
      )
    );
  };

  /**
   * Renders this component
   * @return {Array.<ReactBEM.Element>}
   */


  TextControlsComponent.prototype.renderControls = function renderControls() {
    var listItems = [this._renderSizeItem(), this._renderFontItem(), this._renderAlignmentItem()];

    var selectedText = this.getSharedState('selectedSprite');

    var foregroundColor = selectedText.getColor().clone();
    var backgroundColor = selectedText.getBackgroundColor().clone();

    return [_globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:list' },
      _globals.ReactBEM.createElement(
        _scrollbarComponent2.default,
        { ref: 'scrollbar' },
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:list' },
          listItems
        )
      )
    ), _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:colorPicker' },
      _globals.ReactBEM.createElement(_colorPickerComponent2.default, {
        initialValue: foregroundColor,
        label: this._t('controls.text.foreground'),
        onChange: this._onForegroundColorChange })
    ), _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:cell m:colorPicker' },
      _globals.ReactBEM.createElement(_colorPickerComponent2.default, {
        initialValue: backgroundColor,
        label: this._t('controls.text.background'),
        onChange: this._onBackgroundColorChange })
    )];
  };

  return TextControlsComponent;
}(_controlsComponent2.default);

exports.default = TextControlsComponent;


TextControlsComponent.contextTypes = _controlsComponent2.default.contextTypes;

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextControlsOverlayComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TextControlsOverlayComponent, _BaseComponent);

  function TextControlsOverlayComponent() {
    (0, _classCallCheck3.default)(this, TextControlsOverlayComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the `edit` item
   * @param  {Event} e
   * @private
   */
  TextControlsOverlayComponent.prototype._onEditClick = function _onEditClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onEdit && this.props.onEdit();
  };

  /**
   * Gets called when the user clicks the `take to front` item
   * @param  {Event} e
   * @private
   */


  TextControlsOverlayComponent.prototype._onTakeToFrontClick = function _onTakeToFrontClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onTakeToFront && this.props.onTakeToFront();
  };

  /**
   * Gets called when the user clicks the `remove` item
   * @param  {Event} e
   * @private
   */


  TextControlsOverlayComponent.prototype._onRemoveClick = function _onRemoveClick(e) {
    e.preventDefault();
    e.stopPropagation();

    this.props.onRemove && this.props.onRemove();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the items of this component
   * @return {Array.<ReactBEM.Element>}
   */


  TextControlsOverlayComponent.prototype._renderItems = function _renderItems() {
    var items = [_globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onTakeToFrontClick.bind(this) },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/take-to-front.png', true) })
    )];

    if (_globals.Utils.isMobile()) {
      items = items.concat([_globals.ReactBEM.createElement('div', { bem: '$e:separator' }), _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:item', onClick: this._onEditClick.bind(this) },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/edit.png', true) })
      )]);
    }

    items = items.concat([_globals.ReactBEM.createElement('div', { bem: '$e:separator' }), _globals.ReactBEM.createElement(
      'div',
      { bem: '$e:item', onClick: this._onRemoveClick.bind(this) },
      _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/sprites/remove.png', true) })
    )]);

    return items;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  TextControlsOverlayComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      {
        bem: '$b:spritesControlsOverlay' },
      this._renderItems()
    );
  };

  return TextControlsOverlayComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TextControlsOverlayComponent;


TextControlsOverlayComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DoneButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(DoneButtonComponent, _BaseComponent);

  function DoneButtonComponent() {
    (0, _classCallCheck3.default)(this, DoneButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  DoneButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:controls' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell m:largeButton' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: '$e:largeButton', onClick: this.props.onClick },
          _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/tick.png', true) })
        )
      )
    );
  };

  return DoneButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = DoneButtonComponent;


DoneButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HeaderComponent = function (_BaseComponent) {
  (0, _inherits3.default)(HeaderComponent, _BaseComponent);

  function HeaderComponent() {
    (0, _classCallCheck3.default)(this, HeaderComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onCloseClick');
    return _this;
  }

  /**
   * Gets called when the user clicks the close button
   * @private
   */


  HeaderComponent.prototype._onCloseClick = function _onCloseClick() {
    this.context.mediator.emit(_globals.Constants.EVENTS.CLOSE);
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  HeaderComponent.prototype.renderWithBEM = function renderWithBEM() {
    var closeButton = void 0;
    if (this.context.options.showCloseButton) {
      closeButton = _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:close', onClick: this._onCloseClick },
        _globals.ReactBEM.createElement('img', { bem: 'e:image', src: this._getAssetPath('close.png', true) })
      );
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:header' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:label' },
        this.context.options.title
      ),
      closeButton
    );
  };

  return HeaderComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = HeaderComponent;


HeaderComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _loadingModalComponent = __webpack_require__(229);

var _loadingModalComponent2 = _interopRequireDefault(_loadingModalComponent);

var _warningModalComponent = __webpack_require__(231);

var _warningModalComponent2 = _interopRequireDefault(_warningModalComponent);

var _errorModalComponent = __webpack_require__(228);

var _errorModalComponent2 = _interopRequireDefault(_errorModalComponent);

var _progressModalComponent = __webpack_require__(230);

var _progressModalComponent2 = _interopRequireDefault(_progressModalComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModalContainerComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ModalContainerComponent, _BaseComponent);

  function ModalContainerComponent() {
    (0, _classCallCheck3.default)(this, ModalContainerComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._modalManager = _this.props.modalManager;
    _this._bindAll('_onModalManagerUpdate');
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  ModalContainerComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);

    this._modalManager.on('update', this._onModalManagerUpdate);
  };

  /**
   * Gets called when this component is about to be unmounted
   */


  ModalContainerComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _BaseComponent.prototype.componentWillUnmount.call(this);

    this._modalManager.off('update', this._onModalManagerUpdate);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the modal manager updates
   * @private
   */


  ModalContainerComponent.prototype._onModalManagerUpdate = function _onModalManagerUpdate() {
    this.forceUpdate();
  };

  /**
   * Gets called when a modal is closed. Removes it from the manager.
   * @param  {Modal} modal
   * @private
   */


  ModalContainerComponent.prototype._onModalClosed = function _onModalClosed(modal) {
    this._modalManager.removeModal(modal);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the modals
   * @return {Array.<React.Component>}
   */


  ModalContainerComponent.prototype._renderModals = function _renderModals() {
    var _this2 = this;

    var modals = this._modalManager.getModals();
    return modals.map(function (modal) {
      var ModalComponent = void 0;

      switch (modal.type) {
        case 'loading':
          ModalComponent = _loadingModalComponent2.default;
          break;
        case 'warning':
          ModalComponent = _warningModalComponent2.default;
          break;
        case 'error':
          ModalComponent = _errorModalComponent2.default;
          break;
        case 'progress':
          ModalComponent = _progressModalComponent2.default;
          break;
      }

      return _globals.ReactBEM.createElement(ModalComponent, {
        modal: modal,
        onClose: _this2._onModalClosed.bind(_this2, modal) });
    });
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ModalContainerComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      null,
      this._renderModals()
    );
  };

  return ModalContainerComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ModalContainerComponent;


ModalContainerComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ErrorModalComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ErrorModalComponent, _BaseComponent);

  function ErrorModalComponent() {
    (0, _classCallCheck3.default)(this, ErrorModalComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onClose');
    return _this;
  }

  /**
   * Gets called when the user clicks the close button
   * @private
   */


  ErrorModalComponent.prototype._onClose = function _onClose() {
    this.props.modal.close();
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  ErrorModalComponent.prototype.renderWithBEM = function renderWithBEM() {
    var modal = this.props.modal;

    var modalElement = _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:modal m:error' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:title' },
        modal.title
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:text' },
        modal.text
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:button b:button m:inline', onClick: this._onClose },
        'OK'
      )
    );

    var content = modal.overlay ? _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:overlay' },
      modalElement
    ) : modalElement;

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:modals' },
      content
    );
  };

  return ErrorModalComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ErrorModalComponent;


ErrorModalComponent.propTypes = {
  modal: _globals.React.PropTypes.object
};

ErrorModalComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LoadingModalComponent = function (_BaseComponent) {
  (0, _inherits3.default)(LoadingModalComponent, _BaseComponent);

  function LoadingModalComponent() {
    (0, _classCallCheck3.default)(this, LoadingModalComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  LoadingModalComponent.prototype.renderWithBEM = function renderWithBEM() {
    var modal = this.props.modal;
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:modals' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:overlay' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:modal m:loading' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:text' },
            modal.text
          )
        )
      )
    );
  };

  return LoadingModalComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = LoadingModalComponent;


LoadingModalComponent.propTypes = {
  modal: _globals.React.PropTypes.object
};

LoadingModalComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProgressModalComponent = function (_BaseComponent) {
  (0, _inherits3.default)(ProgressModalComponent, _BaseComponent);

  function ProgressModalComponent() {
    (0, _classCallCheck3.default)(this, ProgressModalComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  ProgressModalComponent.prototype.renderWithBEM = function renderWithBEM() {
    var modal = this.props.modal;
    var progress = modal.data.progress;

    var progressStyle = {
      width: ((progress || 0) * 100).toFixed(2) + '%'
    };
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:modals' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:overlay' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:modal m:loading' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:text' },
            modal.text
          ),
          _globals.ReactBEM.createElement(
            'bem',
            { specifier: 'b:loadingModal' },
            _globals.ReactBEM.createElement(
              'div',
              { bem: '$e:progressBar' },
              _globals.ReactBEM.createElement('div', { bem: 'e:progress', style: progressStyle })
            )
          )
        )
      )
    );
  };

  return ProgressModalComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = ProgressModalComponent;


ProgressModalComponent.propTypes = {
  modal: _globals.React.PropTypes.object
};

ProgressModalComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var WarningModalComponent = function (_BaseComponent) {
  (0, _inherits3.default)(WarningModalComponent, _BaseComponent);

  function WarningModalComponent() {
    (0, _classCallCheck3.default)(this, WarningModalComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  WarningModalComponent.prototype.renderWithBEM = function renderWithBEM() {
    var modal = this.props.modal;
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:modals' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:modal m:warning' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:title' },
          modal.title
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:text' },
          modal.text
        ),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:button b:button m:inline', onClick: this.props.onClose },
          'OK'
        )
      )
    );
  };

  return WarningModalComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = WarningModalComponent;


WarningModalComponent.propTypes = {
  modal: _globals.React.PropTypes.object
};

WarningModalComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = __webpack_require__(13);

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CanvasComponent = function (_BaseComponent) {
  (0, _inherits3.default)(CanvasComponent, _BaseComponent);

  function CanvasComponent() {
    var _this$_events;

    (0, _classCallCheck3.default)(this, CanvasComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onDragStart', '_onDragMove', '_onDragEnd', '_onWindowResize', '_onFeaturesUpdated');

    _this._events = (_this$_events = {}, (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.WINDOW_RESIZE, _this._onWindowResize), (0, _defineProperty3.default)(_this$_events, _globals.Constants.EVENTS.FEATURES_UPDATED, _this._onFeaturesUpdated), _this$_events);

    _this._initialRenderDone = false;

    _this.state = {
      canvasPosition: new _globals.Vector2(),
      canvasOffset: new _globals.Vector2()
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called after the window has been resized
   * @private
   */


  CanvasComponent.prototype._onWindowResize = function _onWindowResize() {
    var editor = this.context.editor;

    var sdk = editor.getSDK();
    sdk.resizeTo(this._getContainerDimensions());
    editor.zoom.set('auto');
  };

  /**
   * Gets called when features (e.g. drag) are updated
   * @param {String[]} identifiers
   * @private
   */


  CanvasComponent.prototype._onFeaturesUpdated = function _onFeaturesUpdated(identifiers) {
    if (identifiers.indexOf('drag') !== -1) {
      this.forceUpdate();
    }
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after this component has been mounted
   */


  CanvasComponent.prototype.componentDidMount = function componentDidMount() {
    _BaseComponent.prototype.componentDidMount.call(this);

    var editor = this.context.editor;

    var renderer = editor.getRenderer();

    var _refs = this.refs;
    var canvasCell = _refs.canvasCell;
    var canvas = _refs.canvas;

    var width = canvasCell.offsetWidth;
    var height = canvasCell.offsetHeight;
    renderer.setCanvas(canvas);
    renderer.resizeTo(new _globals.Vector2(width, height));
  };

  // -------------------------------------------------------------------------- DRAGGING

  /**
   * Gets called when the user starts dragging the canvas
   * @param {React.SyntheticEvent} e
   * @private
   */


  CanvasComponent.prototype._onDragStart = function _onDragStart(e) {
    var editor = this.context.editor;

    if (!editor.features.isEnabled('drag')) return;

    e.preventDefault();

    this._dragStartPosition = _globals.Utils.getEventPosition(e.nativeEvent);
    this._dragInitialOffset = editor.getOffset().clone();
    document.addEventListener('mousemove', this._onDragMove);
    document.addEventListener('touchmove', this._onDragMove);
    document.addEventListener('mouseup', this._onDragEnd);
    document.addEventListener('touchend', this._onDragEnd);
  };

  /**
   * Gets called while the user drags the canvas
   * @param {DOMEvent} e
   * @private
   */


  CanvasComponent.prototype._onDragMove = function _onDragMove(e) {
    var eventPosition = _globals.Utils.getEventPosition(e);
    var diffFromStart = eventPosition.clone().subtract(this._dragStartPosition);

    var newOffset = this._dragInitialOffset.clone().add(diffFromStart);

    var editor = this.context.editor;

    var lastOffset = editor.getOffset().clone();
    editor.setOffset(newOffset);
    if (!editor.getOffset().equals(lastOffset)) {
      editor.render();
    }
  };

  /**
   * Gets called when the user stops dragging the canvas
   * @param {DOMEvent} e
   * @private
   */


  CanvasComponent.prototype._onDragEnd = function _onDragEnd(e) {
    document.removeEventListener('mousemove', this._onDragMove);
    document.removeEventListener('touchmove', this._onDragMove);
    document.removeEventListener('mouseup', this._onDragEnd);
    document.removeEventListener('touchend', this._onDragEnd);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns the container's dimensions
   * @return {Vector2}
   * @private
   */


  CanvasComponent.prototype._getContainerDimensions = function _getContainerDimensions() {
    var canvasCell = this.refs.canvasCell;

    return new _globals.Vector2(canvasCell.offsetWidth, canvasCell.offsetHeight);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Returns the style properties for the draggable canvas area
   * @private
   */


  CanvasComponent.prototype._getDraggableStyle = function _getDraggableStyle() {
    return {
      top: this.state.canvasPosition.y + this.state.canvasOffset.y,
      left: this.state.canvasPosition.x + this.state.canvasOffset.x
    };
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  CanvasComponent.prototype.renderWithBEM = function renderWithBEM() {
    var canvasContent = null;
    var containerContent = null;
    if (this.props.largeControls) {
      containerContent = this.props.children;
    } else {
      canvasContent = this.props.children;
    }

    var dragEnabled = this.context.editor.features.isEnabled('drag');

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:canvas e:container e:row' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:container e:cell', ref: 'canvasCell' },
        _globals.ReactBEM.createElement(
          'div',
          {
            bem: 'e:innerContainer',
            className: dragEnabled ? 'is-draggable' : null,
            onTouchStart: this._onDragStart,
            onMouseDown: this._onDragStart,
            style: this._getDraggableStyle() },
          _globals.ReactBEM.createElement('canvas', {
            bem: 'e:canvas',
            ref: 'canvas' }),
          canvasContent
        ),
        containerContent
      )
    );
  };

  return CanvasComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = CanvasComponent;


CanvasComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _overviewControlsComponent = __webpack_require__(116);

var _overviewControlsComponent2 = _interopRequireDefault(_overviewControlsComponent);

var _screenComponent = __webpack_require__(40);

var _screenComponent2 = _interopRequireDefault(_screenComponent);

var _canvasComponent = __webpack_require__(232);

var _canvasComponent2 = _interopRequireDefault(_canvasComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _overview = __webpack_require__(206);

var _overview2 = _interopRequireDefault(_overview);

var _editor3 = __webpack_require__(251);

var _editor4 = _interopRequireDefault(_editor3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */
var WINDOW_RESIZE_DELAY = 500;

var EditorScreenComponent = function (_ScreenComponent) {
  (0, _inherits3.default)(EditorScreenComponent, _ScreenComponent);

  function EditorScreenComponent() {
    (0, _classCallCheck3.default)(this, EditorScreenComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ScreenComponent.call.apply(_ScreenComponent, [this].concat(args)));

    _this._overviewControls = _overviewControlsComponent2.default;

    _this._bindAll('switchToControls', '_startEditor', '_onWindowResize', '_onWindowResizeDone', '_onImageResize', '_onNewImage', '_onRenderError');

    _this._previousControlsStack = [];
    _this.state = {
      zoom: null,
      controls: _overview2.default,
      dragEnabled: true,
      sharedState: new _globals.SharedState()
    };

    _this._editor = new _editor4.default(_this.context.ui, _this.context.options, _this.context.mediator);
    _this._editor.on('new-image', _this._onNewImage);
    _this._editor.on('ready', _this._startEditor);
    _this._editor.on('resize', _this._onImageResize);
    _this._editor.on('render-error', _this._onRenderError);

    _this._forceControls = _this.context.options.editor.forceControls;
    _this._forceControlIndex = 0;
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called after this component has been mounted
   */


  EditorScreenComponent.prototype.componentDidMount = function componentDidMount() {
    _ScreenComponent.prototype.componentDidMount.call(this);

    var image = this.context.options.editor.image;

    this.setImage(image);
    this._editor.render();

    this._switchToNextForceControl();

    var options = this.context.options;

    if (options.responsive) {
      window.addEventListener('resize', this._onWindowResize);
    }
  };

  /**
   * Gets called before this component is unmounted
   */


  EditorScreenComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _ScreenComponent.prototype.componentWillUnmount.call(this);

    this._editor.dispose();
    var options = this.context.options;

    if (options.responsive) {
      window.removeEventListener('resize', this._onWindowResize);
    }
  };

  /**
   * Sets the zoom level and starts the editor rendering
   * @private
   */


  EditorScreenComponent.prototype._startEditor = function _startEditor() {
    this._editor.start();
  };

  // -------------------------------------------------------------------------- FORCE CONTROLS

  /**
   * Switches to the next forced control
   * @private
   */


  EditorScreenComponent.prototype._switchToNextForceControl = function _switchToNextForceControl() {
    if (this._forceControlIndex < this._forceControls.length) {
      var _forceControls$_force = this._forceControls[this._forceControlIndex];
      var control = _forceControls$_force.control;
      var options = _forceControls$_force.options;

      var availableControls = this._editor.controls.getAvailable();
      var controlObject = availableControls[control];

      var fixedOptions = _globals.SDKUtils.defaults({
        forcedControl: true
      }, options);

      if (!controlObject) {
        throw new Error('Force controls: Could not find control with identifier `' + control + '`');
      }

      this.switchToControls(controlObject, {}, null, fixedOptions);
      this._forceControlIndex++;
    }
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when an error occurred while rendering
   * @param  {Event} e
   * @private
   */


  EditorScreenComponent.prototype._onRenderError = function _onRenderError(e) {
    _modalManager2.default.instance.displayError(this._t('errors.renderingError.title'), this._t('errors.renderingError.text'), true);
    _globals.Log.error(this.constructor.name, 'An error occurred while rendering: ' + e.message);
    _globals.Log.printError(e);
  };

  /**
   * Gets called when the image has been changed
   * @private
   */


  EditorScreenComponent.prototype._onNewImage = function _onNewImage() {
    this.switchToControls(_overview2.default);
  };

  /**
   * Gets called when the editor starts resizing an image
   * @private
   */


  EditorScreenComponent.prototype._onImageResize = function _onImageResize() {
    var _this2 = this;

    var loadingModal = _modalManager2.default.instance.displayLoading(this._t('loading.resizing'));
    this._editor.once('resized', function (_ref) {
      var dimensions = _ref.dimensions;
      var reason = _ref.reason;

      loadingModal.close();

      if (_this2.context.options.editor.displayResizeMessage) {
        _modalManager2.default.instance.displayWarning(_this2._t('warnings.imageResized_' + reason + '.title'), _this2._t('warnings.imageResized_' + reason + '.text', {
          maxMegaPixels: _this2._editor.getMaxMegapixels(),
          width: dimensions.x,
          height: dimensions.y
        }));
      }
    });
  };

  /**
   * Gets called on window resize
   * @private
   */


  EditorScreenComponent.prototype._onWindowResize = function _onWindowResize() {
    if (this._resizeTimeout) {
      window.clearTimeout(this._resizeTimeout);
      this._resizeTimeout = null;
    }
    this._resizeTimeout = window.setTimeout(this._onWindowResizeDone, WINDOW_RESIZE_DELAY);
  };

  /**
   * Gets called `WINDOW_RESIZE_DELAY` ms after the last resize event has been called
   * @private
   */


  EditorScreenComponent.prototype._onWindowResizeDone = function _onWindowResizeDone() {
    this._emitEvent(_globals.Constants.EVENTS.WINDOW_RESIZE);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Switches to the given controls
   * @param  {Component} controls
   * @param  {Object} [initialState] = {}
   * @param  {Function} [callback]
   * @param  {Object} [controlOptions]
   */


  EditorScreenComponent.prototype.switchToControls = function switchToControls(controls) {
    var initialState = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var callback = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
    var controlOptions = arguments[3];

    var newControls = null;
    if (controls === 'back') {
      newControls = this._previousControlsStack.pop();
    } else if (controls === 'home') {
      // When a control switches to `home`, override this action
      // with switching to the next force control (if present)
      if (this._forceControlIndex < this._forceControls.length) {
        return this._switchToNextForceControl();
      }

      newControls = _overview2.default;
      this._previousControlsStack = [];
    } else {
      newControls = controls;
      this._previousControlsStack.push(this.state.controls);
    }

    var controlsChanged = this.state.controls !== newControls;

    // If the previous controls have an `onExit` method, call it
    // with the controls as `this`
    if (this.state.controls.onExit) {
      this.state.controls.onExit.call(this.refs.controls);
    }

    this.state.sharedState.clear();
    this.state.sharedState.set(initialState, false);

    var controlsOptions = _globals.SDKUtils.defaults(controlOptions || this.context.options.editor.controlsOptions[newControls.identifier], newControls.defaultOptions);

    // If the new controls have an `onEnter` method, call it
    if (newControls.onEnter) {
      newControls.onEnter.call(this.refs.controls, this.state.sharedState, controlsOptions);
    }

    if (controlsChanged) {
      this.setState({
        controls: newControls,
        controlsOptions: controlsOptions
      }, callback);
    } else {
      // No need to re-set the state. Call callback immediately
      return callback && callback();
    }
  };

  /**
   * Returns the zoom level
   * @return {Number}
   */


  EditorScreenComponent.prototype.getZoom = function getZoom() {
    return this.state.zoom;
  };

  /**
   * Exports an image
   * @param {Boolean} download = false
   * @return {Promise}
   */


  EditorScreenComponent.prototype.export = function _export() {
    var _this3 = this;

    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return new Promise(function (resolve, reject) {
      _this3.switchToControls('home', {}, function () {
        var _editor;

        (_editor = _this3._editor).export.apply(_editor, args).then(resolve).catch(reject);
      });
    });
  };

  /**
   * Serializes the editor state
   * @return {Promise}
   */


  EditorScreenComponent.prototype.serialize = function serialize() {
    var _editor2;

    return (_editor2 = this._editor).serialize.apply(_editor2, arguments);
  };

  /**
   * Deserializes the given data
   * @param  {Object} data
   * @return {Promise}
   */


  EditorScreenComponent.prototype.deserialize = function deserialize(data) {
    return this._editor.deserialize(data);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Decides whether the undo button should be displayed
   * @return {Boolean}
   * @private
   */


  EditorScreenComponent.prototype._showUndoButton = function _showUndoButton() {
    return this._editor.history.isAvailable();
  };

  /**
   * Returns the context passed to all children
   * @return {Object}
   */


  EditorScreenComponent.prototype.getChildContext = function getChildContext() {
    return {
      editor: this._editor,
      ui: this.context.ui,
      options: this.context.options,
      editorScreen: this,
      mediator: this.context.mediator
    };
  };

  /**
   * Sets the image to the given one
   * @param {Image} image
   * @param {Boolean} resetEditor
   */


  EditorScreenComponent.prototype.setImage = function setImage(image, resetEditor) {
    this._editor.setImage(image, resetEditor);
  };

  /**
   * Renders this screen
   * @return {ReactBEM.Element}
   * @private
   */


  EditorScreenComponent.prototype._renderScreen = function _renderScreen() {
    var ControlsComponent = this.state.controls.controlsComponent;
    var CanvasControlsComponent = this.state.controls.canvasControlsComponent;
    if (!CanvasControlsComponent) {
      CanvasControlsComponent = _overview2.default.canvasControlsComponent;
    }
    var TopBarControlsComponent = this.state.controls.topBarControlsComponent;
    if (!TopBarControlsComponent) {
      TopBarControlsComponent = _overview2.default.topBarControlsComponent;
    }

    var controls = void 0,
        canvasControls = void 0,
        topBarControls = void 0;

    if (TopBarControlsComponent && this.context.options.showTopBar) {
      topBarControls = _globals.ReactBEM.createElement(TopBarControlsComponent, {
        sharedState: this.state.sharedState,
        options: this.state.controlsOptions,
        app: this.props.app,
        ref: 'topBarControls' });
    }

    if (ControlsComponent) {
      controls = _globals.ReactBEM.createElement(ControlsComponent, {
        onSwitchControls: this.switchToControls,
        sharedState: this.state.sharedState,
        options: this.state.controlsOptions,
        app: this.props.app,
        ref: 'controls' });
    }

    if (CanvasControlsComponent) {
      canvasControls = _globals.ReactBEM.createElement(CanvasControlsComponent, {
        onSwitchControls: this.switchToControls,
        sharedState: this.state.sharedState,
        options: this.state.controlsOptions,
        app: this.props.app,
        ref: 'canvasControls' });
    }

    var bemSpecifier = '$b:editorScreen';
    if (!this.context.options.showHeader) {
      bemSpecifier += ' m:noHeader';
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: bemSpecifier },
      topBarControls,
      _globals.ReactBEM.createElement(
        _canvasComponent2.default,
        {
          ref: 'canvas',
          largeControls: this.state.controls.largeCanvasControls },
        canvasControls
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:controls $e:container e:row' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:cell' },
          controls
        )
      )
    );
  };

  return EditorScreenComponent;
}(_screenComponent2.default);

exports.default = EditorScreenComponent;


EditorScreenComponent.childContextTypes = {
  ui: _globals.React.PropTypes.object.isRequired,
  editor: _globals.React.PropTypes.object.isRequired,
  mediator: _globals.React.PropTypes.object.isRequired,
  options: _globals.React.PropTypes.object.isRequired,
  editorScreen: _globals.React.PropTypes.object.isRequired
};

EditorScreenComponent.contextTypes = _screenComponent2.default.contextTypes;

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var LibraryComponent = function (_BaseComponent) {
  (0, _inherits3.default)(LibraryComponent, _BaseComponent);

  function LibraryComponent() {
    (0, _classCallCheck3.default)(this, LibraryComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onClick');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the library
   * @private
   */


  LibraryComponent.prototype._onClick = function _onClick() {
    this.props.onClick && this.props.onClick(this.props.library);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  LibraryComponent.prototype.renderWithBEM = function renderWithBEM() {
    var library = this.props.library;

    var style = {
      backgroundImage: 'url(' + library.coverImage + ')'
    };

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:photoRoll e:libraryList' },
      _globals.ReactBEM.createElement(
        'li',
        { bem: 'e:item', style: style, onClick: this._onClick },
        _globals.ReactBEM.createElement('div', { bem: 'e:overlay' }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:name' },
          library.name
        )
      )
    );
  };

  return LibraryComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = LibraryComponent;


LibraryComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PhotoComponent = function (_BaseComponent) {
  (0, _inherits3.default)(PhotoComponent, _BaseComponent);

  function PhotoComponent() {
    (0, _classCallCheck3.default)(this, PhotoComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  PhotoComponent.prototype.renderWithBEM = function renderWithBEM() {
    var photo = this.props.photo;

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: 'b:photoRoll e:photoList' },
      _globals.ReactBEM.createElement(
        'li',
        { bem: '$e:item', onClick: this.props.onClick },
        _globals.ReactBEM.createElement('div', { bem: 'e:overlay' }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:title' },
          photo.title
        ),
        _globals.ReactBEM.createElement('img', { bem: 'e:image', src: photo.urls.thumb })
      )
    );
  };

  return PhotoComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = PhotoComponent;


PhotoComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _searchSuggestionComponent = __webpack_require__(118);

var _searchSuggestionComponent2 = _interopRequireDefault(_searchSuggestionComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var NoSearchResultsComponent = function (_BaseComponent) {
  (0, _inherits3.default)(NoSearchResultsComponent, _BaseComponent);

  function NoSearchResultsComponent() {
    (0, _classCallCheck3.default)(this, NoSearchResultsComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onSearchSuggestionClick');

    var PhotoRollProvider = _this.context.options.photoRoll.provider;
    _this._provider = new PhotoRollProvider();

    _this.state = {
      searchSuggestions: []
    };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when a search suggestion was clicked
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.SearchSuggestion} searchSuggestion
   * @private
   */


  NoSearchResultsComponent.prototype._onSearchSuggestionClick = function _onSearchSuggestionClick(searchSuggestion) {
    this.props.onSearchSuggestionClicked && this.props.onSearchSuggestionClicked(searchSuggestion);
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  NoSearchResultsComponent.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _BaseComponent.prototype.componentDidMount.call(this);

    this._provider.getSearchSuggestions().then(function (searchSuggestions) {
      _this2.setState({
        searchSuggestions: searchSuggestions
      });
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the message (which can include html)
   * @return {Object}
   * @private
   */


  NoSearchResultsComponent.prototype._renderMessage = function _renderMessage() {
    return { __html: this._t('photoRoll.search.noSearchResults', {
        query: this.props.query
      }) };
  };

  /**
   * Renders the search suggestions
   * @return {ReactBEM.Element}
   * @private
   */


  NoSearchResultsComponent.prototype._renderSearchSuggestions = function _renderSearchSuggestions() {
    var _this3 = this;

    if (!this.state.searchSuggestions.length) return null;

    var items = this.state.searchSuggestions.map(function (searchSuggestion) {
      return _globals.ReactBEM.createElement(_searchSuggestionComponent2.default, {
        onClick: _this3._onSearchSuggestionClick,
        searchSuggestion: searchSuggestion });
    });

    return _globals.ReactBEM.createElement(
      'div',
      null,
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:headline' },
        'Search suggestions'
      ),
      _globals.ReactBEM.createElement(
        'ul',
        { bem: '$e:libraryList' },
        items
      )
    );
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  NoSearchResultsComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:photoRoll e:row m:fullHeight' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:container' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:innerContainer' },
            _globals.ReactBEM.createElement('div', { bem: 'e:noSearchResults', dangerouslySetInnerHTML: this._renderMessage() }),
            this._renderSearchSuggestions()
          )
        )
      )
    );
  };

  return NoSearchResultsComponent;
}(_globals.BaseComponent);

exports.default = NoSearchResultsComponent;


NoSearchResultsComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = __webpack_require__(280);

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _libraryComponent = __webpack_require__(234);

var _libraryComponent2 = _interopRequireDefault(_libraryComponent);

var _searchSuggestionComponent = __webpack_require__(118);

var _searchSuggestionComponent2 = _interopRequireDefault(_searchSuggestionComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var OverviewComponent = function (_BaseComponent) {
  (0, _inherits3.default)(OverviewComponent, _BaseComponent);

  function OverviewComponent() {
    (0, _classCallCheck3.default)(this, OverviewComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._needsStyleFixes = true;
    _this.state = {
      loading: true,
      libraries: [],
      searchSuggestions: []
    };

    _this._bindAll('_onLibraryClick', '_onSearchSuggestionClick');

    var PhotoRollProvider = _this.context.options.photoRoll.provider;
    _this._provider = new PhotoRollProvider();
    return _this;
  }

  /**
   * A method that is called whenever styles need to be fixed by the JavaScript.
   * This needs to be done thanks to older Internet Explorer browsers which have
   * a bunch of CSS bugs.
   */


  OverviewComponent.prototype.fixStyles = function fixStyles() {
    if (_globals.Utils.Browser.isIElte(11)) {
      var _refs = this.refs;
      var cell = _refs.cell;
      var container = _refs.container;

      if (!(cell && container)) {
        return;
      }
      var cellHeight = cell.offsetHeight;
      container.style.height = cellHeight + 'px';
    }
  };

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component has been mounted
   */


  OverviewComponent.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _BaseComponent.prototype.componentDidMount.call(this);

    var modal = _modalManager2.default.instance.displayLoading(this._t('loading.loading'));
    this._load().then(function (_ref) {
      var _ref2 = (0, _slicedToArray3.default)(_ref, 2);

      var libraries = _ref2[0];
      var searchSuggestions = _ref2[1];

      modal.close();
      if (libraries.length === 1) {
        _this2._onLibraryClick(libraries[0], true);
      } else {
        _this2.setState({
          loading: false,
          libraries: libraries,
          searchSuggestions: searchSuggestions
        });
      }
    });
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when a library was clicked
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Library} library
   * @param  {Boolean} automatically = false
   * @private
   */


  OverviewComponent.prototype._onLibraryClick = function _onLibraryClick(library) {
    var automatically = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

    this.props.onLibraryClicked && this.props.onLibraryClicked(library, automatically);
  };

  /**
   * Gets called when a search suggestion was clicked
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.SearchSuggestion} searchSuggestion
   * @private
   */


  OverviewComponent.prototype._onSearchSuggestionClick = function _onSearchSuggestionClick(searchSuggestion) {
    this.props.onSearchSuggestionClicked && this.props.onSearchSuggestionClicked(searchSuggestion);
  };

  // -------------------------------------------------------------------------- LOADING

  /**
   * Loads the libraries and search suggestions (if present)
   * @return {Promise}
   * @private
   */


  OverviewComponent.prototype._load = function _load() {
    var promises = [this._provider.getLibraries(), this._provider.getSearchSuggestions()];
    return _globals.Promise.all(promises);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the library items
   * @return {React.Component}
   * @private
   */


  OverviewComponent.prototype._renderLibraries = function _renderLibraries() {
    var _this3 = this;

    var items = this.state.libraries.map(function (library) {
      return _globals.ReactBEM.createElement(_libraryComponent2.default, {
        onClick: _this3._onLibraryClick,
        library: library });
    });
    return _globals.ReactBEM.createElement(
      'li',
      { bem: 'e:item' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: 'b:photoRoll' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:headline' },
          'Browse libraries'
        ),
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:libraryList' },
          items
        )
      )
    );
  };

  /**
   * Rnders the search suggestion items
   * @return {React.Component}
   * @private
   */


  OverviewComponent.prototype._renderSearchSuggestions = function _renderSearchSuggestions() {
    var _this4 = this;

    if (!this.state.searchSuggestions.length) return null;

    var items = this.state.searchSuggestions.map(function (searchSuggestion) {
      return _globals.ReactBEM.createElement(_searchSuggestionComponent2.default, {
        onClick: _this4._onSearchSuggestionClick,
        searchSuggestion: searchSuggestion });
    });

    return _globals.ReactBEM.createElement(
      'li',
      { bem: 'e:item' },
      _globals.ReactBEM.createElement(
        'bem',
        { specifier: 'b:photoRoll' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:headline' },
          'Search suggestions'
        ),
        _globals.ReactBEM.createElement(
          'ul',
          { bem: '$e:libraryList' },
          items
        )
      )
    );
  };

  /**
   * Renders the content for this component
   * @return {ReactBEM.Element}
   * @private
   */


  OverviewComponent.prototype._renderContent = function _renderContent() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:photoRoll e:row m:fullHeight' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell', ref: 'cell' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:container', ref: 'container' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:innerContainer' },
            _globals.ReactBEM.createElement(
              'ul',
              { bem: '$e:groupList' },
              this._renderLibraries(),
              this._renderSearchSuggestions()
            )
          )
        )
      )
    );
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  OverviewComponent.prototype.renderWithBEM = function renderWithBEM() {
    if (!this.state.loading) {
      return this._renderContent();
    } else {
      return _globals.ReactBEM.createElement('div', null);
    }
  };

  return OverviewComponent;
}(_globals.BaseComponent);

exports.default = OverviewComponent;


OverviewComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _screenComponent = __webpack_require__(40);

var _screenComponent2 = _interopRequireDefault(_screenComponent);

var _topBarComponent = __webpack_require__(241);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

var _overviewComponent = __webpack_require__(237);

var _overviewComponent2 = _interopRequireDefault(_overviewComponent);

var _photoListComponent = __webpack_require__(119);

var _photoListComponent2 = _interopRequireDefault(_photoListComponent);

var _searchResultsComponent = __webpack_require__(239);

var _searchResultsComponent2 = _interopRequireDefault(_searchResultsComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PhotoRollScreenComponent = function (_ScreenComponent) {
  (0, _inherits3.default)(PhotoRollScreenComponent, _ScreenComponent);

  function PhotoRollScreenComponent() {
    (0, _classCallCheck3.default)(this, PhotoRollScreenComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _ScreenComponent.call.apply(_ScreenComponent, [this].concat(args)));

    _this.state = {
      section: 'overview',
      sectionsHistory: []
    };

    _this._bindAll('_onLibraryClicked', '_onSearchSuggestionClicked', '_onPhotoClicked', '_onFileUpload', '_onWebcamClick', '_onBackClicked', '_onSearch');
    return _this;
  }

  // -------------------------------------------------------------------------- SECTIONS

  /**
   * Checks if the photo roll screen has a previous section
   * @return {Boolean} [description]
   */


  PhotoRollScreenComponent.prototype.hasPreviousSection = function hasPreviousSection() {
    return !!this.state.sectionsHistory.length;
  };

  /**
   * Switches to the given section
   * @param  {String} section
   * @param  {Boolean} allowScreenSwitch = true
   * @param  {Boolean} addToStack = true
   */


  PhotoRollScreenComponent.prototype.switchToSection = function switchToSection(section) {
    var allowScreenSwitch = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
    var addToStack = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

    if (section === 'back') {
      if (!this.hasPreviousSection()) {
        if (allowScreenSwitch) {
          return this.props.app.switchToScreen('back');
        } else {
          return this.switchToSection('overview');
        }
      }
      section = this.state.sectionsHistory.pop();
    } else if (this.state.section !== section && addToStack) {
      this.state.sectionsHistory.push(this.state.section);
    }

    this.setState({ section: section });
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when a library has been clicked
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Library} library
   * @param {Boolean} automatically = false
   * @private
   */


  PhotoRollScreenComponent.prototype._onLibraryClicked = function _onLibraryClicked(library) {
    var automatically = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];

    this.state.library = library;
    this.switchToSection('library', true, !automatically);
  };

  /**
   * Gets called when a search suggestion has been clicked
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.SearchSuggestion} searchSuggestion
   * @private
   */


  PhotoRollScreenComponent.prototype._onSearchSuggestionClicked = function _onSearchSuggestionClicked(searchSuggestion) {
    this.state.searchQuery = searchSuggestion.query;
    this.switchToSection('search');
  };

  /**
   * Gets called when the user has clicked and the PhotoRoll has loaded a photo
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Photo} photo
   * @private
   */


  PhotoRollScreenComponent.prototype._onPhotoClicked = function _onPhotoClicked(photo) {
    var _this2 = this;

    var loadingModal = _modalManager2.default.instance.displayLoading(this._t('loading.loading'));

    var image = new window.Image();
    image.addEventListener('load', function () {
      loadingModal.close();
      _this2.props.app.setImage(image, true);
    });
    image.addEventListener('error', function () {
      loadingModal.close();
      _modalManager2.default.instance.displayError(_this2._t('errors.imageLoadFail.title'), _this2._t('errors.imageLoadFail.text', { path: image.src }));
    });
    image.crossOrigin = 'Anonymous';
    image.src = photo.urls.raw;
  };

  /**
   * Gets called when the user clicks the back button
   * @private
   */


  PhotoRollScreenComponent.prototype._onBackClicked = function _onBackClicked() {
    this.switchToSection('back');
  };

  /**
   * Gets called when a search is triggered
   * @param  {String} query
   * @private
   */


  PhotoRollScreenComponent.prototype._onSearch = function _onSearch(query) {
    if (!query.trim().length) {
      this.state.searchQuery = null;
      return this.switchToSection('back', false);
    }

    this.state.searchQuery = query;
    this.switchToSection('search');
  };

  /**
   * Gets called when the user clicks the webcam button. Switches to the
   * webcam screen
   * @private
   */


  PhotoRollScreenComponent.prototype._onWebcamClick = function _onWebcamClick() {
    this.props.app.switchToScreen('webcam');
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user has selected a new file
   * @param {Image} image
   */


  PhotoRollScreenComponent.prototype._onFileUpload = function _onFileUpload(image) {
    this.props.app.setImage(image);
  };

  // -------------------------------------------------------------------------- BACK BUTTON

  /**
   * Checks if the back button should be visible
   * @return {Boolean}
   * @private
   */


  PhotoRollScreenComponent.prototype._isBackButtonVisible = function _isBackButtonVisible() {
    return this.state.sectionsHistory.length !== 0 || this.props.app.hasPreviousScreen();
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the content component for this screen
   * @return {ReactBEM.Element}
   * @private
   */


  PhotoRollScreenComponent.prototype._renderContent = function _renderContent() {
    switch (this.state.section) {
      case 'search':
        return _globals.ReactBEM.createElement(_searchResultsComponent2.default, {
          query: this.state.searchQuery,
          onPhotoClicked: this._onPhotoClicked,
          onSearchSuggestionClicked: this._onSearchSuggestionClicked });
      case 'library':
        return _globals.ReactBEM.createElement(_photoListComponent2.default, {
          library: this.state.library,
          onPhotoClicked: this._onPhotoClicked });
      case 'overview':
        return _globals.ReactBEM.createElement(_overviewComponent2.default, {
          onLibraryClicked: this._onLibraryClicked,
          onSearchSuggestionClicked: this._onSearchSuggestionClicked
        });
    }
  };

  /**
   * Renders this screen
   * @return {ReactBEM.Element}
   * @private
   */


  PhotoRollScreenComponent.prototype._renderScreen = function _renderScreen() {
    var contentComponent = this._renderContent();

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:photoRollScreen' },
      _globals.ReactBEM.createElement(_topBarComponent2.default, {
        onBackClicked: this._onBackClicked,
        onSearch: this._onSearch,
        searchQuery: this.state.searchQuery,
        onFileUpload: this._onFileUpload,
        onWebcamClick: this._onWebcamClick,
        backButton: this._isBackButtonVisible(),
        backButtonLabel: this._t('generic.back'),
        ref: 'topBarControls' }),
      contentComponent
    );
  };

  return PhotoRollScreenComponent;
}(_screenComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = PhotoRollScreenComponent;


PhotoRollScreenComponent.childContextTypes = {
  ui: _globals.React.PropTypes.object.isRequired,
  editor: _globals.React.PropTypes.object.isRequired,
  mediator: _globals.React.PropTypes.object.isRequired,
  options: _globals.React.PropTypes.object.isRequired,
  editorScreen: _globals.React.PropTypes.object.isRequired
};

PhotoRollScreenComponent.contextTypes = _screenComponent2.default.contextTypes;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _photoListComponent = __webpack_require__(119);

var _photoListComponent2 = _interopRequireDefault(_photoListComponent);

var _noSearchResultsComponent = __webpack_require__(236);

var _noSearchResultsComponent2 = _interopRequireDefault(_noSearchResultsComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var SearchResultsComponent = function (_PhotoListComponent) {
  (0, _inherits3.default)(SearchResultsComponent, _PhotoListComponent);

  function SearchResultsComponent() {
    (0, _classCallCheck3.default)(this, SearchResultsComponent);
    return (0, _possibleConstructorReturn3.default)(this, _PhotoListComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component receives new props
   * @param  {Object} props
   */
  SearchResultsComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(props) {
    if (props.query !== this.props.query) {
      this._loadPhotos(props.query);
    }
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Returns the headline for this view
   * @return {String}
   * @private
   */


  SearchResultsComponent.prototype._getHeadline = function _getHeadline() {
    return this._t('photoRoll.search.results.headline', {
      query: this.props.query
    });
  };

  /**
   * Loads the photos
   * @param {String} query
   * @private
   */


  SearchResultsComponent.prototype._loadPhotos = function _loadPhotos() {
    var _this2 = this;

    var query = arguments.length <= 0 || arguments[0] === undefined ? this.props.query : arguments[0];

    this._totalPhotosHeight = 0;
    var modal = _modalManager2.default.instance.displayProgress(this._t('loading.loading'));
    var PhotoRollProvider = this.context.options.photoRoll.provider;
    var provider = new PhotoRollProvider();

    provider.searchPhotos(query).then(function (photos) {
      return _this2._preloadPhotos(photos, modal);
    }).then(function (photos) {
      _this2.setState({ photos: photos, loading: false });
      modal.close();
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the 'no results found' screen
   * @return {ReactBEM.Element}
   * @private
   */


  SearchResultsComponent.prototype._renderNotFound = function _renderNotFound() {
    return _globals.ReactBEM.createElement(_noSearchResultsComponent2.default, {
      query: this.props.query,
      onSearchSuggestionClicked: this.props.onSearchSuggestionClicked });
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  SearchResultsComponent.prototype.renderWithBEM = function renderWithBEM() {
    if (!this.state.loading) {
      if (this.state.photos.length === 0) {
        return this._renderNotFound();
      } else {
        return this._renderPhotos();
      }
    } else {
      return _globals.ReactBEM.createElement('div', null);
    }
  };

  return SearchResultsComponent;
}(_photoListComponent2.default);

exports.default = SearchResultsComponent;


SearchResultsComponent.contextTypes = _photoListComponent2.default.contextTypes;

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopBarButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TopBarButtonComponent, _BaseComponent);

  function TopBarButtonComponent() {
    (0, _classCallCheck3.default)(this, TopBarButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  TopBarButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:topBar' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:iconButton', onClick: this.props.onClick },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this.props.icon })
      )
    );
  };

  return TopBarButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TopBarButtonComponent;


TopBarButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _topBarComponent = __webpack_require__(55);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

var _topBarButtonComponent = __webpack_require__(240);

var _topBarButtonComponent2 = _interopRequireDefault(_topBarButtonComponent);

var _invisibleUploadComponent = __webpack_require__(71);

var _invisibleUploadComponent2 = _interopRequireDefault(_invisibleUploadComponent);

var _topBarSearchComponent = __webpack_require__(242);

var _topBarSearchComponent2 = _interopRequireDefault(_topBarSearchComponent);

var _backButtonComponent = __webpack_require__(249);

var _backButtonComponent2 = _interopRequireDefault(_backButtonComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var PhotoRollTopBarComponent = function (_TopBarComponent) {
  (0, _inherits3.default)(PhotoRollTopBarComponent, _TopBarComponent);

  function PhotoRollTopBarComponent() {
    (0, _classCallCheck3.default)(this, PhotoRollTopBarComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _TopBarComponent.call.apply(_TopBarComponent, [this].concat(args)));

    _this._bindAll('_onUploadButtonClicked', '_onWebcamButtonClicked', '_onBackClicked', '_onSearchValueChange', '_onNewFile');

    _this._onSearchValueChange = _globals.Utils.debounce(_this._onSearchValueChange, 250);
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the user clicks the back button
   * @private
   */


  PhotoRollTopBarComponent.prototype._onBackClicked = function _onBackClicked() {
    this.props.onBackClicked && this.props.onBackClicked();
  };

  /**
   * Gets called when the search value has changed (this method is debounced)
   * @param {String} value
   * @private
   */


  PhotoRollTopBarComponent.prototype._onSearchValueChange = function _onSearchValueChange(value) {
    this.props.onSearch && this.props.onSearch(value);
  };

  /**
   * Gets called when the user clicks the upload button
   * @private
   */


  PhotoRollTopBarComponent.prototype._onUploadButtonClicked = function _onUploadButtonClicked() {
    this.refs.upload.open();
  };

  /**
   * Gets called when the user clicks the webcam button
   * @private
   */


  PhotoRollTopBarComponent.prototype._onWebcamButtonClicked = function _onWebcamButtonClicked() {
    this.props.onWebcamClick && this.props.onWebcamClick();
  };

  /**
   * Gets called when a new file has been selected
   * @param  {File} file
   * @private
   */


  PhotoRollTopBarComponent.prototype._onNewFile = function _onNewFile(file) {
    this.props.onFileUpload && this.props.onFileUpload(file);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders the buttons on the right
   * @return {Array.<React.Component>}
   * @private
   */


  PhotoRollTopBarComponent.prototype._renderRightButtons = function _renderRightButtons() {
    var options = this.context.options;

    var buttons = [];

    if (options.enableUpload) {
      buttons.push(_globals.ReactBEM.createElement(_topBarButtonComponent2.default, {
        icon: this._getAssetPath('photo-roll/upload.png', true),
        onClick: this._onUploadButtonClicked
      }));
    }

    if (options.enableWebcam) {
      buttons.push(_globals.ReactBEM.createElement(_topBarButtonComponent2.default, {
        icon: this._getAssetPath('photo-roll/webcam.png', true),
        onClick: this._onWebcamButtonClicked
      }));
    }

    return buttons;
  };

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  PhotoRollTopBarComponent.prototype.renderWithBEM = function renderWithBEM() {
    var backButton = void 0;
    if (this.props.backButton) {
      backButton = _globals.ReactBEM.createElement(_backButtonComponent2.default, {
        label: this.props.backButtonLabel,
        onClick: this._onBackClicked });
    }
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:topBar e:row' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:cell' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:table' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:left' },
            backButton
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:fullWidth' },
            _globals.ReactBEM.createElement(_topBarSearchComponent2.default, {
              searchQuery: this.props.searchQuery,
              onChange: this._onSearchValueChange }),
            _globals.ReactBEM.createElement(_invisibleUploadComponent2.default, { onNewFile: this._onNewFile, ref: 'upload' })
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cell m:right' },
            this._renderRightButtons()
          )
        )
      )
    );
  };

  return PhotoRollTopBarComponent;
}(_topBarComponent2.default);

exports.default = PhotoRollTopBarComponent;


PhotoRollTopBarComponent.contextTypes = _topBarComponent2.default.contextTypes;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopBarSearchComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TopBarSearchComponent, _BaseComponent);

  function TopBarSearchComponent() {
    (0, _classCallCheck3.default)(this, TopBarSearchComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call.apply(_BaseComponent, [this].concat(args)));

    _this._bindAll('_onFocus', '_onBlur', '_onChange', '_onBarClick');

    _this.state = {
      active: false,
      placeholder: _this._t('photoRoll.search.placeholder'),
      value: _this.props.searchQuery || ''
    };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Gets called when this component is about to receive new properties
   * @param  {Object} nextProps
   */


  TopBarSearchComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.searchQuery || this.state.value) {
      this.state.active = true;
    } else {
      this.state.active = false;
    }

    this.setState({
      value: nextProps.searchQuery || ''
    });
  };

  TopBarSearchComponent.prototype.componentDidUpdate = function componentDidUpdate() {
    this.refs.input.value = this.state.value;
  };

  /**
   * Gets called when this component has been mounted
   */


  TopBarSearchComponent.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    _BaseComponent.prototype.componentDidMount.call(this);
    this._hiddenInputDummy = document.createElement('div');

    var styleObject = _globals.Utils.getStyleObject(this.refs.input);
    var overrideKeys = ['font', 'lineHeight', 'textAlign', 'textIndent', 'textTransform', 'textDecoration', 'textRendering', 'textShadow', 'textOverflow', 'wordSpacing', 'letterSpacing', 'whiteSpace'];
    overrideKeys.forEach(function (key) {
      _this2._hiddenInputDummy.style[key] = styleObject[key];
    });

    this._hiddenInputDummy.style.position = 'absolute';
    this._hiddenInputDummy.style.top = '-9999px';
    this._hiddenInputDummy.style.left = '-9999px';

    this.refs.root.appendChild(this._hiddenInputDummy);

    this._updateInputWidth();
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Updates the input width to fit the text width
   * @private
   */


  TopBarSearchComponent.prototype._updateInputWidth = function _updateInputWidth() {
    var _this3 = this;

    this._hiddenInputDummy.innerHTML = this.state.value || this.state.placeholder;
    setTimeout(function () {
      _this3.setState({
        inputWidth: _this3._hiddenInputDummy.offsetWidth + 5
      });
    }, 0);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the search bar has been clicked
   * @private
   */


  TopBarSearchComponent.prototype._onBarClick = function _onBarClick() {
    this.refs.input.focus();
  };

  /**
   * Gets called when the input fields is focused
   * @private
   */


  TopBarSearchComponent.prototype._onFocus = function _onFocus() {
    this.setState({ active: true });
  };

  /**
   * Gets called when the input field loses focus
   * @private
   */


  TopBarSearchComponent.prototype._onBlur = function _onBlur() {
    if (this.state.value === '' && !this.props.searchQuery) {
      this.setState({ active: false });
    }
  };

  /**
   * Gets called when the input value has changed
   * @param  {Event} e
   * @private
   */


  TopBarSearchComponent.prototype._onChange = function _onChange(e) {
    this.state.value = e.target.value;
    this.forceUpdate();

    this.props.onChange && this.props.onChange(this.state.value);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  TopBarSearchComponent.prototype.renderWithBEM = function renderWithBEM() {
    var searchBarBEM = '$e:searchBar';
    var iconPath = 'photo-roll/search-light.png';
    if (this.state.active) {
      searchBarBEM += ' m:active';
      iconPath = 'photo-roll/search-dark.png';
    }
    iconPath = this._getAssetPath(iconPath, true);

    var inputStyle = {
      width: this.state.inputWidth + 'px'
    };

    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:photoRollScreen' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: searchBarBEM, ref: 'root', onClick: this._onBarClick },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:content' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: '$e:icon' },
            _globals.ReactBEM.createElement('img', { src: iconPath, bem: 'e:image' })
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:inputContainer' },
            _globals.ReactBEM.createElement('input', {
              bem: 'e:input',
              ref: 'input',
              placeholder: this.state.placeholder,
              onBlur: this._onBlur,
              onFocus: this._onFocus,
              onChange: this._onChange,
              defaultValue: this.state.value,
              style: inputStyle })
          )
        )
      )
    );
  };

  return TopBarSearchComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TopBarSearchComponent;


TopBarSearchComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _rowComponent = __webpack_require__(70);

var _rowComponent2 = _interopRequireDefault(_rowComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var PhotoRollComponent = function (_RowComponent) {
  (0, _inherits3.default)(PhotoRollComponent, _RowComponent);

  function PhotoRollComponent() {
    (0, _classCallCheck3.default)(this, PhotoRollComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _RowComponent.call.apply(_RowComponent, [this].concat(args)));

    _this._needsStyleFixes = true;
    _this._modifier = 'photoRoll';
    return _this;
  }

  /**
   * A method that is called whenever styles need to be fixed by the JavaScript.
   * This needs to be done thanks to older Internet Explorer browsers which have
   * a bunch of CSS bugs.
   */


  PhotoRollComponent.prototype.fixStyles = function fixStyles() {
    if (_globals.Utils.Browser.isIElte(11)) {
      var _refs = this.refs;
      var cell = _refs.cell;
      var overlay = _refs.overlay;

      var cellHeight = cell.offsetHeight;
      overlay.style.height = cellHeight + 'px';
    }
  };

  /**
   * Renders this row's content
   * @return {ReactBEM.Element}
   * @private
   */


  PhotoRollComponent.prototype._renderContent = function _renderContent() {
    var style = {
      backgroundImage: 'url(' + this._getAssetPath('splash/photo-roll.png', true, true) + ')'
    };

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:contentWrapper' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:contentRow' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:contentCell', onClick: this._onClick, style: style, ref: 'cell' },
          _globals.ReactBEM.createElement('div', { bem: 'e:overlay', ref: 'overlay' }),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:headline' },
            this._t('splash.photoRoll.headline')
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:description' },
            this._t('splash.photoRoll.description')
          )
        )
      )
    );
  };

  return PhotoRollComponent;
}(_rowComponent2.default);

exports.default = PhotoRollComponent;


PhotoRollComponent.contextTypes = _rowComponent2.default.contextTypes;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _screenComponent = __webpack_require__(40);

var _screenComponent2 = _interopRequireDefault(_screenComponent);

var _uploadComponent = __webpack_require__(245);

var _uploadComponent2 = _interopRequireDefault(_uploadComponent);

var _webcamComponent = __webpack_require__(246);

var _webcamComponent2 = _interopRequireDefault(_webcamComponent);

var _photoRollComponent = __webpack_require__(243);

var _photoRollComponent2 = _interopRequireDefault(_photoRollComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SplashScreenComponent = function (_ScreenComponent) {
  (0, _inherits3.default)(SplashScreenComponent, _ScreenComponent);

  function SplashScreenComponent() {
    (0, _classCallCheck3.default)(this, SplashScreenComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _ScreenComponent.call(this));

    _this._bindAll('_onWebcamClick', '_onPhotoRollClick', '_onImage');
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the PhotoRollComponent has received a click
   * @private
   */


  SplashScreenComponent.prototype._onPhotoRollClick = function _onPhotoRollClick() {
    this.props.app.switchToScreen('photoRoll');
  };

  /**
   * Gets called when the WebcamComponent has received a click
   * @private
   */


  SplashScreenComponent.prototype._onWebcamClick = function _onWebcamClick() {
    this.props.app.switchToScreen('webcam');
  };

  /**
   * Gets called when the UploadComponent has received an image file
   * @param  {image} image
   * @private
   */


  SplashScreenComponent.prototype._onImage = function _onImage(image) {
    this.props.app.setImage(image);
  };

  // -------------------------------------------------------------------------- MISC

  /**
   * Checks if the webcam is available for the given device
   * @return {Boolean}
   * @private
   */


  SplashScreenComponent.prototype._isWebcamAvailable = function _isWebcamAvailable() {
    return !_globals.Utils.isMobile() && this.context.options.enableWebcam !== false;
  };

  /**
   * Checks if the photo roll is available
   * @return {Boolean}
   * @private
   */


  SplashScreenComponent.prototype._isPhotoRollAvailable = function _isPhotoRollAvailable() {
    return !!this.context.options.photoRoll.provider;
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this screen
   * @return {ReactBEM.Element}
   * @private
   */


  SplashScreenComponent.prototype._renderScreen = function _renderScreen() {
    var items = [];
    var totalRows = 0;

    var uploadAvailable = this.context.options.enableUpload;
    if (uploadAvailable) totalRows++;

    var webcamAvailable = this._isWebcamAvailable();
    if (webcamAvailable) totalRows++;

    var photoRollAvailable = this._isPhotoRollAvailable();
    if (photoRollAvailable) totalRows++;

    if (uploadAvailable) {
      items.push(_globals.ReactBEM.createElement(_uploadComponent2.default, {
        onImage: this._onImage,
        totalRows: totalRows }));
    }

    if (webcamAvailable) {
      items.push(_globals.ReactBEM.createElement(_webcamComponent2.default, {
        onClick: this._onWebcamClick,
        totalRows: totalRows }));
    }

    if (photoRollAvailable) {
      items.push(_globals.ReactBEM.createElement(_photoRollComponent2.default, {
        onClick: this._onPhotoRollClick,
        totalRows: totalRows }));
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:splashScreen' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:container' },
        items
      )
    );
  };

  return SplashScreenComponent;
}(_screenComponent2.default); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */


exports.default = SplashScreenComponent;


SplashScreenComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = __webpack_require__(42);

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _rowComponent = __webpack_require__(70);

var _rowComponent2 = _interopRequireDefault(_rowComponent);

var _buttonComponent = __webpack_require__(176);

var _buttonComponent2 = _interopRequireDefault(_buttonComponent);

var _invisibleUploadComponent = __webpack_require__(71);

var _invisibleUploadComponent2 = _interopRequireDefault(_invisibleUploadComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var UploadComponent = function (_RowComponent) {
  (0, _inherits3.default)(UploadComponent, _RowComponent);

  function UploadComponent() {
    (0, _classCallCheck3.default)(this, UploadComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _RowComponent.call(this));

    _this._modifier = 'upload';

    _this._bindAll('_onImage', '_onDragEnter', '_onDragOver', '_onDragLeave', '_onDrop');

    _this._dragCounter = 0;
    _this.state = { dragAreaHovered: false };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the cell emits a `dragEnter` event. Highlights
   * the cell
   * @param {Event} e
   * @private
   */


  UploadComponent.prototype._onDragEnter = function _onDragEnter(e) {
    e.preventDefault();

    this._dragCounter++;
    this.setState({ dragAreaHovered: true });
  };

  /**
   * Gets called when the cell emits a `dragOver` event. We need to
   * override the default behavior to get a drop event.
   * @param  {Event} e
   * @private
   */


  UploadComponent.prototype._onDragOver = function _onDragOver(e) {
    e.preventDefault();
  };

  /**
   * Gets called when the cell emits a `dragLeave` event
   * @param  {Event} e
   * @private
   */


  UploadComponent.prototype._onDragLeave = function _onDragLeave(e) {
    e.preventDefault();

    this._dragCounter--;
    if (this._dragCounter === 0) {
      this.setState({ dragAreaHovered: false });
    }
  };

  /**
   * Gets called when the cell emits a `drop` Event
   * @param  {Event} e
   * @private
   */


  UploadComponent.prototype._onDrop = function _onDrop(e) {
    var _this2 = this;

    e.stopPropagation();
    e.preventDefault();
    e = e.nativeEvent;
    e.returnValue = false;

    this.setState({ dragAreaHovered: false }, function () {
      if (!e.dataTransfer) return;

      _this2._handleFile(e.dataTransfer.files[0]);
    });
  };

  /**
   * Gets called when the user clicks the button
   * @param  {Event} e
   * @private
   */


  UploadComponent.prototype._onClick = function _onClick(e) {
    this.refs.upload.open();
  };

  /**
   * Creates an image from the given file and passes it to the UI
   * @param  {File} file
   * @private
   */


  UploadComponent.prototype._handleFile = function _handleFile(file) {
    var _this3 = this;

    var reader = new window.FileReader();
    reader.onload = function () {
      return function (e) {
        var data = e.target.result;
        var image = new window.Image();

        image.addEventListener('load', function () {
          _this3._onImage(image);
        });

        image.src = data;
      };
    }(file);
    reader.readAsDataURL(file);
  };

  /**
   * Gets called when the image has been changed
   * @param  {Image} image
   * @private
   */


  UploadComponent.prototype._onImage = function _onImage(image) {
    this.props.onImage && this.props.onImage(image);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this row's content
   * @return {ReactBEM.Element}
   * @private
   */


  UploadComponent.prototype._renderContent = function _renderContent() {
    var cellProps = {
      onDragEnter: this._onDragEnter,
      onDragOver: this._onDragOver,
      onDragLeave: this._onDragLeave,
      onDrop: this._onDrop
    };

    if (this.state.dragAreaHovered) {
      cellProps.className = 'is-hovered';
    }

    var contentCellBEM = 'e:contentCell';
    // @TODO We need some class that implements webcamEnabled() and photoRollEnabled()
    if (this.context.options.enableWebcam !== false || this.context.options.photoRoll.provider !== null) {
      contentCellBEM += ' m:withBorder';
    }

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:contentWrapper' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:contentRow' },
        _globals.ReactBEM.createElement(
          'div',
          (0, _extends3.default)({ bem: contentCellBEM, onClick: this._onClick }, cellProps),
          _globals.ReactBEM.createElement(_invisibleUploadComponent2.default, { ref: 'upload', onNewFile: this._onImage }),
          _globals.ReactBEM.createElement(
            _buttonComponent2.default,
            { bem: 'e:button',
              uppercase: true },
            this._t('splash.upload.button')
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:description' },
            this._t('splash.upload.description')
          )
        )
      )
    );
  };

  return UploadComponent;
}(_rowComponent2.default);

exports.default = UploadComponent;


UploadComponent.propTypes = {
  onImage: _globals.React.PropTypes.func.isRequired
};

UploadComponent.contextTypes = _rowComponent2.default.contextTypes;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _rowComponent = __webpack_require__(70);

var _rowComponent2 = _interopRequireDefault(_rowComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var WebcamComponent = function (_RowComponent) {
  (0, _inherits3.default)(WebcamComponent, _RowComponent);

  function WebcamComponent() {
    (0, _classCallCheck3.default)(this, WebcamComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this = (0, _possibleConstructorReturn3.default)(this, _RowComponent.call.apply(_RowComponent, [this].concat(args)));

    _this._needsStyleFixes = true;
    _this._modifier = 'webcam';
    return _this;
  }

  /**
   * A method that is called whenever styles need to be fixed by the JavaScript.
   * This needs to be done thanks to older Internet Explorer browsers which have
   * a bunch of CSS bugs.
   */


  WebcamComponent.prototype.fixStyles = function fixStyles() {
    if (_globals.Utils.Browser.isIElte(11)) {
      var _refs = this.refs;
      var cell = _refs.cell;
      var overlay = _refs.overlay;

      var cellHeight = cell.offsetHeight;
      overlay.style.height = cellHeight + 'px';
    }
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this row's content
   * @return {ReactBEM.Element}
   * @private
   */


  WebcamComponent.prototype._renderContent = function _renderContent() {
    var style = {
      backgroundImage: 'url(' + this._getAssetPath('splash/webcam.png', true, true) + ')'
    };

    return _globals.ReactBEM.createElement(
      'div',
      { bem: 'e:contentWrapper' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: 'e:contentRow' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:contentCell', onClick: this._onClick, style: style, ref: 'cell' },
          _globals.ReactBEM.createElement('div', { bem: 'e:overlay', ref: 'overlay' }),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:headline' },
            this._t('splash.webcam.headline')
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:description' },
            this._t('splash.webcam.description')
          )
        )
      )
    );
  };

  return WebcamComponent;
}(_rowComponent2.default);

exports.default = WebcamComponent;


WebcamComponent.contextTypes = _rowComponent2.default.contextTypes;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var WebcamComponent = function (_BaseComponent) {
  (0, _inherits3.default)(WebcamComponent, _BaseComponent);

  function WebcamComponent() {
    (0, _classCallCheck3.default)(this, WebcamComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _BaseComponent.call(this));

    _this._bindAll('_onWebcamReady');

    _this.state = { webcamReady: false };
    return _this;
  }

  // -------------------------------------------------------------------------- LIFECYCLE

  /**
   * Checks whether this component needs an update
   * @param {Object} nextProps
   * @param {Object} nextState
   */


  WebcamComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
    // This component never updates
    return false;
  };

  /**
   * Gets called when the component is about to unmount. Stops the video
   * stream and kills the video
   */


  WebcamComponent.prototype.componentWillUnmount = function componentWillUnmount() {
    _BaseComponent.prototype.componentWillUnmount.call(this);

    var video = this.refs.video;

    if (this._stream) {
      var track = this._stream.getTracks()[0];
      track && track.stop();
      this._stream.stop && this._stream.stop();
    }
    video.pause();
  };

  /**
   * Gets called after the component has been mounted
   */


  WebcamComponent.prototype.componentDidMount = function componentDidMount() {
    this._resizeVideo();
    this._initVideoStream();
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the webcam is ready to serve a video
   * @private
   */


  WebcamComponent.prototype._onWebcamReady = function _onWebcamReady() {
    this.props.onReady && this.props.onReady();
    this.setState({ webcamReady: true });
  };

  /**
   * Public method that makes a photo from the current video stream
   * @return {Promise}
   */


  WebcamComponent.prototype.makePhoto = function makePhoto() {
    if (!this.state.webcamReady) {
      return _globals.Promise.reject(new Error('UserMedia stream not ready'));
    }

    var video = this.refs.video;


    return new _globals.Promise(function (resolve, reject) {
      var canvas = document.createElement('canvas');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;

      var context = canvas.getContext('2d');
      context.drawImage(video, 0, 0);

      var image = new window.Image();
      image.addEventListener('load', function () {
        resolve(image);
      });
      image.src = canvas.toDataURL('image/png');
    });
  };

  /**
   * Resizes the video to fit the container
   * @private
   */


  WebcamComponent.prototype._resizeVideo = function _resizeVideo() {
    var _refs = this.refs;
    var video = _refs.video;
    var container = _refs.container;

    var innerDimensions = _globals.Utils.getInnerDimensionsForElement(container);

    video.width = innerDimensions.x;
    video.height = innerDimensions.y;
  };

  /**
   * Initializes the video stream
   * @private
   */


  WebcamComponent.prototype._initVideoStream = function _initVideoStream() {
    var _this2 = this;

    var video = this.refs.video;

    var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;

    if (!getUserMedia) {
      var errorModal = _modalManager2.default.instance.displayError(this._t('errors.webcamNotSupported.title'), this._t('errors.webcamNotSupported.text'));
      errorModal.on('close', function () {
        return _this2.props.onBack();
      });
      return;
    }

    getUserMedia.call(navigator, { video: true }, function (stream) {
      _this2._stream = stream;
      video.onloadedmetadata = _this2._onWebcamReady;
      video.src = window.URL.createObjectURL(stream);
    }, function (err) {
      console.error && console.error(err);

      var errorModal = _modalManager2.default.instance.displayError(_this2._t('errors.webcamUnavailable.title'), _this2._t('errors.webcamUnavailable.text', { error: err.name }), true);

      errorModal.on('close', function () {
        return _this2.props.onBack();
      });
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */


  WebcamComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:webcam', ref: 'container' },
      _globals.ReactBEM.createElement('video', { bem: 'e:video', ref: 'video', autoPlay: true })
    );
  };

  return WebcamComponent;
}(_globals.BaseComponent);

exports.default = WebcamComponent;


WebcamComponent.propTypes = {
  onReady: _globals.React.PropTypes.func
};

WebcamComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _screenComponent = __webpack_require__(40);

var _screenComponent2 = _interopRequireDefault(_screenComponent);

var _topBarComponent = __webpack_require__(55);

var _topBarComponent2 = _interopRequireDefault(_topBarComponent);

var _webcamComponent = __webpack_require__(247);

var _webcamComponent2 = _interopRequireDefault(_webcamComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */
var WebcamScreenComponent = function (_ScreenComponent) {
  (0, _inherits3.default)(WebcamScreenComponent, _ScreenComponent);

  function WebcamScreenComponent() {
    (0, _classCallCheck3.default)(this, WebcamScreenComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, _ScreenComponent.call(this));

    _this._bindAll('_onCancel', '_onWebcamReady', '_onShutterClicked');
    _this.state = { webcamReady: false };
    return _this;
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Gets called when the webcam is ready
   * @private
   */


  WebcamScreenComponent.prototype._onWebcamReady = function _onWebcamReady() {
    this.setState({ webcamReady: true });
  };

  /**
   * Gets called when the user clicks the cancel button in the top bar
   * @private
   */


  WebcamScreenComponent.prototype._onCancel = function _onCancel() {
    this.props.app.switchToScreen('back');
  };

  /**
   * Gets called when the shutter button has been clicked
   * @private
   */


  WebcamScreenComponent.prototype._onShutterClicked = function _onShutterClicked() {
    var _this2 = this;

    var webcam = this.refs.webcam;
    webcam.makePhoto().then(function (image) {
      _this2.props.app.setImage(image);
    }).catch(function (e) {
      console.error && console.error(e);
    });
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Renders this screen
   * @return {ReactBEM.Element}
   * @private
   */


  WebcamScreenComponent.prototype._renderScreen = function _renderScreen() {
    return _globals.ReactBEM.createElement(
      'div',
      { bem: '$b:webcamScreen' },
      _globals.ReactBEM.createElement(
        _topBarComponent2.default,
        {
          label: this._t('webcam.headline') },
        _globals.ReactBEM.createElement(
          'bem',
          { specifier: '$b:topBar' },
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:cancelButton', onClick: this._onCancel },
            this._t('generic.cancel')
          ),
          _globals.ReactBEM.createElement(
            'div',
            { bem: 'e:label' },
            this._t('webcam.headline')
          )
        )
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:canvas e:container e:row' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:container e:cell' },
          _globals.ReactBEM.createElement(_webcamComponent2.default, {
            ref: 'webcam',
            onReady: this._onWebcamReady,
            onBack: this._onCancel })
        )
      ),
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$b:controls $e:container e:row' },
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:cell' },
          _globals.ReactBEM.createElement(
            'bem',
            { specifier: 'b:webcamScreen' },
            _globals.ReactBEM.createElement(
              'div',
              {
                bem: '$e:shutterButton',
                onClick: this._onShutterClicked,
                className: this.state.webcamReady ? 'is-active' : false },
              _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('controls/webcam/shutter.png', true) })
            )
          )
        )
      )
    );
  };

  return WebcamScreenComponent;
}(_screenComponent2.default);

exports.default = WebcamScreenComponent;


WebcamScreenComponent.contextTypes = _screenComponent2.default.contextTypes;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TopBarBackButtonComponent = function (_BaseComponent) {
  (0, _inherits3.default)(TopBarBackButtonComponent, _BaseComponent);

  function TopBarBackButtonComponent() {
    (0, _classCallCheck3.default)(this, TopBarBackButtonComponent);
    return (0, _possibleConstructorReturn3.default)(this, _BaseComponent.apply(this, arguments));
  }

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Renders this component
   * @return {ReactBEM.Element}
   */
  TopBarBackButtonComponent.prototype.renderWithBEM = function renderWithBEM() {
    return _globals.ReactBEM.createElement(
      'bem',
      { specifier: '$b:topBar' },
      _globals.ReactBEM.createElement(
        'div',
        { bem: '$e:backButton', onClick: this.props.onClick },
        _globals.ReactBEM.createElement('img', { bem: 'e:icon', src: this._getAssetPath('top-bar/back.png', true) }),
        _globals.ReactBEM.createElement(
          'div',
          { bem: 'e:label' },
          this.props.label
        )
      )
    );
  };

  return TopBarBackButtonComponent;
}(_globals.BaseComponent); /** @jsx ReactBEM.createElement **/
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = TopBarBackButtonComponent;


TopBarBackButtonComponent.contextTypes = _globals.BaseComponent.contextTypes;

/***/ },
/* 250 */
/***/ function(module, exports) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = {
  EVENTS: {
    RENDER: 'render',
    EXPORT: 'export',
    CLOSE: 'close',
    ZOOM_DONE: 'zoom:done',
    OPERATION_CREATED: 'operation:created',
    OPERATION_UPDATED: 'operation:updated',
    OPERATION_REMOVED: 'operation:removed',
    FEATURES_DISABLED: 'editor:features:disabled',
    FEATURES_ENABLED: 'editor:features:enabled',
    FEATURES_UPDATED: 'editor:features:updated',
    COLORPICKER_OPEN: 'colorpicker:open',
    HISTORY_UPDATED: 'history:update',
    HISTORY_UNDO: 'history:undo',
    WINDOW_RESIZE: 'window:resize',
    CONTROLS_SWITCHED: 'controls:switched'
  },
  DEFAULTS: {
    TEXT: 'Double-click to edit',
    CROP_RATIOS: [{ name: 'custom', ratio: '*', selected: true }, { name: 'square', ratio: 1 }, { name: '4-3', ratio: 1.33 }, { name: '16-9', ratio: 1.77 }],
    FONTS: [{ name: 'helvetica', fontFamily: 'Helvetica', fontWeight: 'normal' }, { name: 'verdana', fontFamily: 'Verdana', fontWeight: 'normal' }, { name: 'timesnewroman', fontFamily: 'Times New Roman', fontWeight: 'normal' }, { name: 'impact', fontFamily: 'Impact', fontWeight: 'normal', default: true }],
    STICKER_CATEGORIES: [{
      'name': 'glasses',
      'label': 'Glasses',
      'stickers': [{
        'name': 'glasses-nerd',
        'label': 'Nerd glasses',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/glasses-nerd.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/glasses-nerd.png',
            'width': 221,
            'height': 91
          }
        }
      }, {
        'name': 'glasses-normal',
        'label': 'Normal glasses',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/glasses-normal.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/glasses-normal.png',
            'width': 249,
            'height': 87
          }
        }
      }, {
        'name': 'glasses-shutter-green',
        'label': 'Green shutter glasses',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/glasses-shutter-green.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/glasses-shutter-green.png',
            'width': 235,
            'height': 89
          }
        }
      }, {
        'name': 'glasses-shutter-yellow',
        'label': 'Yellow shutter glasses',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/glasses-shutter-yellow.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/glasses-shutter-yellow.png',
            'width': 236,
            'height': 89
          }
        }
      }, {
        'name': 'glasses-sun',
        'label': 'Sun glasses',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/glasses-sun.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/glasses-sun.png',
            'width': 250,
            'height': 87
          }
        }
      }]
    }, {
      'name': 'hats',
      'label': 'Hats',
      'stickers': [{
        'name': 'hat-cap',
        'label': 'Cap',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/hat-cap.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/hat-cap.png',
            'width': 237,
            'height': 189
          }
        }
      }, {
        'name': 'hat-cylinder',
        'label': 'Cylinder',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/hat-cylinder.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/hat-cylinder.png',
            'width': 225,
            'height': 176
          }
        }
      }, {
        'name': 'hat-party',
        'label': 'Party hat',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/hat-party.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/hat-party.png',
            'width': 140,
            'height': 226
          }
        }
      }, {
        'name': 'hat-sheriff',
        'label': 'Sheriff hat',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/hat-sheriff.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/hat-sheriff.png',
            'width': 251,
            'height': 129
          }
        }
      }]
    }, {
      'name': 'beards',
      'label': 'Beards',
      'stickers': [{
        'name': 'mustache-long',
        'label': 'Long mustache',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/mustache-long.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/mustache-long.png',
            'width': 199,
            'height': 182
          }
        }
      }, {
        'name': 'mustache1',
        'label': 'Brown mustache',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/mustache1.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/mustache1.png',
            'width': 238,
            'height': 106
          }
        }
      }, {
        'name': 'mustache2',
        'label': 'Black mustache',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/mustache2.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/mustache2.png',
            'width': 250,
            'height': 82
          }
        }
      }, {
        'name': 'mustache3',
        'label': 'Brown mustache',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/mustache3.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/mustache3.png',
            'width': 250,
            'height': 94
          }
        }
      }]
    }, {
      'name': 'misc',
      'label': 'Misc',
      'stickers': [{
        'name': 'heart',
        'label': 'Heart',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/heart.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/heart.png',
            'width': 185,
            'height': 174
          }
        }
      }, {
        'name': 'pipe',
        'label': 'Pipe',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/pipe.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/pipe.png',
            'width': 240,
            'height': 112
          }
        }
      }, {
        'name': 'snowflake',
        'label': 'Snow flake',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/snowflake.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/snowflake.png',
            'width': 204,
            'height': 171
          }
        }
      }, {
        'name': 'star',
        'label': 'Star',
        'images': {
          'mediaThumb': {
            'uri': 'stickers/thumb/star.png',
            'width': 100,
            'height': 100
          },
          'mediaBase': {
            'uri': 'stickers/base/star.png',
            'width': 201,
            'height': 191
          }
        }
      }]
    }]
  }
};

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _exporter = __webpack_require__(257);

var _exporter2 = _interopRequireDefault(_exporter);

var _imageResizer = __webpack_require__(260);

var _imageResizer2 = _interopRequireDefault(_imageResizer);

var _operations = __webpack_require__(255);

var _operations2 = _interopRequireDefault(_operations);

var _controls = __webpack_require__(252);

var _controls2 = _interopRequireDefault(_controls);

var _features = __webpack_require__(253);

var _features2 = _interopRequireDefault(_features);

var _zoom = __webpack_require__(256);

var _zoom2 = _interopRequireDefault(_zoom);

var _history = __webpack_require__(254);

var _history2 = _interopRequireDefault(_history);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The Editor class is an interface to the SDK, managing operations, rendering,
 * history, zoom etc.
 * @class
 * @memberof PhotoEditorSDK.UI.ReactUI
 */
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Editor = function (_EventEmitter) {
  (0, _inherits3.default)(Editor, _EventEmitter);

  function Editor(ui, options, mediator) {
    (0, _classCallCheck3.default)(this, Editor);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._ui = ui;
    _this._options = options;
    _this._mediator = mediator;
    _this._ready = false;
    _this._padding = [0, 0, 0, 0];

    _this._initSDK();

    _this._onZoom = _this._onZoom.bind(_this);
    _this._onUndo = _this._onUndo.bind(_this);

    _this.operations = new _operations2.default(_this, _this._sdk, _this._mediator);
    _this.controls = new _controls2.default(_this, _this._sdk, _this._mediator);
    _this.features = new _features2.default(_this, _this._sdk, _this._mediator);
    _this.history = new _history2.default(_this, _this._sdk, _this._mediator);
    _this.history.on('undo', _this._onUndo);
    _this.zoom = new _zoom2.default(_this, _this._sdk, _this._mediator);
    _this.zoom.on('set', _this._onZoom);

    _this._initSerializers();

    // Rendering
    _this._running = false;
    _this._renderRequested = true;
    _this._renderCallbacks = [];
    _this._animationFrameRequest = null;

    _this.render = _this.render.bind(_this);
    _this._tick = _this._tick.bind(_this);

    _this._initWatermark();
    return _this;
  }

  // -------------------------------------------------------------------------- INITIALIZATION

  /**
   * Sets the given image to be rendered. If the image needs to be resized to fit into a
   * WebGL texture or to match the `maxMegaPixels` option, resizing is done before setting
   * the image.
   * @param {Image} image
   * @param {Boolean} resetEditor [description]
   */


  Editor.prototype.setImage = function setImage() {
    var _this2 = this;

    var image = arguments.length <= 0 || arguments[0] === undefined ? this._options.editor.image : arguments[0];
    var resetEditor = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    var renderer = this._sdk.getRenderer();
    var initialDimensions = new _globals.Vector2(image.width, image.height);
    var maxPixels = this.getMaxMegapixels() * 1000000;
    var maxDimensions = renderer.getMaxDimensions();

    if (resetEditor) {
      this.reset();
    }

    var imageResizer = new _imageResizer2.default(image, maxPixels, maxDimensions);
    var exif = null;

    var done = function done(image) {
      var dimensions = arguments.length <= 1 || arguments[1] === undefined ? initialDimensions : arguments[1];
      var resizeReason = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

      _this2._setImage(image, exif, dimensions);

      _this2._ready = true;
      _this2.emit('ready');
    };

    if (!imageResizer.needsResize()) {
      done(image);
    } else {
      this.emit('resize');
      exif = this._sdk.parseExif(image);
      imageResizer.resize().then(function (_ref) {
        var canvas = _ref.canvas;
        var dimensions = _ref.dimensions;
        var reason = _ref.reason;

        // Flag canvas as JPEG so that export will recognize that
        // it needs to restore EXIF data
        canvas.src = 'data:image/jpeg;base64,';

        _this2.emit('resized', { dimensions: dimensions, reason: reason });
        done(canvas, dimensions, reason);
      });
    }
  };

  /**
   * Initializes the watermark operation
   * @private
   */


  Editor.prototype._initWatermark = function _initWatermark() {
    if (this._options.watermark) {
      this._watermarkOperation = this.operations.getOrCreate('watermark', {
        image: this._options.watermark
      });
    }
  };

  /**
   * Initializes the SDK
   * @private
   */


  Editor.prototype._initSDK = function _initSDK() {
    var _options = this._options;
    var logLevel = _options.logLevel;
    var displayWelcomeMessage = _options.displayWelcomeMessage;
    var debug = _options.debug;
    var _options$editor = this._options.editor;
    var smoothDownscaling = _options$editor.smoothDownscaling;
    var preferredRenderer = _options$editor.preferredRenderer;
    var pixelRatio = _options$editor.pixelRatio;

    var rendererOptions = {
      logLevel: logLevel,
      debug: debug,
      displayWelcomeMessage: displayWelcomeMessage,
      pixelRatio: pixelRatio,
      smoothDownscaling: smoothDownscaling,
      transparent: true
    };
    this._sdk = new _globals.SDK(preferredRenderer, rendererOptions);
    window.sdk = this._sdk;
  };

  // -------------------------------------------------------------------------- ZOOMING

  /**
   * Gets called after a new zoom level has been set. Re-renders the editor.
   * @param  {Number} zoom
   * @param  {Function} [callback]
   * @private
   */


  Editor.prototype._onZoom = function _onZoom(zoom) {
    var _this3 = this;

    var callback = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];

    this.fixOffset();
    this.render(function () {
      _this3._mediator.emit(_globals.Constants.EVENTS.ZOOM_DONE);
      callback && callback();
    });
  };

  /**
   * Gets called after an undo happened
   * @private
   */


  Editor.prototype._onUndo = function _onUndo() {
    this.render();
  };

  /**
   * Returns the current rotation
   * @return {Number}
   */


  Editor.prototype.getRotation = function getRotation() {
    return this._sdk.getRotation();
  };

  /**
   * Sets the rotation to the given value
   * @param {Number} rotation
   */


  Editor.prototype.setRotation = function setRotation(rotation) {
    this._sdk.setRotation(rotation);
  };

  /**
   * Returns the current sprite scale
   * @return {Number}
   */


  Editor.prototype.getSpriteScale = function getSpriteScale() {
    return this._sdk.getSpriteScale();
  };

  /**
   * Sets the sprite scale to the given value
   * @param {Number} spriteScale
   */


  Editor.prototype.setSpriteScale = function setSpriteScale(spriteScale) {
    this._sdk.setSpriteScale(spriteScale);
  };

  // -------------------------------------------------------------------------- MISC PRIVATE API

  /**
   * Checks if the control with the tool identifier is enabled
   * @param  {String}  identifier
   * @return {Boolean}
   */


  Editor.prototype.isToolEnabled = function isToolEnabled(identifier) {
    return this._options.editor.tools.indexOf(identifier) !== -1;
  };

  /**
   * Returns the maximum mega pixels
   * @return {Number}
   * @private
   */


  Editor.prototype.getMaxMegapixels = function getMaxMegapixels() {
    var maxMegaPixels = this._options.editor.maxMegaPixels;

    return _globals.Utils.isMobile() ? maxMegaPixels.mobile : maxMegaPixels.desktop;
  };

  // -------------------------------------------------------------------------- MISC PUBLIC API

  /**
   * Returns the output sprite's current dimensions
   * @param {Boolean} incorporateSpriteScale = false
   * @return {PhotoEditorSDK.Math.Vector2}
   */


  Editor.prototype.getOutputDimensions = function getOutputDimensions() {
    var incorporateSpriteScale = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

    return this._sdk.getOutputDimensions(incorporateSpriteScale);
  };

  /**
   * Returns the final dimensions that the input image would have
   * after all existing operations have been applied
   * @param {Boolean} incorporateSpriteScale = false
   * @return {PhotoEditorSDK.Math.Vector2}
   */


  Editor.prototype.getFinalDimensions = function getFinalDimensions() {
    var incorporateSpriteScale = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

    return this._sdk.getFinalDimensions(incorporateSpriteScale);
  };

  /**
   * Returns the canvas dimensions
   * @param  {Boolean} subtractPadding = true
   * @return {PhotoEditorSDK.Math.Vector2}
   */


  Editor.prototype.getCanvasDimensions = function getCanvasDimensions() {
    var subtractPadding = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

    var canvas = this._sdk.getCanvas();
    var dimensions = new _globals.Vector2(canvas.offsetWidth, canvas.offsetHeight);
    if (subtractPadding) {
      dimensions.subtract(this._padding[1] + this._padding[3], this._padding[0] + this._padding[2]);
    }
    return dimensions;
  };

  /**
   * Sets the given image
   * @param {Image} image
   * @param {PhotoEditorSDK.EXIF} [exif]
   * @param {PhotoEditorSDK.Math.Vector2} [dimensions]
   * @private
   */


  Editor.prototype._setImage = function _setImage() {
    var image = arguments.length <= 0 || arguments[0] === undefined ? this._options.editor.image : arguments[0];
    var exif = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
    var dimensions = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

    // Invalidate caches
    this._sdk.setAllOperationsToDirty();

    this._options.editor.image = image;
    this._sdk.setImage(image, exif, dimensions);

    this.zoom.set('auto');

    this.emit('new-image');
  };

  /**
   * Exports an image
   * @param {Boolean} download = false
   * @return {Promise}
   */


  Editor.prototype.export = function _export() {
    var _this4 = this;

    var download = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

    if (this._watermarkOperation) {
      this._watermarkOperation.setEnabled(false);
    }

    // Invalidate caches
    this._sdk.setAllOperationsToDirty();

    var options = this._options.editor.export;
    var exporter = new _exporter2.default(this._sdk, options, download);
    return exporter.export().then(function (output) {
      _this4.emit('export', output);
      _this4._mediator.emit(_globals.Constants.EVENTS.EXPORT, output, _this4);

      if (_this4._watermarkOperation) {
        _this4._watermarkOperation.setEnabled(true);
      }

      // Invalidate caches
      _this4._sdk.setAllOperationsToDirty();

      return output;
    });
  };

  // -------------------------------------------------------------------------- SERIALIZATION

  /**
   * Initializes the serializers and deserializers
   * @private
   */


  Editor.prototype._initSerializers = function _initSerializers() {
    this._serializers = {
      '1.0.0': __webpack_require__(266).default
    };
  };

  /**
   * Serializes the editor state for the given version
   * @param  {Object} options = {}
   * @param  {String} version = '1.0.0'
   * @return {Promise}
   */


  Editor.prototype.serialize = function serialize() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var version = arguments.length <= 1 || arguments[1] === undefined ? '1.0.0' : arguments[1];

    var Serializer = this._serializers[version];
    if (!Serializer) {
      return _globals.Promise.reject(new Error('No serializer for version ' + version + ' found.'));
    }
    var serializer = new Serializer(this);
    return serializer.serialize(options);
  };

  /**
   * Deserializes the given data
   * @param  {Object} data
   * @return {Promise}
   */


  Editor.prototype.deserialize = function deserialize(data) {
    var Serializer = this._serializers[data.version];
    if (!Serializer) {
      return _globals.Promise.reject(new Error('No serializer for version ' + data.version + ' found.'));
    }
    var serializer = new Serializer(this);
    return serializer.deserialize(data);
  };

  // -------------------------------------------------------------------------- RENDERING

  /**
   * Applies the rendering offset
   * @private
   */


  Editor.prototype._applyOffset = function _applyOffset() {
    var offset = this._offset.clone();

    offset.x -= this._padding[1] / 2;
    offset.x += this._padding[3] / 2;

    offset.y -= this._padding[2] / 2;
    offset.y += this._padding[0] / 2;

    this._sdk.setOffset(offset);
  };

  /**
   * Starts the render loop
   */


  Editor.prototype.start = function start() {
    this.zoom.set('auto');
    this._animationFrameRequest = (0, _globals.requestAnimationFrame)(this._tick);
  };

  /**
   * Stops the render loop
   */


  Editor.prototype.stop = function stop() {
    this._running = false;
    if (this._animationFrameRequest) {
      (0, _globals.cancelAnimationFrame)(this._animationFrameRequest);
      this._renderCallbacks = [];
    }
  };

  /**
   * Requests a render, adds `callback` to the render callbacks
   * @param  {Function} [callback]
   */


  Editor.prototype.render = function render(callback) {
    this._renderRequested = true;
    if (callback) {
      this._renderCallbacks.push(callback);
    }
  };

  /**
   * Sets the offset to the given one
   * @param {PhotoEditorSDK.Math.Vector2} offset
   */


  Editor.prototype.setOffset = function setOffset(offset) {
    this._offset = this._clampOffset(offset);
  };

  /**
   * Returns the current offset
   * @returns {PhotoEditorSDK.Math.Vector2}
   */


  Editor.prototype.getOffset = function getOffset() {
    return this._offset;
  };

  /**
   * Makes sure the image stays inside the viewport
   */


  Editor.prototype.fixOffset = function fixOffset() {
    this.setOffset(this._sdk.getOffset());
  };

  /**
   * Fixes the given offset to make sure the image stays inside the viewport
   * @private
   */


  Editor.prototype._clampOffset = function _clampOffset(offset) {
    var renderer = this._sdk.getRenderer();
    var rendererDimensions = new _globals.Vector2(renderer.getWidth(), renderer.getHeight());
    var outputDimensions = this._sdk.getOutputDimensions(false);

    var minOffset = rendererDimensions.clone().subtract(outputDimensions).divide(2).clamp(null, new _globals.Vector2(0, 0));

    var maxOffset = outputDimensions.clone().subtract(rendererDimensions).divide(2).clamp(new _globals.Vector2(0, 0), null);

    var newOffset = offset.clone().clamp(minOffset, maxOffset).round();

    return newOffset;
  };

  /**
   * Gets called when an animation frame is being processed. Renders the
   * canvas if necessary, requests another animation frame callbacks
   * @private
   */


  Editor.prototype._tick = function _tick() {
    var _this5 = this;

    if (this._renderRequested) {
      (function () {
        var callbacks = _this5._renderCallbacks.slice(0);
        _this5._renderCallbacks = [];

        _this5._render().then(function () {
          callbacks.forEach(function (r) {
            return r();
          });
          _this5._animationFrameRequest = (0, _globals.requestAnimationFrame)(_this5._tick);
        });
        _this5._renderRequested = false;
      })();
    } else {
      this._animationFrameRequest = (0, _globals.requestAnimationFrame)(this._tick);
    }
  };

  /**
   * Triggers a render
   * @private
   */


  Editor.prototype._render = function _render() {
    var _this6 = this;

    if (!this._ready) return _globals.Promise.resolve();

    this._applyOffset();

    return this._sdk.render().then(function () {
      _this6._lastOutputBounds = _this6._sdk.getSprite().getBounds();
    }).catch(function (e) {
      _this6.emit('render-error', e);
    });
  };

  /**
   * Resets everything
   */


  Editor.prototype.reset = function reset() {
    this._sdk.reset();

    this.history.reset();
    this.operations.reset();
  };

  // -------------------------------------------------------------------------- DISPOSAL

  /**
   * Cleans this instance up
   */


  Editor.prototype.dispose = function dispose() {
    this.stop();

    this._sdk.dispose();
  };

  // -------------------------------------------------------------------------- GETTERS / SETTERS

  /**
   * Checks if the Editor is ready to render
   * @return {Boolean}
   */


  Editor.prototype.isReady = function isReady() {
    return this._ready;
  };

  /**
   * Returns the renderer
   * @return {PhotoEditorSDK.Engine.BaseRenderer}
   */


  Editor.prototype.getRenderer = function getRenderer() {
    return this._sdk.getRenderer();
  };

  /**
   * Returns the SDK
   * @return {PhotoEditorSDK}
   */


  Editor.prototype.getSDK = function getSDK() {
    return this._sdk;
  };

  /**
   * Returns the input image dimensions
   * @return {PhotoEditorSDK.Math.Vector2}s
   */


  Editor.prototype.getInputDimensions = function getInputDimensions() {
    return this._sdk.getInputDimensions();
  };

  /**
   * Returns the padding values
   * @return {Number[]}
   */


  Editor.prototype.getPadding = function getPadding() {
    return this._padding;
  };

  /**
   * Sets the padding (top, right, bottom, left)
   * @param {Number[]} padding
   */


  Editor.prototype.setPadding = function setPadding(padding) {
    if (!padding) {
      this._padding = [0, 0, 0, 0];
    } else {
      this._padding = padding;
    }
  };

  /**
   * Returns the image
   * @return {Image}
   */


  Editor.prototype.getImage = function getImage() {
    return this._options.editor.image;
  };

  /**
   * Returns the options
   * @return {Object}
   */


  Editor.prototype.getOptions = function getOptions() {
    return this._options;
  };

  /**
   * Returns the UI
   * @return {PhotoEditorSDK.UI.ReactUI}
   */


  Editor.prototype.getUI = function getUI() {
    return this._ui;
  };

  /**
   * Broadcasts a crop to all operations that need to be changed
   * @param  {PhotoEditorSDK.Operations.CropOperation} operation
   * @param  {Object} options
   */


  Editor.prototype.broadcastCrop = function broadcastCrop(operation, options) {
    var spriteOperation = this.operations.get('sprite');
    if (spriteOperation) {
      spriteOperation.crop(operation, options);
    }
  };

  /**
   * Broadcasts a flip to all operations that need to be changed
   * @param  {String} direction
   */


  Editor.prototype.broadcastFlip = function broadcastFlip(direction) {
    var _this7 = this;

    var flippableOperations = ['linear-focus', 'radial-focus', 'sprite'];
    flippableOperations.forEach(function (identifier) {
      var operation = _this7.operations.get(identifier);
      if (!operation) {
        return;
      }
      operation.flip(direction);
    });
  };

  /**
   * Broadcasts a rotation to all operations that need to be changed
   * @param  {Number} degrees
   */


  Editor.prototype.broadcastRotate = function broadcastRotate(degrees) {
    var _this8 = this;

    var flippableOperations = ['crop', 'linear-focus', 'radial-focus', 'sprite'];
    flippableOperations.forEach(function (identifier) {
      var operation = _this8.operations.get(identifier);
      if (!operation) {
        return;
      }
      operation.rotate(degrees);
    });
  };

  return Editor;
}(_globals.EventEmitter);

exports.default = Editor;

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _controls = __webpack_require__(204);

var Controls = _interopRequireWildcard(_controls);

var _globals = __webpack_require__(1);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var EditorControls = function () {
  function EditorControls(editor, sdk, mediator) {
    (0, _classCallCheck3.default)(this, EditorControls);

    this._editor = editor;
    this._sdk = sdk;
    this._mediator = mediator;

    this._options = this._editor.getOptions();
    this._available = _globals.SDKUtils.extend({}, Controls, this._options.extensions.controls);
  }

  /**
   * Checks if the control with the given identifier is selectable
   * @param  {String}  identifier
   * @return {Boolean}
   */


  EditorControls.prototype.isEnabled = function isEnabled(identifier) {
    var control = this.get(identifier);

    if (!control) {
      _globals.Log.info('EditorControls#isEnabled: Unknown control: ' + identifier);
      return false;
    }

    return control.isAvailable && control.isAvailable(this._editor);
  };

  /**
   * Returns the control with the given identifier
   * @param  {String} identifier
   * @return {Control}
   */


  EditorControls.prototype.get = function get(identifier) {
    return this._available[identifier];
  };

  /**
   * Returns the available controls
   * @return {Object}
   */


  EditorControls.prototype.getAvailable = function getAvailable() {
    return this._available;
  };

  return EditorControls;
}();

exports.default = EditorControls;

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorFeatures = function () {
  function EditorFeatures(editor, sdk, mediator) {
    (0, _classCallCheck3.default)(this, EditorFeatures);

    this._editor = editor;
    this._sdk = sdk;
    this._mediator = mediator;

    this._options = this._editor.getOptions();

    this._features = {
      drag: this._options.editor.enableDrag,
      zoom: this._options.editor.enableZoom
    };
  }

  /**
   * Checks if the feature with the given identifier is enabled
   * @param  {String}  identifier
   * @return {Boolean}
   */


  EditorFeatures.prototype.isEnabled = function isEnabled(identifier) {
    var capitalizedIdentifier = identifier.charAt(0).toUpperCase() + identifier.slice(1);
    var optionEnabled = this._options.editor['enable' + capitalizedIdentifier];
    return this._features[identifier] && optionEnabled;
  };

  /**
   * Enables the features with the given identifiers
   * @param  {String[]} identifiers
   */


  EditorFeatures.prototype.enable = function enable() {
    var _this = this;

    for (var _len = arguments.length, identifiers = Array(_len), _key = 0; _key < _len; _key++) {
      identifiers[_key] = arguments[_key];
    }

    identifiers.forEach(function (identifier) {
      _this._features[identifier] = true;
    });
    this._mediator.emit(_globals.Constants.EVENTS.FEATURES_ENABLED, identifiers);
    this._mediator.emit(_globals.Constants.EVENTS.FEATURES_UPDATED, identifiers);
  };

  /**
   * Disables the features with the given identifiers
   * @param  {String[]} identifiers
   */


  EditorFeatures.prototype.disable = function disable() {
    var _this2 = this;

    for (var _len2 = arguments.length, identifiers = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      identifiers[_key2] = arguments[_key2];
    }

    identifiers.forEach(function (identifier) {
      _this2._features[identifier] = false;
    });
    this._mediator.emit(_globals.Constants.EVENTS.FEATURES_DISABLED, identifiers);
    this._mediator.emit(_globals.Constants.EVENTS.FEATURES_UPDATED, identifiers);
  };

  return EditorFeatures;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = EditorFeatures;

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorHistory = function (_EventEmitter) {
  (0, _inherits3.default)(EditorHistory, _EventEmitter);

  function EditorHistory(editor, sdk, mediator) {
    (0, _classCallCheck3.default)(this, EditorHistory);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._editor = editor;
    _this._sdk = sdk;
    _this._mediator = mediator;

    _this._history = [];
    return _this;
  }

  /**
   * Checks if there are any history items available
   * @return {Boolean}
   */


  EditorHistory.prototype.isAvailable = function isAvailable() {
    return this._history.length !== 0;
  };

  /**
   * Adds the given data to the history
   * @param {PhotoEditorSDK.Operation} operation
   * @param {Object} options
   * @param {Boolean} existent
   * @param {Function} [undo]
   * @return {Object}
   */


  EditorHistory.prototype.add = function add(operation, options, existent) {
    var _this2 = this;

    var undo = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

    var historyItem = void 0;
    if (operation instanceof Array) {
      var items = operation;
      this._history.push(items);
      items.forEach(function (item) {
        _this2._mediator.emit(_globals.Constants.EVENTS.HISTORY_UPDATED, item.operation);
      });

      historyItem = items;
    } else {
      historyItem = {
        operation: operation, options: options, existent: existent, undo: undo
      };
      this._history.push(historyItem);
      this._mediator.emit(_globals.Constants.EVENTS.HISTORY_UPDATED, operation);
    }
    return historyItem;
  };

  /**
   * Reverts the last change
   */


  EditorHistory.prototype.undo = function undo() {
    var _this3 = this;

    var operations = this._editor.operations;

    var lastItem = this._history.pop();
    if (lastItem) {
      var items = [].concat(lastItem);

      items.forEach(function (_ref) {
        var operation = _ref.operation;
        var existent = _ref.existent;
        var options = _ref.options;
        var undo = _ref.undo;

        if (!existent) {
          operations.remove(operation);
        } else {
          operation = operations.getOrCreate(operation.constructor.identifier);
          operation.set(options);
          _this3._mediator.emit(_globals.Constants.EVENTS.OPERATION_UPDATED, operation);
        }

        if (typeof undo === 'function') {
          undo(operation, options);
        }

        _this3._mediator.emit(_globals.Constants.EVENTS.HISTORY_UPDATED, operation);
        _this3._mediator.emit(_globals.Constants.EVENTS.HISTORY_UNDO, operation);
      });

      this.emit('undo');
    }
  };

  /**
   * Resets the history
   */


  EditorHistory.prototype.reset = function reset() {
    this._history = [];
  };

  return EditorHistory;
}(_globals.EventEmitter); /*
                           * This file is part of PhotoEditorSDK.
                           *
                           * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                           * All rights reserved.
                           *
                           * Redistribution and use in source and binary forms, without
                           * modification, are permitted provided that the following license agreement
                           * is approved and a legal/financial contract was signed by the user.
                           * The license agreement can be found under following link:
                           *
                           * https://www.photoeditorsdk.com/LICENSE.txt
                           */

exports.default = EditorHistory;

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EditorOperations = function () {
  function EditorOperations(editor, sdk, mediator) {
    (0, _classCallCheck3.default)(this, EditorOperations);

    this._editor = editor;
    this._sdk = sdk;
    this._mediator = mediator;

    this._available = this._sdk.getOperations();
    this._map = {};
    this._stack = this._sdk.getOperationsStack();
    this._preferredOrder = this._editor.getOptions().editor.operationsOrder;

    this._fixStack();
  }

  /**
   * Checks whether an operation with the given identifier exists
   * @param {String} identifier
   * @return {Boolean}
   */


  EditorOperations.prototype.exists = function exists(identifier) {
    return !!this._map[identifier];
  };

  /**
   * Adds the given operation to the stack
   * @param {PhotoEditorSDK.Operation} operation
   */


  EditorOperations.prototype.add = function add(operation) {
    var _this = this;

    var identifier = operation.constructor.identifier;
    operation.on('updated', function () {
      _this._mediator.emit(_globals.Constants.EVENTS.OPERATION_UPDATED, operation);
    });
    var index = this._preferredOrder.indexOf(identifier);
    if (index === -1) {
      throw new Error('EditorOperations#add: `' + identifier + '` does not appear in `preferredOperationOrder`');
    }
    this._stack.set(index, operation);
    this._map[identifier] = operation;

    this._mediator.emit(_globals.Constants.EVENTS.OPERATION_CREATED, operation);
  };

  /**
   * Removes the given operation from the stack
   * @param  {PhotoEditorSDK.Operation} operation
   */


  EditorOperations.prototype.remove = function remove(operation) {
    var identifier = operation.constructor.identifier;
    var stack = this._stack.getStack();

    // Remove operation from map
    if (this._map[identifier] === operation) {
      delete this._map[identifier];
    }

    // Remove operation from stack
    var index = stack.indexOf(operation);
    if (index !== -1) {
      this._stack.removeAt(index);

      // Set all following operations to dirty, since they might
      // have cached stuff drawn by the removed operation
      for (var i = index + 1; i < stack.length; i++) {
        var _operation = stack[i];
        if (!_operation) continue;
        _operation.setDirty(true);
      }

      this._mediator.emit(_globals.Constants.EVENTS.OPERATION_REMOVED, operation);
    }
  };

  /**
   * Returns the operation with the given identifier
   * @param  {String} identifier
   * @return {PhotoEditorSDK.Operation}
   */


  EditorOperations.prototype.get = function get(identifier) {
    return this._map[identifier];
  };

  /**
   * If the operation with the given identifier already exists, it returns
   * the existing operation. Otherwise, it creates and returns a new one.
   * @param  {String} identifier
   * @param  {Object} options
   * @return {PhotoEditorSDK.Operation}
   */


  EditorOperations.prototype.getOrCreate = function getOrCreate(identifier) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    if (this._map[identifier]) {
      var operation = this._map[identifier];
      return operation;
    } else {
      var Operation = this._available[identifier];
      var _operation2 = new Operation(this._sdk, options);
      this.add(_operation2);
      return _operation2;
    }
  };

  /**
   * Returns the operations stack
   * @return {PhotoEditorSDK.OperationsStack}
   */


  EditorOperations.prototype.getStack = function getStack() {
    return this._stack;
  };

  /**
   * Resets the operations
   */


  EditorOperations.prototype.reset = function reset() {
    this._map = {};
  };

  /**
   * Since the SDK might create some operations upfront (e.g. to fix the EXIF orientation),
   * we might have operations at array positions where they should not be. This method
   * moves them to their appropriate position
   * @private
   */


  EditorOperations.prototype._fixStack = function _fixStack() {
    var _this2 = this;

    var stack = this._stack.getStack().slice();
    this._stack.clear();

    stack.forEach(function (s) {
      _this2.add(s);
    });
  };

  return EditorOperations;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = EditorOperations;

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MIN_ZOOM_DIMENSIONS = 300; /*
                                * This file is part of PhotoEditorSDK.
                                *
                                * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                                * All rights reserved.
                                *
                                * Redistribution and use in source and binary forms, without
                                * modification, are permitted provided that the following license agreement
                                * is approved and a legal/financial contract was signed by the user.
                                * The license agreement can be found under following link:
                                *
                                * https://www.photoeditorsdk.com/LICENSE.txt
                                */

var EditorZoom = function (_EventEmitter) {
  (0, _inherits3.default)(EditorZoom, _EventEmitter);

  function EditorZoom(editor, sdk, mediator) {
    (0, _classCallCheck3.default)(this, EditorZoom);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._editor = editor;
    _this._sdk = sdk;
    _this._mediator = mediator;

    _this._isDefaultZoom = false;
    _this._zoom = _this._sdk.getZoom();
    _this._options = _this._editor.getOptions();

    _this._zoomLevels = [1, 2, 3, 4, 5, 6.25, 8.33, 12.5, 16.66, 25, 33.33, 50, 66.66, 100, 200, 300, 400, 500, 600, 700, 800, 1200, 1600, 3200].map(function (z) {
      return z / 100;
    });
    return _this;
  }

  /**
   * Zooms in the editor
   */


  EditorZoom.prototype.zoomIn = function zoomIn() {
    var newZoom = this._getClosestZoomLevel(this._zoom + 0.001, +1);
    if (!newZoom) return this._zoomLevels[this._zoomLevels.length - 1];
    this.set(newZoom);
  };

  /**
   * Zooms out the editor
   */


  EditorZoom.prototype.zoomOut = function zoomOut() {
    var newZoom = this._getClosestZoomLevel(this._zoom - 0.001, -1);
    if (!newZoom) return this._zoomLevels[0];
    this.set(newZoom);
  };

  /**
   * Returns the closest zoom level to the given one
   * @param  {Number} zoomLevel
   * @param  {Number} direction
   * @return {Number}
   * @private
   */


  EditorZoom.prototype._getClosestZoomLevel = function _getClosestZoomLevel(zoomLevel, direction) {
    if (direction === -1) {
      return this._zoomLevels.filter(function (l) {
        return l < zoomLevel;
      }).pop();
    } else if (direction === 1) {
      return this._zoomLevels.filter(function (l) {
        return l > zoomLevel;
      })[0];
    }
  };

  /**
   * Switches to the previous zoom
   */


  EditorZoom.prototype.undo = function undo() {
    if (!this._previousZoom) return;
    this.set(this._previousZoom);
    this._previousZoom = null;
  };

  /**
   * Sets the zoom to the given one
   * @param {Number} zoom
   * @param {Function} [callback]
   * @param {Boolean} [considerMinimum = true]
   */


  EditorZoom.prototype.set = function set(zoom, callback) {
    var considerMinimum = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

    if (!this._editor.isReady()) {
      return;
    }
    this._previousZoom = this._zoom;

    var newZoom = zoom;
    var defaultZoom = this.getDefault();
    if (zoom === 'auto' || newZoom === defaultZoom) {
      newZoom = defaultZoom;
      zoom = 'auto';

      this._isDefaultZoom = true;
    } else {
      this._isDefaultZoom = false;
    }

    var maxZoom = Math.max(1, defaultZoom * 2);
    var minZoom = considerMinimum ? this.getMinimum() : 0;
    newZoom = Math.max(minZoom, Math.min(maxZoom, newZoom));

    this._zoom = newZoom;
    this._sdk.setZoom(this._zoom);
    this._sdk.setTextureQuality(Math.min(this._zoom, 1));
    this.emit('set', this._zoom, callback);
  };

  /**
   * Returns the default zoom level
   * @return {Number}
   */


  EditorZoom.prototype.getDefault = function getDefault() {
    var finalDimensions = this._editor.getFinalDimensions(false);
    var canvasDimensions = this._editor.getCanvasDimensions();
    var defaultDimensions = _globals.SDKUtils.resizeVectorToFit(finalDimensions, canvasDimensions);

    return defaultDimensions.divide(finalDimensions).x;
  };

  /**
   * Returns the minimum zoom level
   * @return {Number}
   */


  EditorZoom.prototype.getMinimum = function getMinimum() {
    var finalDimensions = this._editor.getFinalDimensions();
    var minimumDimensions = _globals.SDKUtils.resizeVectorToFit(finalDimensions, new _globals.Vector2(MIN_ZOOM_DIMENSIONS, MIN_ZOOM_DIMENSIONS));

    return minimumDimensions.divide(finalDimensions).x;
  };

  /**
   * Checks if the editor is at the default zoom level
   * @return {Boolean}
   */


  EditorZoom.prototype.isDefault = function isDefault() {
    return this._isDefaultZoom;
  };

  /**
   * Returns the current zoom level
   * @return {Number}
   */


  EditorZoom.prototype.get = function get() {
    return this._zoom;
  };

  return EditorZoom;
}(_globals.EventEmitter);

exports.default = EditorZoom;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

var _fileDownloader = __webpack_require__(258);

var _fileDownloader2 = _interopRequireDefault(_fileDownloader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Exporter = function () {
  function Exporter(sdk, options, download) {
    (0, _classCallCheck3.default)(this, Exporter);

    this._sdk = sdk;
    this._options = options;
    this._download = download;
  }

  /**
   * Exports the image / data url
   * @return {Promise}
   */


  Exporter.prototype.export = function _export() {
    var _this = this;

    var renderType = this._getRenderType();

    return this._sdk.export(renderType, this._options.format, this._options.quality).then(function (data) {
      if (_this._download) {
        _this._downloadData(renderType, data);
      }
      return data;
    });
  };

  /**
   * Downloads the data using the given render type
   * @param  {RenderType} renderType
   * @param  {String} data
   * @private
   */


  Exporter.prototype._downloadData = function _downloadData(renderType, data) {
    switch (renderType) {
      case _globals.RenderType.DATAURL:
        _fileDownloader2.default.downloadDataURL(data, this._options.fileBasename);
        break;
      case _globals.RenderType.MSBLOB:
        _fileDownloader2.default.downloadMSBlob(data, this._options.fileBasename);
        break;
    }
  };

  /**
   * Returns the render type for this export
   * @return {RenderType}
   * @private
   */


  Exporter.prototype._getRenderType = function _getRenderType() {
    var options = this._options;
    if (options.type !== _globals.RenderType.IMAGE || !this._download) {
      return options.type;
    } else {
      if (_globals.Utils.supportsMSBlob()) {
        return _globals.RenderType.MSBLOB;
      } else {
        return _globals.RenderType.DATAURL;
      }
    }
  };

  return Exporter;
}();

exports.default = Exporter;

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileDownloader = function () {
  function FileDownloader() {
    (0, _classCallCheck3.default)(this, FileDownloader);
  }

  /**
   * Exports the given data url
   * @param  {String} data
   * @param  {String} baseName = 'photoeditorsdk-export'
   */
  FileDownloader.downloadDataURL = function downloadDataURL(data) {
    var baseName = arguments.length <= 1 || arguments[1] === undefined ? 'photoeditorsdk-export' : arguments[1];

    var url = this.createBlobURLFromDataURL(data);
    var extension = this.getExtensionFromDataURL(data);

    var link = document.createElement('a');
    link.download = baseName + '.' + extension;
    link.href = url;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  /**
   * Exports the given data url using msBlob
   * @param  {String} data
   * @param  {String} baseName = 'photoeditorsdk-export'
   */


  FileDownloader.downloadMSBlob = function downloadMSBlob(data) {
    var baseName = arguments.length <= 1 || arguments[1] === undefined ? 'photoeditorsdk-export' : arguments[1];

    navigator.msSaveBlob(data, baseName + '.png');
  };

  /**
   * Returns the file extension by reading the given data url
   * @param  {String} data
   * @return {String}
   */


  FileDownloader.getExtensionFromDataURL = function getExtensionFromDataURL(data) {
    var mimeString = data.split(',')[0].split(':')[1].split(';')[0];
    return mimeString.split('/').pop();
  };

  /**
   * Creates a Blob URI from the given Data URI
   * @param {String} data
   */


  FileDownloader.createBlobURLFromDataURL = function createBlobURLFromDataURL(data) {
    if (!window.Blob || !window.URL || !ArrayBuffer || !Uint8Array) {
      return data;
    }

    var rawData = _globals.Base64.decode(data.split(',')[1]);
    var mimeString = data.split(',')[0].split(':')[1].split(';')[0];

    // write the bytes of the string to an ArrayBuffer
    var arrayBuffer = new ArrayBuffer(rawData.length);
    var intArray = new Uint8Array(arrayBuffer);
    for (var i = 0; i < rawData.length; i++) {
      intArray[i] = rawData[i];
    }

    // write the ArrayBuffer to a blob, and you're done
    var blob = new window.Blob([arrayBuffer], {
      type: mimeString
    });
    return window.URL.createObjectURL(blob);
  };

  return FileDownloader;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = FileDownloader;

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileLoader = function (_EventEmitter) {
  (0, _inherits3.default)(FileLoader, _EventEmitter);

  function FileLoader(input) {
    (0, _classCallCheck3.default)(this, FileLoader);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._input = input;
    _this._onFileChange = _this._onFileChange.bind(_this);
    _this._input.addEventListener('change', _this._onFileChange);
    return _this;
  }

  /**
   * Opens the file dialog
   */


  FileLoader.prototype.open = function open() {
    this._input.value = null;
    this._input.click();
  };

  /**
   * Loads the file into an image
   * @param  {File} file
   * @private
   */


  FileLoader.prototype._handleFile = function _handleFile(file) {
    var _this2 = this;

    var reader = new window.FileReader();
    reader.onload = function () {
      return function (e) {
        var data = e.target.result;
        var image = new window.Image();

        image.addEventListener('load', function () {
          _this2.emit('file', image);
        });

        image.src = data;
      };
    }(file);
    reader.readAsDataURL(file);
  };

  /**
   * Gets called when the file input value changes
   * @private
   */


  FileLoader.prototype._onFileChange = function _onFileChange() {
    var files = this._input.files;

    if (!files.length) return;

    this._handleFile(files[0]);
  };

  /**
   * Disposes all listeners
   */


  FileLoader.prototype.dispose = function dispose() {
    this._input.removeEventListener('change', this._onFileChange);
  };

  return FileLoader;
}(_globals.EventEmitter); /*
                           * This file is part of PhotoEditorSDK.
                           *
                           * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                           * All rights reserved.
                           *
                           * Redistribution and use in source and binary forms, without
                           * modification, are permitted provided that the following license agreement
                           * is approved and a legal/financial contract was signed by the user.
                           * The license agreement can be found under following link:
                           *
                           * https://www.photoeditorsdk.com/LICENSE.txt
                           */

exports.default = FileLoader;

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ImageResizer = function () {
  function ImageResizer(image, maxPixels, maxDimensions) {
    (0, _classCallCheck3.default)(this, ImageResizer);

    this._image = image;
    this._maxPixels = maxPixels;
    this._maxDimensions = maxDimensions;
  }

  /**
   * Checks if the image needs to be resized
   * @return {Boolean}
   */


  ImageResizer.prototype.needsResize = function needsResize() {
    var dimensions = new _globals.Vector2(this._image.width, this._image.height);
    var pixels = dimensions.x * dimensions.y;
    var exceedsMaxPixels = pixels > this._maxPixels;
    var exceedsMaxDimensions = this._maxDimensions !== null && (dimensions.x > this._maxDimensions || dimensions.y > this._maxDimensions);

    return exceedsMaxPixels || exceedsMaxDimensions;
  };

  /**
   * Resizes the image to match the maximum amount of pixels
   * @return {Promise}
   */


  ImageResizer.prototype.resize = function resize() {
    var _this = this;

    var reason = null;
    var canvas = null;
    var maxDimensions = this._maxDimensions;

    return new _globals.Promise(function (resolve, reject) {
      window.setTimeout(function () {
        var initialDimensions = new _globals.Vector2(_this._image.width, _this._image.height);
        var dimensions = initialDimensions.clone();

        // If max pixels is exceeded, resize to fit the max pixels
        if (dimensions.x * dimensions.y > _this._maxPixels) {
          dimensions.copy(_this._getDimensionsByMaxPixels());
          reason = 'maxMegaPixels';
        }

        // If max dimensions (maximum texture size) is exceeded,
        // make sure the shorter side equals the maximum texture
        // size
        if (maxDimensions !== null && (dimensions.x > maxDimensions || dimensions.y > maxDimensions)) {
          var scale = Math.min(maxDimensions / dimensions.x, maxDimensions / dimensions.y);
          dimensions.multiply(scale);
          reason = 'maxDimensions';
        }

        dimensions.floor();
        canvas = _this._createResizedImageCanvas(dimensions);

        resolve({ canvas: canvas, dimensions: dimensions, reason: reason });
      }, 1000);
    });
  };

  /**
   * Creates a resized canvas with the given dimensions
   * @param  {PhotoEditorSDK.Math.Vector2} dimensions
   * @param  {PhotoEditorSDK.Math.Vector2} [imageDimensions] = dimensions
   * @return {Canvas}
   * @private
   */


  ImageResizer.prototype._createResizedImageCanvas = function _createResizedImageCanvas(dimensions) {
    var imageDimensions = arguments.length <= 1 || arguments[1] === undefined ? dimensions : arguments[1];

    var image = this._image;

    var canvas = document.createElement('canvas');
    canvas.width = dimensions.x;
    canvas.height = dimensions.y;

    var offset = dimensions.clone().subtract(imageDimensions).divide(2);

    var context = canvas.getContext('2d');
    context.drawImage(image, 0, 0, image.width, image.height, offset.x, offset.y, imageDimensions.x, imageDimensions.y);
    return canvas;
  };

  /**
   * Returns the dimensions that match the max pixel count
   * @return {Vector2}
   * @private
   */


  ImageResizer.prototype._getDimensionsByMaxPixels = function _getDimensionsByMaxPixels() {
    var image = this._image;
    var maxPixels = this._maxPixels;

    var ratioHV = image.width / image.height;
    var ratioVH = image.height / image.width;

    return new _globals.Vector2(Math.sqrt(maxPixels * ratioHV), Math.sqrt(maxPixels * ratioVH)).floor();
  };

  return ImageResizer;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = ImageResizer;

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Library = function Library(data) {
  (0, _classCallCheck3.default)(this, Library);

  this.name = data.name;
  this.coverImage = data.coverImage;
};

exports.default = Library;

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Photo = function Photo(library, data) {
  (0, _classCallCheck3.default)(this, Photo);

  this.library = library;
  this.title = data.title;
  this.urls = data.urls;
};

exports.default = Photo;

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Provider = function () {
  function Provider() {
    (0, _classCallCheck3.default)(this, Provider);
  }

  /**
   * Returns the libraries
   * @return {Promise}
   * @abstract
   */
  Provider.prototype.getLibraries = function getLibraries() {
    _globals.Log.warn(this.constructor.name, '`getLibraries` is abstract and not implemented.');
    return _globals.Promise.resolve([]);
  };

  /**
   * Returns search suggestions shown on the overview and "no results" page
   * @return {Promise}
   * @abstract
   */


  Provider.prototype.getSearchSuggestions = function getSearchSuggestions() {
    _globals.Log.warn(this.constructor.name, '`getSearchSuggestions` is abstract and not implemented.');
    return _globals.Promise.resolve([]);
  };

  /**
   * Returns the photos for the given library
   * @param {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Library} library
   * @return {Promise}
   * @abstract
   */


  Provider.prototype.getPhotosForLibrary = function getPhotosForLibrary(library) {
    _globals.Log.warn(this.constructor.name, '`getPhotosForLibrary` is abstract and not implemented.');
    return _globals.Promise.resolve([]);
  };

  /**
   * Searches for photos with the given query
   * @param {String} query
   * @return {Promise}
   */


  Provider.prototype.searchPhotos = function searchPhotos(query) {
    _globals.Log.warn(this.constructor.name, '`searchPhotos` is abstract and not implemented.');
    return _globals.Promise.resolve([]);
  };

  return Provider;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = Provider;

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var SearchSuggestion = function SearchSuggestion(data) {
  (0, _classCallCheck3.default)(this, SearchSuggestion);

  this.query = data.query;
  this.name = this.query;
  this.coverImage = data.coverImage;
};

exports.default = SearchSuggestion;

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

var _filterManager = __webpack_require__(121);

var _filterManager2 = _interopRequireDefault(_filterManager);

var _stickerManager = __webpack_require__(122);

var _stickerManager2 = _interopRequireDefault(_stickerManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Deserializer = function () {
  function Deserializer(editor, data) {
    (0, _classCallCheck3.default)(this, Deserializer);

    this._editor = editor;
    this._data = data;

    this._filterManager = new _filterManager2.default(this._editor._options);
    this._stickerManager = new _stickerManager2.default(this._editor._options);
  }

  /**
   * Deserializes the given data
   * @return {Promise}
   */


  Deserializer.prototype.deserialize = function deserialize() {
    var _this = this;

    return this._validateVersion().then(function () {
      return _this._deserializeInputImage();
    }).then(function () {
      return _this._deserializeOperations();
    }).then(function () {
      return _this._editor.zoom.set('auto');
    });
  };

  /**
   * Validates the version
   * @return {Promise}
   */


  Deserializer.prototype._validateVersion = function _validateVersion() {
    if (this._data.version !== '1.0.0') {
      return Promise.reject(new Error('Invalid version ' + this._data.version + ', expected 1.0.0'));
    }
    return Promise.resolve();
  };

  /**
   * Deserializes the input image (if present)
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeInputImage = function _deserializeInputImage() {
    var _this2 = this;

    return new Promise(function (resolve, reject) {
      var _data$inputImage = _this2._data.inputImage;
      var data = _data$inputImage.data;
      var type = _data$inputImage.type;

      if (data && type) {
        (function () {
          var image = new window.Image();
          image.addEventListener('load', function () {
            _this2._editor.setImage(image);
            resolve();
          });
          image.src = 'data:' + type + ';base64,' + data;
        })();
      } else {
        resolve();
      }
    });
  };

  /**
   * Deserializes the operations
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeOperations = function _deserializeOperations() {
    var _this3 = this;

    var promises = this._data.operations.map(function (operation) {
      switch (operation.type) {
        case 'crop':
          return _this3._deserializeCropOperation(operation);
        case 'orientation':
          return _this3._deserializeOrientationOperation(operation);
        case 'filter':
          return _this3._deserializeFilterOperation(operation);
        case 'adjustments':
          return _this3._deserializeAdjustmentsOperation(operation);
        case 'sprite':
          return _this3._deserializeSpriteOperation(operation);
        case 'focus':
          return _this3._deserializeFocusOperation(operation);
        case 'border':
          return _this3._deserializeBorderOperation(operation);
      }
    });

    return Promise.all(promises);
  };

  /**
   * Deserializes the given crop operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeCropOperation = function _deserializeCropOperation(operation) {
    var options = operation.options;
    var scale = options.scale;
    var rotation = options.rotation;

    var start = _globals.Vector2.fromObject(options.start);
    var end = _globals.Vector2.fromObject(options.end);
    this._editor.operations.getOrCreate('crop', {
      start: start, end: end, scale: scale, rotation: rotation
    });
    return Promise.resolve();
  };

  /**
   * Deserializes the given orientation operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeOrientationOperation = function _deserializeOrientationOperation(operation) {
    var options = operation.options;

    this._editor.operations.getOrCreate('orientation', options);
  };

  /**
   * Deserializes the given filter operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeFilterOperation = function _deserializeFilterOperation(operation) {
    var options = operation.options;


    var filters = this._filterManager.getFiltersForCategory('all');
    var FilterClass = void 0;
    for (var i = 0; i < filters.length; i++) {
      var Filter = filters[i];
      if (Filter.identifier === options.name) {
        FilterClass = Filter;
        break;
      }
    }

    if (!FilterClass) {
      throw new Error('Unknown filter \'' + options.name + '\'');
    }

    this._editor.operations.getOrCreate('filter', {
      filter: new FilterClass(),
      intensity: options.intensity
    });
  };

  /**
   * Deserializes the given adjustments operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeAdjustmentsOperation = function _deserializeAdjustmentsOperation(operation) {
    var AdjustmentsOperation = _globals.SDK.Operations.AdjustmentsOperation;
    var options = operation.options;

    var operationOptions = {};

    for (var key in options) {
      var value = options[key];
      var defaultValue = AdjustmentsOperation.prototype.availableOptions[key].default;
      operationOptions[key] = value + defaultValue;
    }

    this._editor.operations.getOrCreate('adjustments', operationOptions);
  };

  /**
   * Deserializes the given sprite operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeSpriteOperation = function _deserializeSpriteOperation(operation) {
    var _this4 = this;

    var options = operation.options;

    var spriteOperation = this._editor.operations.getOrCreate('sprite');
    var promises = options.sprites.map(function (sprite) {
      switch (sprite.type) {
        case 'sticker':
          return _this4._deserializeSticker(spriteOperation, sprite);
        case 'text':
          return _this4._deserializeText(spriteOperation, sprite);
        case 'brush':
          return _this4._deserializeBrush(spriteOperation, sprite);
      }
    }).filter(function (s) {
      return !!s;
    });
    return Promise.all(promises).then(function (sprites) {
      spriteOperation.setSprites(sprites);
    });
  };

  /**
   * Deserializes the given sticker for the given operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation} operation
   * @param  {Object} sprite
   * @return {PhotoEditorSDK.Operations.SpriteOperation.Sticker}
   * @private
   */


  Deserializer.prototype._deserializeSticker = function _deserializeSticker(operation, sprite) {
    var _this5 = this;

    var SpriteOperation = _globals.SDK.Operations.SpriteOperation;
    var options = sprite.options;

    var stickers = this._stickerManager.getStickersForCategory('all');

    var sticker = void 0;
    for (var i = 0; i < stickers.length; i++) {
      if (stickers[i].name === options.name) {
        sticker = stickers[i];
        continue;
      }
    }

    if (!sticker) {
      throw new Error('Unknown sticker \'' + options.name + '\'');
    }
    return new Promise(function (resolve, reject) {
      var image = new window.Image();
      image.addEventListener('load', function () {
        var adjustments = SpriteOperation.Sticker.prototype.availableOptions.adjustments.structure;
        var rotation = options.rotation;
        var flipHorizontally = options.flipHorizontally;
        var flipVertically = options.flipVertically;

        resolve(operation.createSticker({
          image: image,
          position: _globals.Vector2.fromObject(options.position),
          dimensions: _globals.Vector2.fromObject(options.dimensions),
          rotation: rotation, flipHorizontally: flipHorizontally, flipVertically: flipVertically,
          adjustments: {
            brightness: options.adjustments.brightness + adjustments.brightness.default,
            saturation: options.adjustments.saturation + adjustments.saturation.default,
            contrast: options.adjustments.contrast + adjustments.contrast.default
          }
        }));
      });
      image.src = _this5._editor.getUI().getAssetPath(sticker.images.mediaBase.uri);
    });
  };

  /**
   * Deserializes the given text for the given operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation} operation
   * @param  {Object} text
   * @return {PhotoEditorSDK.Operations.SpriteOperation.Text}
   * @private
   */


  Deserializer.prototype._deserializeText = function _deserializeText(operation, text) {
    var options = text.options;
    var fontSize = options.fontSize;
    var lineHeight = options.lineHeight;
    var fontFamily = options.fontFamily;
    var fontWeight = options.fontWeight;
    var alignment = options.alignment;
    var rotation = options.rotation;
    var maxWidth = options.maxWidth;
    var color = options.color;
    var backgroundColor = options.backgroundColor;

    return Promise.resolve(operation.createText({
      fontSize: fontSize, lineHeight: lineHeight, fontFamily: fontFamily, fontWeight: fontWeight, alignment: alignment, rotation: rotation, maxWidth: maxWidth,
      text: options.text,
      color: _globals.Color.fromArray(color),
      backgroundColor: _globals.Color.fromArray(backgroundColor),
      position: _globals.Vector2.fromObject(options.position)
    }));
  };

  /**
   * Deserializes the given brush for the given operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation} operation
   * @param  {Object} brush
   * @return {PhotoEditorSDK.Operations.SpriteOperation.Brush}
   * @private
   */


  Deserializer.prototype._deserializeBrush = function _deserializeBrush(operation, brush) {
    var options = brush.options;
    var paths = options.paths;


    var brushObject = operation.createBrush();
    paths.forEach(function (path) {
      var color = path.color;
      var size = path.size;
      var points = path.points;

      var colorObject = new _globals.Color(color[0], color[1], color[2], color[3]);
      var pathObject = brushObject.createPath(size, 1, colorObject);
      points.forEach(function (point) {
        pathObject.addControlPoint(_globals.Vector2.fromObject(point));
      });
    });
    return Promise.resolve(brushObject);
  };

  /**
   * Deserializes the given focus operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeFocusOperation = function _deserializeFocusOperation(operation) {
    var options = operation.options.options;

    switch (operation.options.type) {
      case 'radial':
        {
          var position = options.position;
          var radius = options.radius;
          var gradientRadius = options.gradientRadius;
          var blurRadius = options.blurRadius;

          this._editor.operations.getOrCreate('radial-focus', {
            position: _globals.Vector2.fromObject(position),
            radius: radius, gradientRadius: gradientRadius, blurRadius: blurRadius
          });
        }
        break;
      case 'linear':
        {
          var start = options.start;
          var end = options.end;
          var size = options.size;
          var gradientSize = options.gradientSize;
          var _blurRadius = options.blurRadius;

          this._editor.operations.getOrCreate('linear-focus', {
            start: _globals.Vector2.fromObject(start),
            end: _globals.Vector2.fromObject(end),
            size: size, gradientSize: gradientSize, blurRadius: _blurRadius
          });
        }
        break;
    }
  };

  /**
   * Deserializes the given border operation
   * @param  {Object} operation
   * @return {Promise}
   * @private
   */


  Deserializer.prototype._deserializeBorderOperation = function _deserializeBorderOperation(operation) {
    var _operation$options = operation.options;
    var color = _operation$options.color;
    var size = _operation$options.size;

    this._editor.operations.getOrCreate('border', {
      color: _globals.Color.fromArray(color),
      thickness: size
    });
  };

  /**
   * Returns the input dimensions for the given operation
   * @param  {PhotoEditorSDK.Operation} operation
   * @return {PhotoEditorSDK.Math.Vector2}
   * @private
   */


  Deserializer.prototype._getInputDimensionsForOperation = function _getInputDimensionsForOperation(operation) {
    var operationFound = false;
    var inputDimensions = this._editor.getInputDimensions();

    this._editor.operations.getStack().forEach(function (op) {
      if (op === operation) operationFound = true;
      if (operationFound) return;
      inputDimensions = op.getNewDimensions(inputDimensions);
    });

    return inputDimensions;
  };

  return Deserializer;
}(); /*
      * This file is part of PhotoEditorSDK.
      *
      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
      * All rights reserved.
      *
      * Redistribution and use in source and binary forms, without
      * modification, are permitted provided that the following license agreement
      * is approved and a legal/financial contract was signed by the user.
      * The license agreement can be found under following link:
      *
      * https://www.photoeditorsdk.com/LICENSE.txt
      */

exports.default = Deserializer;

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _serializer = __webpack_require__(267);

var _serializer2 = _interopRequireDefault(_serializer);

var _deserializer = __webpack_require__(265);

var _deserializer2 = _interopRequireDefault(_deserializer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

var Serialization = function () {
  function Serialization(editor) {
    (0, _classCallCheck3.default)(this, Serialization);

    this._editor = editor;
  }

  /**
   * Serializes the editor state
   * @return {Promise}
   */


  Serialization.prototype.serialize = function serialize() {
    var serializer = new _serializer2.default(this._editor);
    return serializer.serialize.apply(serializer, arguments);
  };

  /**
   * Deserializes the given data
   * @param  {Object} data
   * @return {Promise}
   */


  Serialization.prototype.deserialize = function deserialize(data) {
    var deserializer = new _deserializer2.default(this._editor, data);
    return deserializer.deserialize();
  };

  return Serialization;
}();

exports.default = Serialization;


Serialization.version = '1.0.0';

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _globals = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TWICE_PI = Math.PI * 2; /*
                             * This file is part of PhotoEditorSDK.
                             *
                             * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                             * All rights reserved.
                             *
                             * Redistribution and use in source and binary forms, without
                             * modification, are permitted provided that the following license agreement
                             * is approved and a legal/financial contract was signed by the user.
                             * The license agreement can be found under following link:
                             *
                             * https://www.photoeditorsdk.com/LICENSE.txt
                             */

var Serializer = function () {
  function Serializer(editor) {
    (0, _classCallCheck3.default)(this, Serializer);

    this._editor = editor;

    this._serializeOperations = this._serializeOperations.bind(this);
  }

  // -------------------------------------------------------------------------- SERIALIZATION

  /**
   * Serializes the editor state
   * @param {Objec} options = {}
   * @return {Promise}
   */


  Serializer.prototype.serialize = function serialize() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    this._options = _globals.SDKUtils.defaults(options, {
      image: true
    });

    var data = {
      version: '1.0.0'
    };

    return this._serializeInputImage(data).then(this._serializeOperations);
  };

  /**
   * Serializes the input image as base64 and attaches it to `data`
   * @param  {Object} data
   * @return {Promise}
   * @private
   */


  Serializer.prototype._serializeInputImage = function _serializeInputImage(data) {
    var image = this._editor.getImage();

    if (!this._options.image) {
      data.inputImage = {
        width: image.width,
        height: image.height
      };
      return Promise.resolve(data);
    }

    var sdk = new _globals.SDK('webgl', { image: image });

    return sdk.export(_globals.RenderType.DATA_URL, _globals.ImageFormat.PNG).then(function (dataUrl) {
      var width = image.width;
      var height = image.height;

      data.inputImage = {
        type: _globals.ImageFormat.PNG,
        data: dataUrl.replace(/^data:image\/(.*?);base64,/, ''),
        width: width, height: height
      };
      return data;
    });
  };

  /**
   * Serializes the operations and attaches them to `data`
   * @param  {Object} data
   * @return {Promise}
   * @private
   */


  Serializer.prototype._serializeOperations = function _serializeOperations(data) {
    var _this = this;

    var operations = [];
    var stack = this._editor.operations.getStack();
    stack.forEach(function (operation) {
      operations.push(_this._serializeOperation(operation));
    });
    data.operations = operations;
    return Promise.resolve(data);
  };

  /**
   * Serializes the given operation
   * @param  {PhotoEditorSDK.Operation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeOperation = function _serializeOperation(operation) {
    switch (operation.constructor.identifier) {
      case 'crop':
        return this._serializeCropOperation(operation);
      case 'orientation':
        return this._serializeOrientationOperation(operation);
      case 'filter':
        return this._serializeFilterOperation(operation);
      case 'adjustments':
        return this._serializeAdjustmentsOperation(operation);
      case 'sprite':
        return this._serializeSpriteOperation(operation);
      case 'radial-focus':
        return this._serializeRadialFocusOperation(operation);
      case 'linear-focus':
        return this._serializeLinearFocusOperation(operation);
      case 'border':
        return this._serializeBorderOperation(operation);
      default:
        throw new Error('Unable to serialize operation of type ' + operation.constructor.identifier);
    }
  };

  /**
   * Serializes the given crop operation
   * @param  {PhotoEditorSDK.Operation.CropOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeCropOperation = function _serializeCropOperation(operation) {
    var options = operation.serializeOptions(['start', 'end', 'rotation', 'scale']);
    options.rotation = (options.rotation + TWICE_PI) % TWICE_PI;
    return {
      type: 'crop',
      options: options
    };
  };

  /**
   * Serializes the given orientation operation
   * @param  {PhotoEditorSDK.Operation.OrientationOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeOrientationOperation = function _serializeOrientationOperation(operation) {
    return {
      type: 'orientation',
      options: operation.serializeOptions(['flipVertically', 'flipHorizontally', 'rotation'])
    };
  };

  /**
   * Serializes the given filter operation
   * @param  {PhotoEditorSDK.Operations.FilterOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeFilterOperation = function _serializeFilterOperation(operation) {
    return {
      type: 'filter',
      options: {
        intensity: operation.getIntensity(),
        name: operation.getFilter().constructor.identifier
      }
    };
  };

  /**
   * Serializes the given adjustments operation
   * @param  {PhotoEditorSDK.Operations.AdjustmentsOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeAdjustmentsOperation = function _serializeAdjustmentsOperation(operation) {
    var availableOptions = operation.availableOptions;

    var options = {};
    for (var optionName in availableOptions) {
      var option = availableOptions[optionName];
      var value = operation.getOption(optionName);
      if (value !== option.default) {
        options[optionName] = value - option.default; // scale to -1...1
      }
    }
    return {
      type: 'adjustments',
      options: options
    };
  };

  /**
   * Serializes the given sprite operation
   * @return {PhotoEditorSDK.Operations.SpriteOperation} operation
   * @private
   */


  Serializer.prototype._serializeSpriteOperation = function _serializeSpriteOperation(operation) {
    var _this2 = this;

    var sprites = operation.getSprites().map(function (sprite) {
      if (sprite instanceof operation.constructor.Sticker) {
        return _this2._serializeSticker(operation, sprite);
      } else if (sprite instanceof operation.constructor.Text) {
        return _this2._serializeText(operation, sprite);
      } else if (sprite instanceof operation.constructor.Brush) {
        return _this2._serializeBrush(operation, sprite);
      }
    });

    return {
      type: 'sprite',
      options: {
        sprites: sprites
      }
    };
  };

  /**
   * Serializes the given sticker
   * @param  {PhotoEditorSDK.Operation} operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation.Sticker} sprite
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeSticker = function _serializeSticker(operation, sprite) {
    var adjustments = sprite.getAdjustments();

    var options = sprite.serializeOptions(['name', 'position', 'dimensions', 'flipVertically', 'flipHorizontally', 'rotation']);
    options.rotation = (options.rotation + TWICE_PI) % TWICE_PI;

    var adjustmentsOptions = adjustments.availableOptions;
    options.adjustments = {
      brightness: adjustments.getBrightness() - adjustmentsOptions.brightness.default,
      saturation: adjustments.getSaturation() - adjustmentsOptions.saturation.default,
      contrast: adjustments.getContrast() - adjustmentsOptions.contrast.default
    };

    return {
      type: 'sticker',
      options: options
    };
  };

  /**
   * Serializes the given text sprite
   * @param  {PhotoEditorSDK.Operation} operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation.Text} sprite
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeText = function _serializeText(operation, sprite) {
    var options = sprite.serializeOptions(['fontSize', 'lineHeight', 'fontFamily', 'fontWeight', 'alignment', 'color', 'backgroundColor', 'position', 'rotation', 'text', 'maxWidth']);
    options.rotation = (options.rotation + TWICE_PI) % TWICE_PI;

    return {
      type: 'text',
      options: options
    };
  };

  /**
   * Serializes the given brush sprite
   * @param  {PhotoEditorSDK.Operation} operation
   * @param  {PhotoEditorSDK.Operations.SpriteOperation.Brush} sprite
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeBrush = function _serializeBrush(operation, sprite) {
    return {
      type: 'brush',
      options: {
        paths: sprite.getPaths().map(function (path) {
          var options = path.serializeOptions(['color', 'thickness']);

          options.size = options.thickness;
          delete options.thickness;

          options.points = path.getControlPoints().map(function (point) {
            return point.getPosition().toObject();
          });
          return options;
        })
      }
    };
  };

  /**
   * Serializes the given radial focus operation
   * @param  {PhotoEditorSDK.Operations.RadialFocusOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeRadialFocusOperation = function _serializeRadialFocusOperation(operation) {
    return {
      type: 'focus',
      options: {
        type: 'radial',
        options: operation.serializeOptions(['position', 'radius', 'gradientRadius', 'blurRadius'])
      }
    };
  };

  /**
   * Serializes the given linear focus operation
   * @param  {PhotoEditorSDK.Operations.LinearFocusOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeLinearFocusOperation = function _serializeLinearFocusOperation(operation) {
    return {
      type: 'focus',
      options: {
        type: 'linear',
        options: operation.serializeOptions(['start', 'end', 'blurRadius', 'size', 'gradientSize'])
      }
    };
  };

  /**
   * Serializes the given border operation
   * @param  {PhotoEditorSDK.Operations.BorderOperation} operation
   * @return {Object}
   * @private
   */


  Serializer.prototype._serializeBorderOperation = function _serializeBorderOperation(operation) {
    var options = operation.serializeOptions(['color', 'thickness']);

    // `thickness` is called `size` in schema
    options.size = options.thickness;
    delete options.thickness;

    return {
      type: 'border',
      options: options
    };
  };

  /**
   * Returns the input dimensions for the given operation
   * @param  {PhotoEditorSDK.Operation} operation
   * @return {PhotoEditorSDK.Math.Vector2}
   * @private
   */


  Serializer.prototype._getInputDimensionsForOperation = function _getInputDimensionsForOperation(operation) {
    var operationFound = false;
    var inputDimensions = this._editor.getInputDimensions();

    this._editor.operations.getStack().forEach(function (op) {
      if (op === operation) operationFound = true;
      if (operationFound) return;
      inputDimensions = op.getNewDimensions(inputDimensions);
    });

    return inputDimensions;
  };

  return Serializer;
}();

exports.default = Serializer;

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof2 = __webpack_require__(56);

var _typeof3 = _interopRequireDefault(_typeof2);

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _photoeditorsdk = __webpack_require__(66);

var _photoeditorsdk2 = _interopRequireDefault(_photoeditorsdk);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EventEmitter = _photoeditorsdk2.default.EventEmitter; /*
                                                           * This file is part of PhotoEditorSDK.
                                                           *
                                                           * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                                                           * All rights reserved.
                                                           *
                                                           * Redistribution and use in source and binary forms, without
                                                           * modification, are permitted provided that the following license agreement
                                                           * is approved and a legal/financial contract was signed by the user.
                                                           * The license agreement can be found under following link:
                                                           *
                                                           * https://www.photoeditorsdk.com/LICENSE.txt
                                                           */

var Utils = _photoeditorsdk2.default.Utils;

var SharedState = function (_EventEmitter) {
  (0, _inherits3.default)(SharedState, _EventEmitter);

  function SharedState() {
    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    (0, _classCallCheck3.default)(this, SharedState);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._state = state;
    return _this;
  }

  /**
   * Sets the given state
   * @param {Object} newState
   * @param {Boolean} update = true
   */


  SharedState.prototype.set = function set() {
    var newState = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var update = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

    if ((typeof newState === 'undefined' ? 'undefined' : (0, _typeof3.default)(newState)) !== 'object') {
      console && console.trace('SharedState#set expects an object as first parameter');
    }

    var oldState = Utils.extend({}, this._state);
    this._state = Utils.extend(this._state, newState);

    if (update) {
      this.broadcastUpdate(oldState, this._state);
    }
  };

  /**
   * Returns the state for the given property
   * @param {String} prop
   */


  SharedState.prototype.get = function get(prop) {
    return this._state[prop];
  };

  /**
   * Broadcasts an update
   * @param {Object} oldState
   * @param {Object} newState
   */


  SharedState.prototype.broadcastUpdate = function broadcastUpdate(oldState) {
    var newState = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    this.emit('update', oldState, newState);
  };

  /**
   * Clears the state
   */


  SharedState.prototype.clear = function clear() {
    this._state = {};
  };

  return SharedState;
}(EventEmitter);

exports.default = SharedState;

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _photoeditorsdk = __webpack_require__(66);

var _photoeditorsdk2 = _interopRequireDefault(_photoeditorsdk);

var _log = __webpack_require__(124);

var _log2 = _interopRequireDefault(_log);

var _browser = __webpack_require__(270);

var _browser2 = _interopRequireDefault(_browser);

var _jsonLoader = __webpack_require__(114);

var _jsonLoader2 = _interopRequireDefault(_jsonLoader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Vector2 = _photoeditorsdk2.default.Math.Vector2; /*
                                                      * This file is part of PhotoEditorSDK.
                                                      *
                                                      * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
                                                      * All rights reserved.
                                                      *
                                                      * Redistribution and use in source and binary forms, without
                                                      * modification, are permitted provided that the following license agreement
                                                      * is approved and a legal/financial contract was signed by the user.
                                                      * The license agreement can be found under following link:
                                                      *
                                                      * https://www.photoeditorsdk.com/LICENSE.txt
                                                      */

var UIUtils = {
  /**
   * Returns the inner dimensions (size - padding) of the given
   * DOM element
   * @param  {DOMElement} element
   * @return {Vector2}
   */
  getInnerDimensionsForElement: function getInnerDimensionsForElement(element) {
    var size = new Vector2(element.offsetWidth, element.offsetHeight);
    var computedStyle = window.getComputedStyle(element, null);
    size.x -= parseInt(computedStyle.getPropertyValue('padding-left'), 10);
    size.x -= parseInt(computedStyle.getPropertyValue('padding-right'), 10);
    size.y -= parseInt(computedStyle.getPropertyValue('padding-top'), 10);
    size.y -= parseInt(computedStyle.getPropertyValue('padding-bottom'), 10);
    return size;
  },


  /**
   * Gets the x and y position for the given event.
   * @param {Event} e
   * @return {Vector2}
   */
  getEventPosition: function getEventPosition(e) {
    var x = e.clientX;
    var y = e.clientY;
    if (e.type.indexOf('touch') !== -1) {
      if (!e.touches.length) return;

      x = e.touches[0].clientX;
      y = e.touches[0].clientY;
    }
    return new Vector2(x, y);
  },


  /**
   * Creates a canvas with a transparency pattern
   * @return {Canvas}
   */
  createTransparentPatternCanvas: function createTransparentPatternCanvas() {
    var canvas = document.createElement('canvas');
    var context = canvas.getContext('2d');

    canvas.width = 10;
    canvas.height = 10;

    context.fillStyle = 'white';
    context.fillRect(0, 0, canvas.width, canvas.height);
    context.fillStyle = '#cccccc';
    context.fillRect(0, 0, canvas.width / 2, canvas.height / 2);
    context.fillRect(canvas.width / 2, canvas.height / 2, canvas.width, canvas.height);

    return canvas;
  },


  /**
   * Checks if the browser supports canvas.msToBlob
   * @return {Boolean}
   */
  supportsMSBlob: function supportsMSBlob() {
    var canvas = document.createElement('canvas');
    return typeof canvas.msToBlob !== 'undefined';
  },


  /**
   * Translates the given key using the given options
   * @param  {Object} phrases
   * @param  {String} key
   * @param  {Object} interpolationOptions = {}
   * @return {String}
   */
  translate: function translate(phrases, key) {
    var interpolationOptions = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

    var response = this.fetch(phrases, key);
    if (!response) {
      _log2.default.warn('Utils#translate', 'Unable to translate `' + key + '`');
      return key;
    }
    for (var _key in interpolationOptions) {
      response = response.replace('${' + _key + '}', interpolationOptions[_key]);
    }
    return response;
  },


  /**
   * Gets the property value at `path` of `object`
   * @param  {Object} object
   * @param  {String} path
   * @param  {?} [defaultValue]
   * @return {?}
   */
  fetch: function fetch(object, path, defaultValue) {
    // Replace indexes with property accessors
    path = path.replace(/\[(\w+)\]/g, '.$1');
    // Strip leading dot (when path begins with [0] for example)
    path = path.replace(/^\./, '');

    var pathSegments = path.split('.');
    for (var i = 0; i < pathSegments.length; i++) {
      var segment = pathSegments[i];
      object = object[segment];
      if (!object) {
        break;
      }
    }

    if (typeof object === 'undefined') {
      return false;
    }

    return object;
  },


  /**
   * Checks whether the user agent represents a mobile device
   * @return {Boolean}
   */
  isMobile: function isMobile() {
    var a = navigator.userAgent || navigator.vendor || window.opera;
    /* eslint-disable */
    return (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))
    );
    /* eslint-enable */
  },


  /**
   * Selects the `selectedItems` from `items`. `selector` is called for every item, return value
   * is matched against `selectedItems`
   * @param  {Array} items
   * @param  {Array} selectedItems
   * @param  {Function} [selector = null]
   * @return {Array}
   */
  select: function select(items, selectedItems) {
    var selector = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

    if (!selector) selector = function selector(i) {
      return i;
    };

    var newItems = [];
    selectedItems.forEach(function (selectedItem) {
      items.forEach(function (item) {
        var itemIdentifier = selector(item);
        if (itemIdentifier === selectedItem) {
          newItems.push(item);
        }
      });
    });
    return newItems;
  },


  /**
   * Gets the given URL using JSON(P)
   * @param  {String} url
   * @return {Promise}
   */
  getJSONP: function getJSONP(url) {
    var loader = new _jsonLoader2.default(url);
    return loader.load();
  },


  /**
   * Merges the given `newCategories` into the given `categories`
   * @param  {Array.<Object>} categories
   * @param  {Array.<Object>} newCategories
   * @param  {String} itemsProperty
   * @private
   */
  mergeCategories: function mergeCategories(categories, newCategories, itemsProperty) {
    categories = categories.slice(0);

    var existingCategory = null;
    newCategories.forEach(function (newCategory) {
      categories.forEach(function (category) {
        if (newCategory.name === category.name) {
          existingCategory = category;
        }
      });

      if (!existingCategory) {
        categories.push(newCategory);
      } else {
        existingCategory[itemsProperty] = existingCategory[itemsProperty].concat(newCategory[itemsProperty]);
      }
    });

    return categories;
  },


  /**
   * Returns a camelized style object for the given DOMElement
   * @param  {DOMElement} el
   * @return {Object}
   */
  getStyleObject: function getStyleObject(el) {
    var styleProperties = window.getComputedStyle(el);
    var styleObject = {};
    for (var property in styleProperties) {
      var value = styleProperties.getPropertyValue(property);
      var camelizedAttr = property.replace(/\-([a-z])/g, function (a, b) {
        return b.toUpperCase();
      });
      if (value !== '') {
        styleObject[camelizedAttr] = value;
      }
    }
    return styleObject;
  },


  /**
   * Debounces the given function to trigger only every so often
   * @param  {Function} fn
   * @param  {Number}   wait
   * @param  {Boolean}
   * @return {Function}
   */
  debounce: function debounce(fn, wait, immediate) {
    var timeout;
    return function () {
      var _this = this;

      var args = arguments;
      var later = function later() {
        timeout = null;
        if (!immediate) fn.apply(_this, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) fn.apply(this, args);
    };
  },


  Browser: _browser2.default
};

exports.default = UIUtils;

/***/ },
/* 270 */
/***/ function(module, exports) {

"use strict";
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */

exports.default = {
  getIEVersion: function getIEVersion() {
    var _navigator = navigator;
    var userAgent = _navigator.userAgent;
    var appVersion = _navigator.appVersion;

    if (appVersion.indexOf('MSIE') !== -1) {
      return appVersion.match(/MSIE\s+?([0-9]+)/i)[1];
    } else if (userAgent.indexOf('Trident') !== -1) {
      return userAgent.match(/rv:([0-9]+)/i)[1];
    } else {
      return false;
    }
  },
  isIE10: function isIE10() {
    var version = this.getIEVersion();
    return version !== false && version === 10;
  },
  isIE11: function isIE11() {
    var version = this.getIEVersion();
    return version !== false && version === 11;
  },
  isIElte: function isIElte(version) {
    var browserVersion = this.getIEVersion();
    if (browserVersion === false) return false;
    return browserVersion <= version;
  }
};

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
/*!
 * http://paulirish.com/2011/requestanimationframe-for-smart-animating/
 * http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating
 * requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel
 * MIT license
 */
var root = typeof window === 'undefined' ? global : window;
var rAF = root.requestAnimationFrame;
var cAF = root.cancelAnimationFrame;

var lastTime = 0;
var vendors = ['ms', 'moz', 'webkit', 'o'];
for (var x = 0; x < vendors.length && !rAF; ++x) {
  exports.requestAnimationFrame = rAF = root[vendors[x] + 'RequestAnimationFrame'];
  exports.cancelAnimationFrame = cAF = root[vendors[x] + 'CancelAnimationFrame'] || root[vendors[x] + 'CancelRequestAnimationFrame'];
}

/* istanbul ignore next */
if (!rAF) {
  exports.requestAnimationFrame = rAF = function rAF(callback, element) {
    var currTime = new Date().getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id = setTimeout(function () {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id;
  };
}

/* istanbul ignore next */
if (!cAF) {
  exports.cancelAnimationFrame = cAF = function cAF(id) {
    clearTimeout(id);
  };
}

exports.requestAnimationFrame = rAF;
exports.cancelAnimationFrame = cAF;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(169)))

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(282), __esModule: true };

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(283), __esModule: true };

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(284), __esModule: true };

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(285), __esModule: true };

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(286), __esModule: true };

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(288), __esModule: true };

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(289), __esModule: true };

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(290), __esModule: true };

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _isIterable2 = __webpack_require__(274);

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(273);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
"use strict";

exports.__esModule = true;

var _from = __webpack_require__(272);

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(59);
__webpack_require__(314);
module.exports = __webpack_require__(14).Array.from;

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(88);
__webpack_require__(59);
module.exports = __webpack_require__(312);

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(88);
__webpack_require__(59);
module.exports = __webpack_require__(313);

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(316);
module.exports = __webpack_require__(14).Object.assign;

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(317);
var $Object = __webpack_require__(14).Object;
module.exports = function create(P, D){
  return $Object.create(P, D);
};

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(318);
var $Object = __webpack_require__(14).Object;
module.exports = function defineProperty(it, key, desc){
  return $Object.defineProperty(it, key, desc);
};

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(319);
module.exports = __webpack_require__(14).Object.setPrototypeOf;

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(321);
__webpack_require__(320);
__webpack_require__(322);
__webpack_require__(323);
module.exports = __webpack_require__(14).Symbol;

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(59);
__webpack_require__(88);
module.exports = __webpack_require__(87).f('iterator');

/***/ },
/* 291 */
/***/ function(module, exports) {

module.exports = function(it){
  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
  return it;
};

/***/ },
/* 292 */
/***/ function(module, exports) {

module.exports = function(){ /* empty */ };

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(33)
  , toLength  = __webpack_require__(137)
  , toIndex   = __webpack_require__(311);
module.exports = function(IS_INCLUDES){
  return function($this, el, fromIndex){
    var O      = toIObject($this)
      , length = toLength(O.length)
      , index  = toIndex(fromIndex, length)
      , value;
    // Array#includes uses SameValueZero equality algorithm
    if(IS_INCLUDES && el != el)while(length > index){
      value = O[index++];
      if(value != value)return true;
    // Array#toIndex ignores holes, Array#includes - not
    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
      if(O[index] === el)return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var $defineProperty = __webpack_require__(25)
  , createDesc      = __webpack_require__(46);

module.exports = function(object, index, value){
  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(45)
  , gOPS    = __webpack_require__(79)
  , pIE     = __webpack_require__(57);
module.exports = function(it){
  var result     = getKeys(it)
    , getSymbols = gOPS.f;
  if(getSymbols){
    var symbols = getSymbols(it)
      , isEnum  = pIE.f
      , i       = 0
      , key;
    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
  } return result;
};

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(24).document && document.documentElement;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators  = __webpack_require__(35)
  , ITERATOR   = __webpack_require__(15)('iterator')
  , ArrayProto = Array.prototype;

module.exports = function(it){
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(73);
module.exports = Array.isArray || function isArray(arg){
  return cof(arg) == 'Array';
};

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(29);
module.exports = function(iterator, fn, value, entries){
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch(e){
    var ret = iterator['return'];
    if(ret !== undefined)anObject(ret.call(iterator));
    throw e;
  }
};

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var create         = __webpack_require__(78)
  , descriptor     = __webpack_require__(46)
  , setToStringTag = __webpack_require__(80)
  , IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(34)(IteratorPrototype, __webpack_require__(15)('iterator'), function(){ return this; });

module.exports = function(Constructor, NAME, next){
  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
  setToStringTag(Constructor, NAME + ' Iterator');
};

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

var ITERATOR     = __webpack_require__(15)('iterator')
  , SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function(){ SAFE_CLOSING = true; };
  Array.from(riter, function(){ throw 2; });
} catch(e){ /* empty */ }

module.exports = function(exec, skipClosing){
  if(!skipClosing && !SAFE_CLOSING)return false;
  var safe = false;
  try {
    var arr  = [7]
      , iter = arr[ITERATOR]();
    iter.next = function(){ return {done: safe = true}; };
    arr[ITERATOR] = function(){ return iter; };
    exec(arr);
  } catch(e){ /* empty */ }
  return safe;
};

/***/ },
/* 302 */
/***/ function(module, exports) {

module.exports = function(done, value){
  return {value: value, done: !!done};
};

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

var getKeys   = __webpack_require__(45)
  , toIObject = __webpack_require__(33);
module.exports = function(object, el){
  var O      = toIObject(object)
    , keys   = getKeys(O)
    , length = keys.length
    , index  = 0
    , key;
  while(length > index)if(O[key = keys[index++]] === el)return key;
};

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

var META     = __webpack_require__(58)('meta')
  , isObject = __webpack_require__(44)
  , has      = __webpack_require__(32)
  , setDesc  = __webpack_require__(25).f
  , id       = 0;
var isExtensible = Object.isExtensible || function(){
  return true;
};
var FREEZE = !__webpack_require__(43)(function(){
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function(it){
  setDesc(it, META, {value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  }});
};
var fastKey = function(it, create){
  // return primitive with prefix
  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return 'F';
    // not necessary to add metadata
    if(!create)return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function(it, create){
  if(!has(it, META)){
    // can't set metadata to uncaught frozen object
    if(!isExtensible(it))return true;
    // not necessary to add metadata
    if(!create)return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function(it){
  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY:      META,
  NEED:     false,
  fastKey:  fastKey,
  getWeak:  getWeak,
  onFreeze: onFreeze
};

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
// 19.1.2.1 Object.assign(target, source, ...)
var getKeys  = __webpack_require__(45)
  , gOPS     = __webpack_require__(79)
  , pIE      = __webpack_require__(57)
  , toObject = __webpack_require__(84)
  , IObject  = __webpack_require__(131)
  , $assign  = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(43)(function(){
  var A = {}
    , B = {}
    , S = Symbol()
    , K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function(k){ B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
  var T     = toObject(target)
    , aLen  = arguments.length
    , index = 1
    , getSymbols = gOPS.f
    , isEnum     = pIE.f;
  while(aLen > index){
    var S      = IObject(arguments[index++])
      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
      , length = keys.length
      , j      = 0
      , key;
    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
  } return T;
} : $assign;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

var dP       = __webpack_require__(25)
  , anObject = __webpack_require__(29)
  , getKeys  = __webpack_require__(45);

module.exports = __webpack_require__(30) ? Object.defineProperties : function defineProperties(O, Properties){
  anObject(O);
  var keys   = getKeys(Properties)
    , length = keys.length
    , i = 0
    , P;
  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
  return O;
};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(33)
  , gOPN      = __webpack_require__(134).f
  , toString  = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function(it){
  try {
    return gOPN(it);
  } catch(e){
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it){
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has         = __webpack_require__(32)
  , toObject    = __webpack_require__(84)
  , IE_PROTO    = __webpack_require__(81)('IE_PROTO')
  , ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function(O){
  O = toObject(O);
  if(has(O, IE_PROTO))return O[IE_PROTO];
  if(typeof O.constructor == 'function' && O instanceof O.constructor){
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(44)
  , anObject = __webpack_require__(29);
var check = function(O, proto){
  anObject(O);
  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function(test, buggy, set){
      try {
        set = __webpack_require__(74)(Function.call, __webpack_require__(133).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch(e){ buggy = true; }
      return function setPrototypeOf(O, proto){
        check(O, proto);
        if(buggy)O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(83)
  , defined   = __webpack_require__(75);
// true  -> String#at
// false -> String#codePointAt
module.exports = function(TO_STRING){
  return function(that, pos){
    var s = String(defined(that))
      , i = toInteger(pos)
      , l = s.length
      , a, b;
    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(83)
  , max       = Math.max
  , min       = Math.min;
module.exports = function(index, length){
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(29)
  , get      = __webpack_require__(138);
module.exports = __webpack_require__(14).getIterator = function(it){
  var iterFn = get(it);
  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

var classof   = __webpack_require__(128)
  , ITERATOR  = __webpack_require__(15)('iterator')
  , Iterators = __webpack_require__(35);
module.exports = __webpack_require__(14).isIterable = function(it){
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    || Iterators.hasOwnProperty(classof(O));
};

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var ctx            = __webpack_require__(74)
  , $export        = __webpack_require__(31)
  , toObject       = __webpack_require__(84)
  , call           = __webpack_require__(299)
  , isArrayIter    = __webpack_require__(297)
  , toLength       = __webpack_require__(137)
  , createProperty = __webpack_require__(294)
  , getIterFn      = __webpack_require__(138);

$export($export.S + $export.F * !__webpack_require__(301)(function(iter){ Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
    var O       = toObject(arrayLike)
      , C       = typeof this == 'function' ? this : Array
      , aLen    = arguments.length
      , mapfn   = aLen > 1 ? arguments[1] : undefined
      , mapping = mapfn !== undefined
      , index   = 0
      , iterFn  = getIterFn(O)
      , length, result, step, iterator;
    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for(result = new C(length); length > index; index++){
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
var addToUnscopables = __webpack_require__(292)
  , step             = __webpack_require__(302)
  , Iterators        = __webpack_require__(35)
  , toIObject        = __webpack_require__(33);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(132)(Array, 'Array', function(iterated, kind){
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function(){
  var O     = this._t
    , kind  = this._k
    , index = this._i++;
  if(!O || index >= O.length){
    this._t = undefined;
    return step(1);
  }
  if(kind == 'keys'  )return step(0, index);
  if(kind == 'values')return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(31);

$export($export.S + $export.F, 'Object', {assign: __webpack_require__(305)});

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

var $export = __webpack_require__(31)
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', {create: __webpack_require__(78)});

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

var $export = __webpack_require__(31);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(30), 'Object', {defineProperty: __webpack_require__(25).f});

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(31);
$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(309).set});

/***/ },
/* 320 */
/***/ function(module, exports) {



/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';
// ECMAScript 6 symbols shim
var global         = __webpack_require__(24)
  , has            = __webpack_require__(32)
  , DESCRIPTORS    = __webpack_require__(30)
  , $export        = __webpack_require__(31)
  , redefine       = __webpack_require__(136)
  , META           = __webpack_require__(304).KEY
  , $fails         = __webpack_require__(43)
  , shared         = __webpack_require__(82)
  , setToStringTag = __webpack_require__(80)
  , uid            = __webpack_require__(58)
  , wks            = __webpack_require__(15)
  , wksExt         = __webpack_require__(87)
  , wksDefine      = __webpack_require__(86)
  , keyOf          = __webpack_require__(303)
  , enumKeys       = __webpack_require__(295)
  , isArray        = __webpack_require__(298)
  , anObject       = __webpack_require__(29)
  , toIObject      = __webpack_require__(33)
  , toPrimitive    = __webpack_require__(85)
  , createDesc     = __webpack_require__(46)
  , _create        = __webpack_require__(78)
  , gOPNExt        = __webpack_require__(307)
  , $GOPD          = __webpack_require__(133)
  , $DP            = __webpack_require__(25)
  , $keys          = __webpack_require__(45)
  , gOPD           = $GOPD.f
  , dP             = $DP.f
  , gOPN           = gOPNExt.f
  , $Symbol        = global.Symbol
  , $JSON          = global.JSON
  , _stringify     = $JSON && $JSON.stringify
  , PROTOTYPE      = 'prototype'
  , HIDDEN         = wks('_hidden')
  , TO_PRIMITIVE   = wks('toPrimitive')
  , isEnum         = {}.propertyIsEnumerable
  , SymbolRegistry = shared('symbol-registry')
  , AllSymbols     = shared('symbols')
  , OPSymbols      = shared('op-symbols')
  , ObjectProto    = Object[PROTOTYPE]
  , USE_NATIVE     = typeof $Symbol == 'function'
  , QObject        = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function(){
  return _create(dP({}, 'a', {
    get: function(){ return dP(this, 'a', {value: 7}).a; }
  })).a != 7;
}) ? function(it, key, D){
  var protoDesc = gOPD(ObjectProto, key);
  if(protoDesc)delete ObjectProto[key];
  dP(it, key, D);
  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function(tag){
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
  return typeof it == 'symbol';
} : function(it){
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D){
  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if(has(AllSymbols, key)){
    if(!D.enumerable){
      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
      D = _create(D, {enumerable: createDesc(0, false)});
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P){
  anObject(it);
  var keys = enumKeys(P = toIObject(P))
    , i    = 0
    , l = keys.length
    , key;
  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P){
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key){
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
  it  = toIObject(it);
  key = toPrimitive(key, true);
  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
  var D = gOPD(it, key);
  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it){
  var names  = gOPN(toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
  var IS_OP  = it === ObjectProto
    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
    , result = []
    , i      = 0
    , key;
  while(names.length > i){
    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if(!USE_NATIVE){
  $Symbol = function Symbol(){
    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function(value){
      if(this === ObjectProto)$set.call(OPSymbols, value);
      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f   = $defineProperty;
  __webpack_require__(134).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(57).f  = $propertyIsEnumerable;
  __webpack_require__(79).f = $getOwnPropertySymbols;

  if(DESCRIPTORS && !__webpack_require__(77)){
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function(name){
    return wrap(wks(name));
  }
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

for(var symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function(key){
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(key){
    if(isSymbol(key))return keyOf(SymbolRegistry, key);
    throw TypeError(key + ' is not a symbol!');
  },
  useSetter: function(){ setter = true; },
  useSimple: function(){ setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it){
    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
    var args = [it]
      , i    = 1
      , replacer, $replacer;
    while(arguments.length > i)args.push(arguments[i++]);
    replacer = args[1];
    if(typeof replacer == 'function')$replacer = replacer;
    if($replacer || !isArray(replacer))replacer = function(key, value){
      if($replacer)value = $replacer.call(this, key, value);
      if(!isSymbol(value))return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(34)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(86)('asyncIterator');

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

__webpack_require__(86)('observable');

/***/ },
/* 324 */
/***/ function(module, exports) {

"use strict";
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var camelize = __webpack_require__(324);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = __webpack_require__(334);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = __webpack_require__(4);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ?  false ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return(
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = __webpack_require__(9);

var createArrayFromMixed = __webpack_require__(327);
var getMarkupWrap = __webpack_require__(329);
var invariant = __webpack_require__(4);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = __webpack_require__(9);

var invariant = __webpack_require__(4);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;

/***/ },
/* 330 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

/***/ },
/* 331 */
/***/ function(module, exports) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

'use strict';

var hyphenate = __webpack_require__(331);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ },
/* 333 */
/***/ function(module, exports) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = __webpack_require__(333);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ },
/* 335 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;

/***/ },
/* 336 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
(function() {
  var getNanoSeconds, hrtime, loadTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - loadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    loadTime = getNanoSeconds();
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
			return punycode;
		}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(409)(module), __webpack_require__(169)))

/***/ },
/* 339 */
/***/ function(module, exports) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ },
/* 340 */
/***/ function(module, exports) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

exports.decode = exports.parse = __webpack_require__(339);
exports.encode = exports.stringify = __webpack_require__(340);


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

module.exports = __webpack_require__(355);


/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusUtils
 */

'use strict';

var ReactDOMComponentTree = __webpack_require__(8);

var focusNode = __webpack_require__(140);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 */

'use strict';

var EventConstants = __webpack_require__(22);
var EventPropagators = __webpack_require__(50);
var ExecutionEnvironment = __webpack_require__(9);
var FallbackCompositionState = __webpack_require__(350);
var SyntheticCompositionEvent = __webpack_require__(388);
var SyntheticInputEvent = __webpack_require__(391);

var keyOf = __webpack_require__(26);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBeforeInput: null }),
      captured: keyOf({ onBeforeInputCapture: null })
    },
    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionEnd: null }),
      captured: keyOf({ onCompositionEndCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionStart: null }),
      captured: keyOf({ onCompositionStartCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCompositionUpdate: null }),
      captured: keyOf({ onCompositionUpdateCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 */

'use strict';

var CSSProperty = __webpack_require__(142);
var ExecutionEnvironment = __webpack_require__(9);
var ReactInstrumentation = __webpack_require__(10);

var camelizeStyleName = __webpack_require__(325);
var dangerousStyleValue = __webpack_require__(398);
var hyphenateStyleName = __webpack_require__(332);
var memoizeStringOnly = __webpack_require__(336);
var warning = __webpack_require__(6);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (false) {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (false) {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (false) {
      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (false) {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = __webpack_require__(22);
var EventPluginHub = __webpack_require__(49);
var EventPropagators = __webpack_require__(50);
var ExecutionEnvironment = __webpack_require__(9);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactUpdates = __webpack_require__(21);
var SyntheticEvent = __webpack_require__(23);

var getEventTarget = __webpack_require__(108);
var isEventSupported = __webpack_require__(109);
var isTextInputElement = __webpack_require__(167);
var keyOf = __webpack_require__(26);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onChange: null }),
      captured: keyOf({ onChangeCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topChange) {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === topLevelTypes.topClick) {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var DOMLazyTree = __webpack_require__(36);
var ExecutionEnvironment = __webpack_require__(9);

var createNodesFromMarkup = __webpack_require__(328);
var emptyFunction = __webpack_require__(16);
var invariant = __webpack_require__(4);

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = __webpack_require__(26);

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

module.exports = DefaultEventPluginOrder;

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 */

'use strict';

var EventConstants = __webpack_require__(22);
var EventPropagators = __webpack_require__(50);
var ReactDOMComponentTree = __webpack_require__(8);
var SyntheticMouseEvent = __webpack_require__(63);

var keyOf = __webpack_require__(26);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({ onMouseEnter: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  },
  mouseLeave: {
    registrationName: keyOf({ onMouseLeave: null }),
    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 */

'use strict';

var _assign = __webpack_require__(7);

var PooledClass = __webpack_require__(27);

var getTextContentAccessor = __webpack_require__(165);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

'use strict';

var DOMProperty = __webpack_require__(37);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

'use strict';

var _assign = __webpack_require__(7);

var ReactChildren = __webpack_require__(145);
var ReactComponent = __webpack_require__(96);
var ReactPureComponent = __webpack_require__(378);
var ReactClass = __webpack_require__(146);
var ReactDOMFactories = __webpack_require__(360);
var ReactElement = __webpack_require__(20);
var ReactPropTypes = __webpack_require__(157);
var ReactVersion = __webpack_require__(158);

var onlyChild = __webpack_require__(404);
var warning = __webpack_require__(6);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (false) {
  var ReactElementValidator = require('./ReactElementValidator');
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (false) {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 */

'use strict';

var ReactReconciler = __webpack_require__(38);

var instantiateReactComponent = __webpack_require__(166);
var KeyEscapeUtils = __webpack_require__(94);
var shouldUpdateReactComponent = __webpack_require__(110);
var traverseAllChildren = __webpack_require__(111);
var warning = __webpack_require__(6);

var ReactComponentTreeDevtool;

if (typeof process !== 'undefined' && {"NODE_ENV":"production"} && "production" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeDevtool = __webpack_require__(98);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (false) {
    if (!ReactComponentTreeDevtool) {
      ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
    }
    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (false) {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var ReactComponentEnvironment = __webpack_require__(97);
var ReactCurrentOwner = __webpack_require__(28);
var ReactElement = __webpack_require__(20);
var ReactErrorUtils = __webpack_require__(99);
var ReactInstanceMap = __webpack_require__(51);
var ReactInstrumentation = __webpack_require__(10);
var ReactNodeTypes = __webpack_require__(156);
var ReactPropTypeLocations = __webpack_require__(102);
var ReactReconciler = __webpack_require__(38);

var checkReactTypeSpec = __webpack_require__(397);
var emptyObject = __webpack_require__(47);
var invariant = __webpack_require__(4);
var shallowEqual = __webpack_require__(89);
var shouldUpdateReactComponent = __webpack_require__(110);
var warning = __webpack_require__(6);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function invokeComponentDidMountWithTimer() {
  var publicInstance = this._instance;
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
  }
  publicInstance.componentDidMount();
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
  }
}

function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
  var publicInstance = this._instance;
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
  }
  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
  if (this._debugID !== 0) {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (false) {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ?  false ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (false) {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (false) {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (false) {
        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    if (false) {
      if (this._debugID) {
        var callback = function (component) {
          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
        };
        transaction.getReactMountReady().enqueue(callback, this);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (false) {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;
    var instanceOrElement;
    if (doConstruct) {
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
        }
      }
      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
        }
      }
    } else {
      // This can still be an instance in case of factory components
      // but we'll count this as time spent rendering as the more common case.
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
        }
      }
      instanceOrElement = Component(publicProps, publicContext, updateQueue);
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
        }
      }
    }
    return instanceOrElement;
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onError();
        }
      }
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;
    if (inst.componentWillMount) {
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
        }
      }
      inst.componentWillMount();
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
        }
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;
    if (false) {
      if (child._debugID !== 0 && this._debugID !== 0) {
        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
      }
    }

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));

    if (false) {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }
    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
        }
      }
      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        inst.componentWillUnmount();
      }
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (false) {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    if (false) {
      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
    }
    var childContext = inst.getChildContext && inst.getChildContext();
    if (false) {
      ReactInstrumentation.debugTool.onEndProcessingChildContext();
    }
    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (false) {
        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ?  false ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
        }
      }
      inst.componentWillReceiveProps(nextProps, nextContext);
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
        }
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (false) {
          if (this._debugID !== 0) {
            ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
          }
        }
        shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        if (false) {
          if (this._debugID !== 0) {
            ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
          }
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
        }
      }
      inst.componentWillUpdate(nextProps, nextState, nextContext);
      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
        }
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (false) {
        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }

    if (false) {
      if (this._debugID) {
        var callback = function () {
          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
        };
        transaction.getReactMountReady().enqueue(callback, this);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;
      if (false) {
        if (child._debugID !== 0 && this._debugID !== 0) {
          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
        }
      }

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));

      if (false) {
        if (this._debugID !== 0) {
          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;

    if (false) {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
      }
    }
    var renderedComponent = inst.render();
    if (false) {
      if (this._debugID !== 0) {
        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
      }
    }

    if (false) {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedComponent === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedComponent;
    if ("production" !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (false) {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var ReactDOMComponentTree = __webpack_require__(8);
var ReactDefaultInjection = __webpack_require__(371);
var ReactMount = __webpack_require__(154);
var ReactReconciler = __webpack_require__(38);
var ReactUpdates = __webpack_require__(21);
var ReactVersion = __webpack_require__(158);

var findDOMNode = __webpack_require__(399);
var getHostComponentFromComposite = __webpack_require__(163);
var renderSubtreeIntoContainer = __webpack_require__(406);
var warning = __webpack_require__(6);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
/* eslint-enable camelcase */
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (false) {
  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

module.exports = ReactDOM;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var DisabledInputUtils = __webpack_require__(61);

/**
 * Implements a <button> host component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = {
  getHostProps: DisabledInputUtils.getHostProps
};

module.exports = ReactDOMButton;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 */

/* global hasOwnProperty:true */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var AutoFocusUtils = __webpack_require__(343);
var CSSPropertyOperations = __webpack_require__(345);
var DOMLazyTree = __webpack_require__(36);
var DOMNamespaces = __webpack_require__(91);
var DOMProperty = __webpack_require__(37);
var DOMPropertyOperations = __webpack_require__(144);
var EventConstants = __webpack_require__(22);
var EventPluginHub = __webpack_require__(49);
var EventPluginRegistry = __webpack_require__(92);
var ReactBrowserEventEmitter = __webpack_require__(62);
var ReactComponentBrowserEnvironment = __webpack_require__(147);
var ReactDOMButton = __webpack_require__(356);
var ReactDOMComponentFlags = __webpack_require__(148);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactDOMInput = __webpack_require__(363);
var ReactDOMOption = __webpack_require__(365);
var ReactDOMSelect = __webpack_require__(149);
var ReactDOMTextarea = __webpack_require__(368);
var ReactInstrumentation = __webpack_require__(10);
var ReactMultiChild = __webpack_require__(376);
var ReactServerRenderingTransaction = __webpack_require__(381);

var emptyFunction = __webpack_require__(16);
var escapeTextContentForBrowser = __webpack_require__(64);
var invariant = __webpack_require__(4);
var isEventSupported = __webpack_require__(109);
var keyOf = __webpack_require__(26);
var shallowEqual = __webpack_require__(89);
var validateDOMNesting = __webpack_require__(112);
var warning = __webpack_require__(6);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = keyOf({ style: null });
var HTML = keyOf({ __html: null });
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (false) {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (false) {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setContentChildForInstrumentation = emptyFunction;
if (false) {
  setContentChildForInstrumentation = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    var contentDebugID = debugID + '#text';

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    this._contentDebugID = contentDebugID;
    var text = '' + content;

    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);

    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

// NOTE: menuitem's close tag should be omitted, but that causes problems.
var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = null;
  this._domID = null;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (false) {
    this._ancestorInfo = null;
    setContentChildForInstrumentation.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the containing DOM component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'button':
        props = ReactDOMButton.getHostProps(this, props, hostParent);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (false) {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    if (false) {
      if (this._debugID) {
        var callback = function () {
          return ReactInstrumentation.debugTool.onComponentHasMounted(_this._debugID);
        };
        transaction.getReactMountReady().enqueue(callback, this);
      }
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (false) {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (false) {
          setContentChildForInstrumentation.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        if (false) {
          setContentChildForInstrumentation.call(this, contentToUse);
        }
        DOMLazyTree.queueText(lazyTree, contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var _this2 = this;

    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'button':
        lastProps = ReactDOMButton.getHostProps(this, lastProps);
        nextProps = ReactDOMButton.getHostProps(this, nextProps);
        break;
      case 'input':
        ReactDOMInput.updateWrapper(this);
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    if (this._tag === 'select') {
      // <select> value update needs to occur after <option> children
      // reconciliation
      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
    }

    if (false) {
      if (this._debugID) {
        var callback = function () {
          return ReactInstrumentation.debugTool.onComponentHasUpdated(_this2._debugID);
        };
        transaction.getReactMountReady().enqueue(callback, this);
      }
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (false) {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (false) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (false) {
          setContentChildForInstrumentation.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (false) {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (false) {
        setContentChildForInstrumentation.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
    this._domID = null;
    this._wrapperState = null;

    if (false) {
      setContentChildForInstrumentation.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMContainerInfo
 */

'use strict';

var validateDOMNesting = __webpack_require__(112);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (false) {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMEmptyComponent
 */

'use strict';

var _assign = __webpack_require__(7);

var DOMLazyTree = __webpack_require__(36);
var ReactDOMComponentTree = __webpack_require__(8);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = null;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFactories
 */

'use strict';

var ReactElement = __webpack_require__(20);

var mapObject = __webpack_require__(335);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if (false) {
    var ReactElementValidator = require('./ReactElementValidator');
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hgroup: 'hgroup',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  image: 'image',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOMFactories;

/***/ },
/* 361 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMFeatureFlags
 */

'use strict';

var ReactDOMFeatureFlags = {
  useCreateElement: true
};

module.exports = ReactDOMFeatureFlags;

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 */

'use strict';

var DOMChildrenOperations = __webpack_require__(90);
var ReactDOMComponentTree = __webpack_require__(8);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var DisabledInputUtils = __webpack_require__(61);
var DOMPropertyOperations = __webpack_require__(144);
var LinkedValueUtils = __webpack_require__(95);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactUpdates = __webpack_require__(21);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked !== undefined : props.value !== undefined;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined
    }, DisabledInputUtils.getHostProps(inst, props), {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (false) {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if (false) {
      inst._wrapperState.controlled = isControlled(props);
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (false) {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {

      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        node.defaultValue = '' + props.defaultValue;
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.
    if (props.type !== 'submit' && props.type !== 'reset') {
      node.value = node.value;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInstrumentation
 */

'use strict';

var debugTool = null;

if (false) {
  var ReactDOMDebugTool = require('./ReactDOMDebugTool');
  debugTool = ReactDOMDebugTool;
}

module.exports = { debugTool: debugTool };

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var _assign = __webpack_require__(7);

var ReactChildren = __webpack_require__(145);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactDOMSelect = __webpack_require__(149);

var warning = __webpack_require__(6);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  ReactChildren.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
       false ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (false) {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);

var getNodeForCharacterOffset = __webpack_require__(402);
var getTextContentAccessor = __webpack_require__(165);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var DOMChildrenOperations = __webpack_require__(90);
var DOMLazyTree = __webpack_require__(36);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactInstrumentation = __webpack_require__(10);

var escapeTextContentForBrowser = __webpack_require__(64);
var invariant = __webpack_require__(4);
var validateDOMNesting = __webpack_require__(112);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = null;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (false) {
      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting('#text', this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

        if (false) {
          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
        }
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ?  false ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(7);

var DisabledInputUtils = __webpack_require__(61);
var LinkedValueUtils = __webpack_require__(95);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactUpdates = __webpack_require__(21);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (false) {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (false) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
    node.value = node.textContent; // Detach value from defaultValue
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTreeTraversal
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ?  false ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ?  false ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ?  false ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], false, arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], true, arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], true, argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], false, argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var _assign = __webpack_require__(7);

var ReactUpdates = __webpack_require__(21);
var Transaction = __webpack_require__(53);

var emptyFunction = __webpack_require__(16);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d, e);
    } else {
      transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = __webpack_require__(344);
var ChangeEventPlugin = __webpack_require__(346);
var DefaultEventPluginOrder = __webpack_require__(348);
var EnterLeaveEventPlugin = __webpack_require__(349);
var HTMLDOMPropertyConfig = __webpack_require__(351);
var ReactComponentBrowserEnvironment = __webpack_require__(147);
var ReactDOMComponent = __webpack_require__(357);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactDOMEmptyComponent = __webpack_require__(359);
var ReactDOMTreeTraversal = __webpack_require__(369);
var ReactDOMTextComponent = __webpack_require__(367);
var ReactDefaultBatchingStrategy = __webpack_require__(370);
var ReactEventListener = __webpack_require__(373);
var ReactInjection = __webpack_require__(374);
var ReactReconcileTransaction = __webpack_require__(379);
var SVGDOMPropertyConfig = __webpack_require__(383);
var SelectEventPlugin = __webpack_require__(384);
var SimpleEventPlugin = __webpack_require__(385);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = __webpack_require__(49);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 */

'use strict';

var _assign = __webpack_require__(7);

var EventListener = __webpack_require__(139);
var ExecutionEnvironment = __webpack_require__(9);
var PooledClass = __webpack_require__(27);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactUpdates = __webpack_require__(21);

var getEventTarget = __webpack_require__(108);
var getUnboundedScrollPosition = __webpack_require__(330);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = __webpack_require__(37);
var EventPluginHub = __webpack_require__(49);
var EventPluginUtils = __webpack_require__(93);
var ReactComponentEnvironment = __webpack_require__(97);
var ReactClass = __webpack_require__(146);
var ReactEmptyComponent = __webpack_require__(150);
var ReactBrowserEventEmitter = __webpack_require__(62);
var ReactHostComponent = __webpack_require__(152);
var ReactUpdates = __webpack_require__(21);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = __webpack_require__(396);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactComponentEnvironment = __webpack_require__(97);
var ReactInstanceMap = __webpack_require__(51);
var ReactInstrumentation = __webpack_require__(10);
var ReactMultiChildUpdateTypes = __webpack_require__(155);

var ReactCurrentOwner = __webpack_require__(28);
var ReactReconciler = __webpack_require__(38);
var ReactChildReconciler = __webpack_require__(353);

var emptyFunction = __webpack_require__(16);
var flattenChildren = __webpack_require__(400);
var invariant = __webpack_require__(4);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.SET_MARKUP,
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setParentForInstrumentation = emptyFunction;
var setChildrenForInstrumentation = emptyFunction;
if (false) {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setParentForInstrumentation = function (child) {
    if (child._debugID !== 0) {
      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
    }
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (false) {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      if (false) {
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          if (false) {
            setParentForInstrumentation.call(this, child);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (false) {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ?  false ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (false) {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(4);

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function (object) {
    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPureComponent
 */

'use strict';

var _assign = __webpack_require__(7);

var ReactComponent = __webpack_require__(96);
var ReactNoopUpdateQueue = __webpack_require__(100);

var emptyObject = __webpack_require__(47);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 */

'use strict';

var _assign = __webpack_require__(7);

var CallbackQueue = __webpack_require__(143);
var PooledClass = __webpack_require__(27);
var ReactBrowserEventEmitter = __webpack_require__(62);
var ReactInputSelection = __webpack_require__(153);
var ReactInstrumentation = __webpack_require__(10);
var Transaction = __webpack_require__(53);
var ReactUpdateQueue = __webpack_require__(104);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (false) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = __webpack_require__(377);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;

  return(
    // This has a few false positives w/r/t empty components.
    prevEmpty || nextEmpty || nextElement.ref !== prevElement.ref ||
    // If owner changes but we have an unchanged function ref, don't update refs
    typeof nextElement.ref === 'string' && nextElement._owner !== prevElement._owner
  );
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || element === false) {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 */

'use strict';

var _assign = __webpack_require__(7);

var PooledClass = __webpack_require__(27);
var Transaction = __webpack_require__(53);
var ReactInstrumentation = __webpack_require__(10);
var ReactServerUpdateQueue = __webpack_require__(382);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (false) {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerUpdateQueue
 * 
 */

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = __webpack_require__(104);
var Transaction = __webpack_require__(53);
var warning = __webpack_require__(6);

function warnNoop(publicInstance, callerName) {
  if (false) {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  /* :: transaction: Transaction; */

  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;

/***/ },
/* 383 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

'use strict';

var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = __webpack_require__(22);
var EventPropagators = __webpack_require__(50);
var ExecutionEnvironment = __webpack_require__(9);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactInputSelection = __webpack_require__(153);
var SyntheticEvent = __webpack_require__(23);

var getActiveElement = __webpack_require__(141);
var isTextInputElement = __webpack_require__(167);
var keyOf = __webpack_require__(26);
var shallowEqual = __webpack_require__(89);

var topLevelTypes = EventConstants.topLevelTypes;

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSelect: null }),
      captured: keyOf({ onSelectCapture: null })
    },
    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;
var ON_SELECT_KEY = keyOf({ onSelect: null });

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case topLevelTypes.topSelectionChange:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === ON_SELECT_KEY) {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var EventConstants = __webpack_require__(22);
var EventListener = __webpack_require__(139);
var EventPropagators = __webpack_require__(50);
var ReactDOMComponentTree = __webpack_require__(8);
var SyntheticAnimationEvent = __webpack_require__(386);
var SyntheticClipboardEvent = __webpack_require__(387);
var SyntheticEvent = __webpack_require__(23);
var SyntheticFocusEvent = __webpack_require__(390);
var SyntheticKeyboardEvent = __webpack_require__(392);
var SyntheticMouseEvent = __webpack_require__(63);
var SyntheticDragEvent = __webpack_require__(389);
var SyntheticTouchEvent = __webpack_require__(393);
var SyntheticTransitionEvent = __webpack_require__(394);
var SyntheticUIEvent = __webpack_require__(52);
var SyntheticWheelEvent = __webpack_require__(395);

var emptyFunction = __webpack_require__(16);
var getEventCharCode = __webpack_require__(106);
var invariant = __webpack_require__(4);
var keyOf = __webpack_require__(26);

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  abort: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAbort: true }),
      captured: keyOf({ onAbortCapture: true })
    }
  },
  animationEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationEnd: true }),
      captured: keyOf({ onAnimationEndCapture: true })
    }
  },
  animationIteration: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationIteration: true }),
      captured: keyOf({ onAnimationIterationCapture: true })
    }
  },
  animationStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onAnimationStart: true }),
      captured: keyOf({ onAnimationStartCapture: true })
    }
  },
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onBlur: true }),
      captured: keyOf({ onBlurCapture: true })
    }
  },
  canPlay: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlay: true }),
      captured: keyOf({ onCanPlayCapture: true })
    }
  },
  canPlayThrough: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCanPlayThrough: true }),
      captured: keyOf({ onCanPlayThroughCapture: true })
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onClick: true }),
      captured: keyOf({ onClickCapture: true })
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onContextMenu: true }),
      captured: keyOf({ onContextMenuCapture: true })
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCopy: true }),
      captured: keyOf({ onCopyCapture: true })
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onCut: true }),
      captured: keyOf({ onCutCapture: true })
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDoubleClick: true }),
      captured: keyOf({ onDoubleClickCapture: true })
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrag: true }),
      captured: keyOf({ onDragCapture: true })
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnd: true }),
      captured: keyOf({ onDragEndCapture: true })
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragEnter: true }),
      captured: keyOf({ onDragEnterCapture: true })
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragExit: true }),
      captured: keyOf({ onDragExitCapture: true })
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragLeave: true }),
      captured: keyOf({ onDragLeaveCapture: true })
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragOver: true }),
      captured: keyOf({ onDragOverCapture: true })
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDragStart: true }),
      captured: keyOf({ onDragStartCapture: true })
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDrop: true }),
      captured: keyOf({ onDropCapture: true })
    }
  },
  durationChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onDurationChange: true }),
      captured: keyOf({ onDurationChangeCapture: true })
    }
  },
  emptied: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEmptied: true }),
      captured: keyOf({ onEmptiedCapture: true })
    }
  },
  encrypted: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEncrypted: true }),
      captured: keyOf({ onEncryptedCapture: true })
    }
  },
  ended: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onEnded: true }),
      captured: keyOf({ onEndedCapture: true })
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onError: true }),
      captured: keyOf({ onErrorCapture: true })
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onFocus: true }),
      captured: keyOf({ onFocusCapture: true })
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInput: true }),
      captured: keyOf({ onInputCapture: true })
    }
  },
  invalid: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onInvalid: true }),
      captured: keyOf({ onInvalidCapture: true })
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyDown: true }),
      captured: keyOf({ onKeyDownCapture: true })
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyPress: true }),
      captured: keyOf({ onKeyPressCapture: true })
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onKeyUp: true }),
      captured: keyOf({ onKeyUpCapture: true })
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoad: true }),
      captured: keyOf({ onLoadCapture: true })
    }
  },
  loadedData: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedData: true }),
      captured: keyOf({ onLoadedDataCapture: true })
    }
  },
  loadedMetadata: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadedMetadata: true }),
      captured: keyOf({ onLoadedMetadataCapture: true })
    }
  },
  loadStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onLoadStart: true }),
      captured: keyOf({ onLoadStartCapture: true })
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseDown: true }),
      captured: keyOf({ onMouseDownCapture: true })
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseMove: true }),
      captured: keyOf({ onMouseMoveCapture: true })
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOut: true }),
      captured: keyOf({ onMouseOutCapture: true })
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseOver: true }),
      captured: keyOf({ onMouseOverCapture: true })
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onMouseUp: true }),
      captured: keyOf({ onMouseUpCapture: true })
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPaste: true }),
      captured: keyOf({ onPasteCapture: true })
    }
  },
  pause: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPause: true }),
      captured: keyOf({ onPauseCapture: true })
    }
  },
  play: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlay: true }),
      captured: keyOf({ onPlayCapture: true })
    }
  },
  playing: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onPlaying: true }),
      captured: keyOf({ onPlayingCapture: true })
    }
  },
  progress: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onProgress: true }),
      captured: keyOf({ onProgressCapture: true })
    }
  },
  rateChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onRateChange: true }),
      captured: keyOf({ onRateChangeCapture: true })
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onReset: true }),
      captured: keyOf({ onResetCapture: true })
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onScroll: true }),
      captured: keyOf({ onScrollCapture: true })
    }
  },
  seeked: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeked: true }),
      captured: keyOf({ onSeekedCapture: true })
    }
  },
  seeking: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSeeking: true }),
      captured: keyOf({ onSeekingCapture: true })
    }
  },
  stalled: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onStalled: true }),
      captured: keyOf({ onStalledCapture: true })
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSubmit: true }),
      captured: keyOf({ onSubmitCapture: true })
    }
  },
  suspend: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onSuspend: true }),
      captured: keyOf({ onSuspendCapture: true })
    }
  },
  timeUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTimeUpdate: true }),
      captured: keyOf({ onTimeUpdateCapture: true })
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchCancel: true }),
      captured: keyOf({ onTouchCancelCapture: true })
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchEnd: true }),
      captured: keyOf({ onTouchEndCapture: true })
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchMove: true }),
      captured: keyOf({ onTouchMoveCapture: true })
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTouchStart: true }),
      captured: keyOf({ onTouchStartCapture: true })
    }
  },
  transitionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onTransitionEnd: true }),
      captured: keyOf({ onTransitionEndCapture: true })
    }
  },
  volumeChange: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onVolumeChange: true }),
      captured: keyOf({ onVolumeChangeCapture: true })
    }
  },
  waiting: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWaiting: true }),
      captured: keyOf({ onWaitingCapture: true })
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({ onWheel: true }),
      captured: keyOf({ onWheelCapture: true })
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topAbort: eventTypes.abort,
  topAnimationEnd: eventTypes.animationEnd,
  topAnimationIteration: eventTypes.animationIteration,
  topAnimationStart: eventTypes.animationStart,
  topBlur: eventTypes.blur,
  topCanPlay: eventTypes.canPlay,
  topCanPlayThrough: eventTypes.canPlayThrough,
  topClick: eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy: eventTypes.copy,
  topCut: eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag: eventTypes.drag,
  topDragEnd: eventTypes.dragEnd,
  topDragEnter: eventTypes.dragEnter,
  topDragExit: eventTypes.dragExit,
  topDragLeave: eventTypes.dragLeave,
  topDragOver: eventTypes.dragOver,
  topDragStart: eventTypes.dragStart,
  topDrop: eventTypes.drop,
  topDurationChange: eventTypes.durationChange,
  topEmptied: eventTypes.emptied,
  topEncrypted: eventTypes.encrypted,
  topEnded: eventTypes.ended,
  topError: eventTypes.error,
  topFocus: eventTypes.focus,
  topInput: eventTypes.input,
  topInvalid: eventTypes.invalid,
  topKeyDown: eventTypes.keyDown,
  topKeyPress: eventTypes.keyPress,
  topKeyUp: eventTypes.keyUp,
  topLoad: eventTypes.load,
  topLoadedData: eventTypes.loadedData,
  topLoadedMetadata: eventTypes.loadedMetadata,
  topLoadStart: eventTypes.loadStart,
  topMouseDown: eventTypes.mouseDown,
  topMouseMove: eventTypes.mouseMove,
  topMouseOut: eventTypes.mouseOut,
  topMouseOver: eventTypes.mouseOver,
  topMouseUp: eventTypes.mouseUp,
  topPaste: eventTypes.paste,
  topPause: eventTypes.pause,
  topPlay: eventTypes.play,
  topPlaying: eventTypes.playing,
  topProgress: eventTypes.progress,
  topRateChange: eventTypes.rateChange,
  topReset: eventTypes.reset,
  topScroll: eventTypes.scroll,
  topSeeked: eventTypes.seeked,
  topSeeking: eventTypes.seeking,
  topStalled: eventTypes.stalled,
  topSubmit: eventTypes.submit,
  topSuspend: eventTypes.suspend,
  topTimeUpdate: eventTypes.timeUpdate,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd: eventTypes.touchEnd,
  topTouchMove: eventTypes.touchMove,
  topTouchStart: eventTypes.touchStart,
  topTransitionEnd: eventTypes.transitionEnd,
  topVolumeChange: eventTypes.volumeChange,
  topWaiting: eventTypes.waiting,
  topWheel: eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var ON_CLICK_KEY = keyOf({ onClick: null });
var onClickListeners = {};

function getDictionaryKey(inst) {
  return '.' + inst._rootNodeID;
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topAbort:
      case topLevelTypes.topCanPlay:
      case topLevelTypes.topCanPlayThrough:
      case topLevelTypes.topDurationChange:
      case topLevelTypes.topEmptied:
      case topLevelTypes.topEncrypted:
      case topLevelTypes.topEnded:
      case topLevelTypes.topError:
      case topLevelTypes.topInput:
      case topLevelTypes.topInvalid:
      case topLevelTypes.topLoad:
      case topLevelTypes.topLoadedData:
      case topLevelTypes.topLoadedMetadata:
      case topLevelTypes.topLoadStart:
      case topLevelTypes.topPause:
      case topLevelTypes.topPlay:
      case topLevelTypes.topPlaying:
      case topLevelTypes.topProgress:
      case topLevelTypes.topRateChange:
      case topLevelTypes.topReset:
      case topLevelTypes.topSeeked:
      case topLevelTypes.topSeeking:
      case topLevelTypes.topStalled:
      case topLevelTypes.topSubmit:
      case topLevelTypes.topSuspend:
      case topLevelTypes.topTimeUpdate:
      case topLevelTypes.topVolumeChange:
      case topLevelTypes.topWaiting:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topAnimationEnd:
      case topLevelTypes.topAnimationIteration:
      case topLevelTypes.topAnimationStart:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case topLevelTypes.topTransitionEnd:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    if (registrationName === ON_CLICK_KEY) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === ON_CLICK_KEY) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticAnimationEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 */

'use strict';

var SyntheticMouseEvent = __webpack_require__(63);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 */

'use strict';

var SyntheticUIEvent = __webpack_require__(52);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 */

'use strict';

var SyntheticUIEvent = __webpack_require__(52);

var getEventCharCode = __webpack_require__(106);
var getEventKey = __webpack_require__(401);
var getEventModifierState = __webpack_require__(107);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 */

'use strict';

var SyntheticUIEvent = __webpack_require__(52);

var getEventModifierState = __webpack_require__(107);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTransitionEvent
 */

'use strict';

var SyntheticEvent = __webpack_require__(23);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 */

'use strict';

var SyntheticMouseEvent = __webpack_require__(63);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

/***/ },
/* 396 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 * 
 */

'use strict';

var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule checkReactTypeSpec
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactPropTypeLocationNames = __webpack_require__(101);
var ReactPropTypesSecret = __webpack_require__(103);

var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

var ReactComponentTreeDevtool;

if (typeof process !== 'undefined' && {"NODE_ENV":"production"} && "production" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeDevtool = __webpack_require__(98);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (false) {
          if (!ReactComponentTreeDevtool) {
            ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
          }
        }

         false ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 */

'use strict';

var CSSProperty = __webpack_require__(142);
var warning = __webpack_require__(6);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (false) {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 */

'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(28);
var ReactDOMComponentTree = __webpack_require__(8);
var ReactInstanceMap = __webpack_require__(51);

var getHostComponentFromComposite = __webpack_require__(163);
var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (false) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
     true ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
     true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 * 
 */

'use strict';

var KeyEscapeUtils = __webpack_require__(94);
var traverseAllChildren = __webpack_require__(111);
var warning = __webpack_require__(6);

var ReactComponentTreeDevtool;

if (typeof process !== 'undefined' && {"NODE_ENV":"production"} && "production" === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeDevtool = __webpack_require__(98);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (false) {
      if (!ReactComponentTreeDevtool) {
        ReactComponentTreeDevtool = require('./ReactComponentTreeDevtool');
      }
      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (false) {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(48)))

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 */

'use strict';

var getEventCharCode = __webpack_require__(106);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

/***/ },
/* 402 */
/***/ function(module, exports) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getVendorPrefixedEventName
 */

'use strict';

var ExecutionEnvironment = __webpack_require__(9);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var _prodInvariant = __webpack_require__(5);

var ReactElement = __webpack_require__(20);

var invariant = __webpack_require__(4);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
  return children;
}

module.exports = onlyChild;

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = __webpack_require__(64);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule renderSubtreeIntoContainer
*/

'use strict';

var ReactMount = __webpack_require__(154);

module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = __webpack_require__(338);
var util = __webpack_require__(408);

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = __webpack_require__(341);

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};


/***/ },
/* 408 */
/***/ function(module, exports) {

"use strict";
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};


/***/ },
/* 409 */
/***/ function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			configurable: false,
			get: function() { return module.l; }
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			configurable: false,
			get: function() { return module.i; }
		});
		module.webpackPolyfill = 1;
	}
	return module;
}


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
'use strict';

var _classCallCheck2 = __webpack_require__(0);

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = __webpack_require__(3);

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = __webpack_require__(2);

var _inherits3 = _interopRequireDefault(_inherits2);

var _globals = __webpack_require__(1);

var _appComponent = __webpack_require__(170);

var _appComponent2 = _interopRequireDefault(_appComponent);

var _scrollbarComponent = __webpack_require__(17);

var _scrollbarComponent2 = _interopRequireDefault(_scrollbarComponent);

var _controlsComponent = __webpack_require__(11);

var _controlsComponent2 = _interopRequireDefault(_controlsComponent);

var _modalManager = __webpack_require__(18);

var _modalManager2 = _interopRequireDefault(_modalManager);

var _jsonLoader = __webpack_require__(114);

var _jsonLoader2 = _interopRequireDefault(_jsonLoader);

var _photoRoll = __webpack_require__(171);

var PhotoRoll = _interopRequireWildcard(_photoRoll);

var _controls = __webpack_require__(12);

var _controls2 = _interopRequireDefault(_controls);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The React UI
 * @class
 * @alias ReactUI
 * @extends PhotoEditorSDK.EventEmitter
 * @memberof PhotoEditorSDK.UI
 */
/*!
 * This file is part of PhotoEditorSDK.
 *
 * Copyright (C) 2016 9elements GmbH <contact@9elements.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, without
 * modification, are permitted provided that the following license agreement
 * is approved and a legal/financial contract was signed by the user.
 * The license agreement can be found under following link:
 *
 * https://www.photoeditorsdk.com/LICENSE.txt
 */
var ReactUI = function (_EventEmitter) {
  (0, _inherits3.default)(ReactUI, _EventEmitter);

  /**
   * Creates an UI instance
   * @param  {Object} [options = {}]
   * @param  {DOMElement} [options.container] - The container that the UI should be rendered to
   * @param  {String} [options.title = 'PhotoEditor SDK'] - Only available for licensees
   * @param  {String} [options.language = 'en'] - Currently `en` and `de` are supported
   * @param  {String} [options.logLevel] - `trace`, `info`, `warn`, `error` or `log`
   *
   * @param  {Boolean} [options.enableUpload = true] - Should the user be able to upload their own photos?
   * @param  {Boolean} [options.enableWebcam = true] - Enables webcam support. Disabled on mobile devices.
   *
   * @param  {Boolean} [options.showCloseButton = false] - Should the close button be displayed?
   * @param  {Boolean} [options.showHeader = true] - Should the header (with title text) be displayed?
   *                                                 Should only be set to `false` by licensees.
   * @param  {Boolean} [options.showTopBar = true] - Should the top bar (new / zoom / undo / export) be displayed?
   *
   * @param  {Object} [options.photoRoll]
   * @param  {PhotoEditorSDK.UI.ReactUI.PhotoRoll.Provider} provider - The class providing all data
   *                                                                 for the photo roll
   *
   * @param  {Object} [options.editor]
   * @param  {Image} [options.editor.image] - The image that the user can edit
   * @param  {String} [options.editor.preferredRenderer = 'webgl'] - `webgl` or `canvas`
   * @param  {Number} [options.editor.pixelRatio = 1] - If none is given, PhotoEditorSDK automatically
   *   detects the current device's pixel ratio
   * @param  {Boolean} [options.editor.responsive = false] - Should the editor re-render on window resize?
   * @param  {Boolean} [options.editor.enableDrag = true] - Should dragging the canvas be enabled?
   * @param  {Boolean} [options.editor.enableZoom = true] - Should zooming be enabled?
   * @param  {Boolean} [options.editor.smoothDownscaling = false] - Toggles smooth downscaling
   * @param  {Boolean} [options.editor.displayResizeMessage = true] - Should a message be displayed
   *                                                       when the image has been scaled down
   *                                                       for performance?
   * @param  {String[]} [options.editor.tools] - The enabled tools. Available are: `crop`, `rotation`,
   *                                    `flip`, `filter`, `brightness`, `saturation`, `contrast`,
   *                                    `clarity`, `exposure`, `shadows`, `highlights`, `text`,
   *                                    `sticker`, `brush`, `radial-focus`, `linear-focus` and
   *                                    `border`
   * @param  {(String[]|Array[])} [options.editor.controlsOrder] - The order in which the controls are displayed.
   *                                           Available are `crop`, `filter`,
   *                                           `adjustments`, `text`, `sticker`, `brush`, `focus`,
   *                                           `border`. Can be grouped in arrays which will be
   *                                           displayed with separators.
   * @param  {String[]} [options.editor.operationsOrder] - The order in which operations are added to
   *                                              the stack. Changing this may affect the
   *                                              performance.
   * @param  {Object} [options.editor.controlsOptions] - Options that are passed to specific controls. See
   *                                            the documentation for each control to learn more
   *                                            about available values.
   * @param {Object[]} [options.editor.forceControls] - An array of objects specifying the controls
   *                                                  the user needs to use before being able to
   *                                                  use the actual editor.
   *
   * @param  {Object} [options.editor.maxMegaPixels] - Maximum amount of megapixels per device type
   * @param  {Number} [options.editor.maxMegaPixels.desktop = 10]
   * @param  {Number} [options.editor.maxMegaPixels.mobile = 5]
   *
   * @param  {Object} [options.editor.export]
   * @param  {Boolean} [options.editor.export.showButton = true] - Should the `export` button be displayed?
   * @param  {String} [options.editor.export.format = 'image/png'] - The export format. Available formats
   * @param  {PhotoEditorSDK.RenderType} [options.editor.export.type] - The export type (image or data url)
   * @param  {Boolean} [options.editor.export.download] - Should the result be presented as a download?
   * @param  {String} [options.editor.export.fileBasename = 'photoeditorsdk-export'] - The basename
   *                                                      of the exported file (file extension will
   *                                                      be added automatically)
   * @param {Number} [options.editor.export.quality = 0.8] - The export quality (0...1, only supported
   *                                                for JPG images)
   *
   * @param  {Object} [options.assets]
   * @param  {String} [options.assets.baseUrl = '/assets'] - Path that is prepended to all asset paths
   * @param  {Function} [options.assets.resolver] - A function resolving a path to another path.
   */
  function ReactUI() {
    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    (0, _classCallCheck3.default)(this, ReactUI);

    var _this = (0, _possibleConstructorReturn3.default)(this, _EventEmitter.call(this));

    _this._mediator = new _globals.EventEmitter();
    _this._options = options;
    _this._initOptions();
    _this._initLanguage();
    _this._initEvents();
    _this._disposed = false;

    _this.run();
    return _this;
  }

  /**
   * Main entry point for the UI
   * @private
   */


  ReactUI.prototype.run = function run() {
    this._registerWebFonts();

    // Container has to be position: relative
    this._options.container.style.position = 'relative';
    this._render();
  };

  /**
   * Renders the UI
   * @private
   */


  ReactUI.prototype._render = function _render() {
    var component = _globals.React.createElement(_appComponent2.default, {
      ui: this,
      mediator: this._mediator,
      options: this._options });

    if (this._options.renderReturnsComponent) {
      return component;
    } else {
      this._component = _globals.ReactDOM.render(component, this._options.container);
    }
  };

  /**
   * Exports an image
   * @param {Boolean} download = false
   * @return {Promise}
   */


  ReactUI.prototype.export = function _export() {
    var _component;

    return (_component = this._component).export.apply(_component, arguments);
  };

  /**
   * Serializes the editor state
   * @return {Promise}
   */


  ReactUI.prototype.serialize = function serialize() {
    var _component2;

    return (_component2 = this._component).serialize.apply(_component2, arguments);
  };

  /**
   * Deserializes the given data
   * @param  {Object} data
   * @return {Promise}
   */


  ReactUI.prototype.deserialize = function deserialize(data) {
    return this._component.deserialize(data);
  };

  // -------------------------------------------------------------------------- INITIALIZATION

  /**
   * Initializes the default options
   * @private
   */


  ReactUI.prototype._initOptions = function _initOptions() {
    this._options = _globals.SDKUtils.defaults(this._options, {
      language: 'en',
      title: 'PhotoEditor SDK',

      editor: {},
      assets: {},
      photoRoll: {},

      enableUpload: true,
      enableWebcam: true,

      showCloseButton: false,
      showHeader: true,
      showTopBar: true,
      responsive: false
    });

    this._options.editor = _globals.SDKUtils.defaults(this._options.editor || {}, {
      pixelRatio: typeof window !== 'undefined' && window.devicePixelRatio || 1,
      preferredRenderer: 'webgl',
      enableZoom: true,
      enableDrag: true,
      smoothDownscaling: false,
      displayResizeMessage: true,
      maxMegaPixels: {},
      forceControls: [],
      tools: ['crop', 'filter', 'brightness', 'saturation', 'contrast', 'clarity', 'exposure', 'shadows', 'highlights', 'text', 'sticker', 'brush', 'radial-focus', 'linear-focus', 'border'],
      controlsOrder: ['crop', ['filter', 'adjustments'], ['text', 'sticker', 'brush'], ['focus', 'border']],
      operationsOrder: [
      // First, all operations that affect the image dimensions
      'exif-orientation', // Automatically created by SDK
      'orientation', 'crop',

      // Then color operations (first filter, then fine-tuning)
      'filter', 'adjustments',

      // Then post-processing
      'radial-focus', 'linear-focus', 'sprite', 'border', 'watermark'],
      controlsOptions: {}
    });

    this._options.editor.maxMegaPixels = _globals.SDKUtils.defaults(this._options.editor.maxMegaPixels, {
      mobile: 5,
      desktop: 10
    });

    this._options.editor.export = _globals.SDKUtils.defaults(this._options.editor.export || {}, {
      showButton: true,
      format: 'image/png',
      type: _globals.RenderType.IMAGE,
      download: true,
      fileBasename: 'photoeditorsdk-export',
      quality: 0.8
    });

    this._options.photoRoll = _globals.SDKUtils.defaults(this._options.photoRoll || {}, {
      provider: null
    });

    this._options.extensions = _globals.SDKUtils.defaults(this._options.extensions || {}, {
      languages: {},
      operations: [],
      controls: []
    });

    this._options.assets = _globals.SDKUtils.defaults(this._options.assets || {}, {
      baseUrl: 'assets',
      resolver: null
    });
  };

  /**
   * Creates a <style> block in <head> that specifies the web fonts
   * that we use in this UI. We're doing this in JS because the assets
   * path is dynamic.
   * @private
   */


  ReactUI.prototype._registerWebFonts = function _registerWebFonts() {
    var regularFontPath = this.getAssetPath('fonts/montserrat-regular.woff', true, true);
    var lightFontPath = this.getAssetPath('fonts/montserrat-light.woff', true, true);

    var css = '\n      // Injected by PhotoEditorSDK\n      @font-face {\n        font-family: "__pesdk_Montserrat";\n        src: url(\'' + regularFontPath + '\') format(\'woff\');\n        font-weight: normal;\n        font-style: normal;\n      }\n\n      @font-face {\n        font-family: "__pesdk_Montserrat";\n        src: url(\'' + lightFontPath + '\') format(\'woff\');\n        font-weight: 100;\n        font-style: normal;\n      }\n    ';

    this._webFontsStyle = document.createElement('style');
    this._webFontsStyle.innerHTML = css;

    var head = document.getElementsByTagName('head')[0];
    head.appendChild(this._webFontsStyle);
  };

  // -------------------------------------------------------------------------- EVENTS

  /**
   * Catches mediator events and emits them here
   * @private
   */


  ReactUI.prototype._initEvents = function _initEvents() {
    this._mediator.pipeEvents(this);
  };

  /**
   * Unpipes the vents
   * @private
   */


  ReactUI.prototype._disposeEvents = function _disposeEvents() {
    this._mediator.unpipeEvents(this);
  };

  // -------------------------------------------------------------------------- I18N

  /**
   * Initializes the internationalization
   * @private
   */


  ReactUI.prototype._initLanguage = function _initLanguage() {
    this._languages = _globals.SDKUtils.deepDefaults(this._options.extensions.languages, {
      de: __webpack_require__(172),
      en: __webpack_require__(173)
    });
    this._language = this._languages[this._options.language];
    if (!this._language) {
      _globals.Log.error(this.constructor.name, 'Language `' + this._options.language + '` not found!');
    }
  };

  /**
   * Returns the translation for `key`
   * @param  {String} key
   * @param  {Object} [interpolationOptions]
   * @return {String}
   */


  ReactUI.prototype.translate = function translate(key, interpolationOptions) {
    return _globals.Utils.translate(this._language, key, interpolationOptions);
  };

  /**
   * Sets the image to the given one
   * @param {Image} image
   */


  ReactUI.prototype.setImage = function setImage(image) {
    if (!this._component) return;
    this._component.setImage(image);
  };

  /**
   * Returns the resolved asset path for the given asset name
   * @param  {String} asset
   * @param  {Boolean} uiAsset = false
   * @param  {Boolean} disableRetina = false
   * @return {String}
   */


  ReactUI.prototype.getAssetPath = function getAssetPath(asset) {
    var uiAsset = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
    var disableRetina = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
    var _options$assets = this._options.assets;
    var baseUrl = _options$assets.baseUrl;
    var resolver = _options$assets.resolver;

    var path = baseUrl + '/' + asset;

    if (uiAsset) {
      if (!disableRetina) {
        // Append @2x if device's pixel ratio > 1
        var pixelRatio = typeof window !== 'undefined' && window.devicePixelRatio || 1;
        if (pixelRatio > 1) {
          var regex = /\.[\w\?=]+$/;
          asset = asset.replace(regex, function (match) {
            return '@2x' + match;
          });
        }
      }

      path = baseUrl + '/ui/react/' + asset;
    }

    if (typeof resolver !== 'undefined' && resolver !== null) {
      path = resolver(path);
    }

    return path;
  };

  /**
   * Disposes the UI
   */


  ReactUI.prototype.dispose = function dispose() {
    if (this._disposed) {
      throw new Error('This instance of PhotoEditorSDK is already disposed.');
    }
    this._disposed = true;

    // Remove web fonts style
    this._webFontsStyle.parentNode.removeChild(this._webFontsStyle);

    // Unmount AppComponent
    _globals.ReactDOM.unmountComponentAtNode(this._options.container);

    this._disposeEvents();
  };

  return ReactUI;
}(_globals.EventEmitter);

/**
 * Export event
 *
 * @event PhotoEditorSDK.UI.ReactUI#export
 * @type {Image|String|Blob}
 */

/**
 * Operation created event
 *
 * @event PhotoEditorSDK.UI.ReactUI#operation:created
 * @type {PhotoEditorSDK.Operation}
 */

/**
 * Operation removed event
 *
 * @event PhotoEditorSDK.UI.ReactUI#operation:removed
 * @type {PhotoEditorSDK.Operation}
 */

/**
 * History undo event
 *
 * @event PhotoEditorSDK.UI.ReactUI#history:undo
 */

/**
 * Controls switched event
 *
 * @event PhotoEditorSDK.UI.ReactUI#controls:switched
 * @type {PhotoEditorSDK.UI.ReactUI.Controls}
 */

/**
 * A unique string that represents this UI
 * @type {String}
 */


ReactUI.prototype.identifier = 'react';

// Export extendable stuff
ReactUI.BaseComponent = _globals.BaseComponent;
ReactUI.Controls = _controls2.default;
ReactUI.ControlsComponent = _controlsComponent2.default;
ReactUI.React = _globals.React;
ReactUI.ReactBEM = _globals.ReactBEM;
ReactUI.SharedState = _globals.SharedState;
ReactUI.Constants = _globals.Constants;
ReactUI.Utils = _globals.Utils;
ReactUI.ScrollbarComponent = _scrollbarComponent2.default;
ReactUI.ModalManager = _modalManager2.default;
ReactUI.JSONLoader = _jsonLoader2.default;
ReactUI.PhotoRoll = PhotoRoll;

/**
 * The PhotoEditorSDK UI can also be integrated as a React.js component
 * @class
 * @extends React.Component
 * @memberof PhotoEditorSDK.UI.ReactUI
 */

var ReactComponent = function (_React$Component) {
  (0, _inherits3.default)(ReactComponent, _React$Component);

  function ReactComponent() {
    (0, _classCallCheck3.default)(this, ReactComponent);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var _this2 = (0, _possibleConstructorReturn3.default)(this, _React$Component.call.apply(_React$Component, [this].concat(args)));

    _this2._ui = new ReactUI(_this2.props);
    return _this2;
  }

  /**
   * Renders this component
   * @return {React.Element}
   */


  ReactComponent.prototype.render = function render() {
    return this._ui.render();
  };

  return ReactComponent;
}(_globals.React.Component);

ReactUI.ReactComponent = ReactComponent;

// Extend PhotoEditorSDK object
_globals.SDK.UI = _globals.SDK.UI || {};
_globals.SDK.UI.ReactUI = ReactUI;

module.exports = ReactUI;

/***/ }
/******/ ])
});
;